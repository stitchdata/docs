{
  "paths": {
    "/users/{user_id}/attribute_values": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user_attribute_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User Attribute",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_can_edit": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Can the user set this value",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Value of attribute for user"
                  },
                  "value_is_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of user attribute",
                    "readOnly": true
                  },
                  "rank": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Precedence for setting value on user (lowest wins)",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "source": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "How user got this value for this attribute",
                    "readOnly": true
                  },
                  "hidden_value_domain_whitelist": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "If this user attribute is hidden, whitelist of destinations to which it may be sent.",
                    "readOnly": true
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "label": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Human-friendly label for user attribute",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Value of user attribute."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get user attribute values for a given user.\n\nReturns the values of specified user attributes (or all user attributes) for a certain user.\n\nA value for each user attribute is searched for in the following locations, in this order:\n1. in the user's account information\n1. in groups that the user is a member of\n1. the default value of the user attribute\n\nIf more than one group has a value defined for a user attribute, the group with the lowest rank wins.\n\nThe response will only include user attributes for which values were found. Use `include_unset=true` to include\nempty records for user attributes with no value.\n\nThe value of all hidden user attributes will be blank.\n",
        "summary": "Get User Attribute Values",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "collectionFormat": "csv",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Specific user attributes to request. Omit or leave blank to request all user attributes.",
            "required": false,
            "name": "user_attribute_ids",
            "type": "array",
            "in": "query"
          },
          {
            "name": "all_values",
            "description": "If true, returns all values in the search path instead of just the first value found. Useful for debugging group precedence.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "include_unset",
            "description": "If true, returns an empty record for each requested attribute that has no user, group, or default value.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_attribute_user_values",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/projects/{project_id}/git_branches": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "ref": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                  },
                  "is_remote": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a remote ref exists for the branch",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                    "readOnly": true
                  },
                  "behind_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of commits the local branch is behind the remote",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "remote_ref": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The resolved ref of this branch remote.",
                    "readOnly": true
                  },
                  "is_production": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not this is the production branch",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                  },
                  "error": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of error",
                    "readOnly": true
                  },
                  "readonly": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not this branch is readonly",
                    "readOnly": true
                  },
                  "remote": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The name of the remote",
                    "readOnly": true
                  },
                  "message": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Message describing an error if present",
                    "readOnly": true
                  },
                  "remote_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The short name on the remote",
                    "readOnly": true
                  },
                  "owner_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of the owner of a personal branch",
                    "readOnly": true
                  },
                  "ahead_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of commits the local branch is ahead of the remote",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_local": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a local ref exists for the branch",
                    "readOnly": true
                  },
                  "commit_at": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "UNIX timestamp at which this branch was last committed.",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Git Branch"
          }
        },
        "description": "### Get All Git Branches\n\nReturns a list of git branches in the project repository\n",
        "summary": "Get All Git Branches",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "all_git_branches",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/queries/models/{model_name}/views/{view_name}/run/{result_format}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Query"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "parameters": [
          {
            "name": "model_name",
            "description": "Model name",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "view_name",
            "description": "View name",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "result_format",
            "description": "Format of result",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "description": "### Run an URL encoded query.\n\nThis requires the caller to encode the specifiers for the query into the URL query part using\nLooker-specific syntax as explained below.\n\nGenerally, you would want to use one of the methods that takes the parameters as json in the POST body\nfor creating and/or running queries. This method exists for cases where one really needs to encode the\nparameters into the URL of a single 'GET' request. This matches the way that the Looker UI formats\n'explore' URLs etc.\n\nThe parameters here are very similar to the json body formatting except that the filter syntax is\ntricky. Unfortunately, this format makes this method not currently callible via the 'Try it out!' button\nin this documentation page. But, this is callable  when creating URLs manually or when using the Looker SDK.\n\nHere is an example inline query URL:\n\n```\nhttps://looker.mycompany.com:19999/api/3.0/queries/models/thelook/views/inventory_items/run/json?fields=category.name,inventory_items.days_in_inventory_tier,products.count&f[category.name]=socks&sorts=products.count+desc+0&limit=500&query_timezone=America/Los_Angeles\n```\n\nWhen invoking this endpoint with the Ruby SDK, pass the query parameter parts as a hash. The hash to match the above would look like:\n\n```ruby\nquery_params =\n{\n  :fields => \"category.name,inventory_items.days_in_inventory_tier,products.count\",\n  :\"f[category.name]\" => \"socks\",\n  :sorts => \"products.count desc 0\",\n  :limit => \"500\",\n  :query_timezone => \"America/Los_Angeles\"\n}\nresponse = ruby_sdk.run_url_encoded_query('thelook','inventory_items','json', query_params)\n\n```\n\nAgain, it is generally easier to use the variant of this method that passes the full query in the POST body.\nThis method is available for cases where other alternatives won't fit the need.\n\nSupported formats:\n\n| result_format | Description\n| :-----------: | :--- |\n| json | Plain json\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| md | Simple markdown\n| xlsx | MS Excel spreadsheet\n| sql | Returns the generated SQL rather than running the query\n| png | A PNG image of the visualization of the query\n| jpg | A JPG image of the visualization of the query\n\n\n",
        "summary": "Run Url Encoded Query",
        "produces": [
          "text",
          "application/json",
          "image/png",
          "image/jpg"
        ],
        "operationId": "run_url_encoded_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/content_favorite": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookBasic",
                  "description": "Associated Look",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Metadata Id associated with this ContentFavorite",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ContentFavorite",
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DashboardBase",
                  "description": "Associated Dashboard",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Favorite Content"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create favorite content",
        "summary": "Create Favorite Content",
        "parameters": [
          {
            "name": "body",
            "description": "Favorite Content",
            "schema": {
              "properties": {
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookBasic",
                  "description": "Associated Look",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Metadata Id associated with this ContentFavorite",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ContentFavorite",
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DashboardBase",
                  "description": "Associated Dashboard",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_content_favorite",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/files/file": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "extension": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The extension of the file: .view.lkml, .model.lkml, etc",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "editable": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "State of editability for the file.",
                  "readOnly": true
                },
                "path": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Path, file name, and extension of the file relative to the project root directory",
                  "readOnly": true
                },
                "git_status": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/GitStatus",
                  "description": "Status of the file according to git",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "An opaque token uniquely identifying a file within a project. Avoid parsing or decomposing the text of this token. This token is stable within a Looker release but may change between Looker releases",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "File type: model, view, etc",
                  "readOnly": true
                },
                "mime_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "File mime type",
                  "readOnly": true
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Display name",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project File"
          }
        },
        "description": "### Get Project File Info\n\nReturns information about a file in the project\n",
        "summary": "Get Project File",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "file_id",
            "description": "File Id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "project_file",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/integrations/{integration_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the integration is available to users."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of the integration.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "ID of the integration.",
                  "readOnly": true
                },
                "icon_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL to an icon for the integration.",
                  "readOnly": true
                },
                "supported_visualization_formattings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of visualization formatting options the integration supports. If unspecified, this will default to [\"apply\", \"noapply\"]. Valid values are: \"apply\", \"noapply\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "apply",
                    "noapply"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "required_fields": {
                  "description": "A list of descriptions of required fields that this integration is compatible with. If there are multiple entries in this list, the integration requires more than one field. If unspecified, no fields will be required.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IntegrationRequiredField"
                  },
                  "readOnly": true
                },
                "integration_hub_id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the integration hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "supported_action_types": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of action types the integration supports. Valid values are: \"cell\", \"query\", \"dashboard\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "cell",
                    "query",
                    "dashboard"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "supported_formats": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of data formats the integration supports. If unspecified, this will default to [\"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\"]. Valid values are: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "txt",
                    "csv",
                    "inline_json",
                    "json",
                    "json_detail",
                    "json_detail_lite_stream",
                    "xlsx",
                    "html",
                    "wysiwyg_pdf",
                    "assembled_pdf",
                    "wysiwyg_png",
                    "csv_zip"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "params": {
                  "description": "Array of params for the integration.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IntegrationParam"
                  }
                },
                "supported_download_settings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of all the download mechanisms the integration supports. The order is undefined: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this will default to [\"push\"]. Valid values are: \"push\", \"url\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "push",
                    "url"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "supported_formattings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of formatting options the integration supports. If unspecified, this will default to [\"formatted\", \"unformatted\"]. Valid values are: \"formatted\", \"unformatted\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "formatted",
                    "unformatted"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "uses_oauth": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Whether the integration uses oauth.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label for the integration.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Integration"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update parameters on a Integration.\n",
        "summary": "Update Integration",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Integration",
            "required": true,
            "name": "integration_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Integration",
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the integration is available to users."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of the integration.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "ID of the integration.",
                  "readOnly": true
                },
                "icon_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL to an icon for the integration.",
                  "readOnly": true
                },
                "supported_visualization_formattings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of visualization formatting options the integration supports. If unspecified, this will default to [\"apply\", \"noapply\"]. Valid values are: \"apply\", \"noapply\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "apply",
                    "noapply"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "required_fields": {
                  "description": "A list of descriptions of required fields that this integration is compatible with. If there are multiple entries in this list, the integration requires more than one field. If unspecified, no fields will be required.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IntegrationRequiredField"
                  },
                  "readOnly": true
                },
                "integration_hub_id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the integration hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "supported_action_types": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of action types the integration supports. Valid values are: \"cell\", \"query\", \"dashboard\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "cell",
                    "query",
                    "dashboard"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "supported_formats": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of data formats the integration supports. If unspecified, this will default to [\"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\"]. Valid values are: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "txt",
                    "csv",
                    "inline_json",
                    "json",
                    "json_detail",
                    "json_detail_lite_stream",
                    "xlsx",
                    "html",
                    "wysiwyg_pdf",
                    "assembled_pdf",
                    "wysiwyg_png",
                    "csv_zip"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "params": {
                  "description": "Array of params for the integration.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IntegrationParam"
                  }
                },
                "supported_download_settings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of all the download mechanisms the integration supports. The order is undefined: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this will default to [\"push\"]. Valid values are: \"push\", \"url\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "push",
                    "url"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "supported_formattings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of formatting options the integration supports. If unspecified, this will default to [\"formatted\", \"unformatted\"]. Valid values are: \"formatted\", \"unformatted\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "formatted",
                    "unformatted"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "uses_oauth": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Whether the integration uses oauth.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label for the integration.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_integration",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the integration is available to users."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of the integration.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "ID of the integration.",
                  "readOnly": true
                },
                "icon_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL to an icon for the integration.",
                  "readOnly": true
                },
                "supported_visualization_formattings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of visualization formatting options the integration supports. If unspecified, this will default to [\"apply\", \"noapply\"]. Valid values are: \"apply\", \"noapply\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "apply",
                    "noapply"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "required_fields": {
                  "description": "A list of descriptions of required fields that this integration is compatible with. If there are multiple entries in this list, the integration requires more than one field. If unspecified, no fields will be required.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IntegrationRequiredField"
                  },
                  "readOnly": true
                },
                "integration_hub_id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the integration hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "supported_action_types": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of action types the integration supports. Valid values are: \"cell\", \"query\", \"dashboard\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "cell",
                    "query",
                    "dashboard"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "supported_formats": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of data formats the integration supports. If unspecified, this will default to [\"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\"]. Valid values are: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "txt",
                    "csv",
                    "inline_json",
                    "json",
                    "json_detail",
                    "json_detail_lite_stream",
                    "xlsx",
                    "html",
                    "wysiwyg_pdf",
                    "assembled_pdf",
                    "wysiwyg_png",
                    "csv_zip"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "params": {
                  "description": "Array of params for the integration.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IntegrationParam"
                  }
                },
                "supported_download_settings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of all the download mechanisms the integration supports. The order is undefined: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this will default to [\"push\"]. Valid values are: \"push\", \"url\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "push",
                    "url"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "supported_formattings": {
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of formatting options the integration supports. If unspecified, this will default to [\"formatted\", \"unformatted\"]. Valid values are: \"formatted\", \"unformatted\".",
                  "readOnly": true,
                  "x-looker-values": [
                    "formatted",
                    "unformatted"
                  ],
                  "x-looker-nullable": false,
                  "type": "array"
                },
                "uses_oauth": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Whether the integration uses oauth.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label for the integration.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Integration"
          }
        },
        "description": "### Get information about a Integration.\n",
        "summary": "Get Integration",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Integration",
            "required": true,
            "name": "integration_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "integration",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/scheduled_plans/space/{space_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserPublic",
                    "description": "User who owns this ScheduledPlan",
                    "readOnly": true
                  },
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the ScheduledPlan is enabled"
                  },
                  "require_no_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if the dashboard look does not return results"
                  },
                  "require_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if running the dashboard or look returns results"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a dashboard",
                    "format": "int64"
                  },
                  "lookml_dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of a LookML dashboard"
                  },
                  "crontab": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Vixie-Style crontab specification when to run"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "run_once": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the plan in question should only be run once (usually for testing)"
                  },
                  "include_links": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether links back to Looker should be included in this ScheduledPlan"
                  },
                  "embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this schedule is in an embed context or not"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was created",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "x-looker-deprecated": true,
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "(DEPRECATED) Alias for filters_string field"
                  },
                  "require_change": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if data have changed since the last run"
                  },
                  "color_theme": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color scheme of the dashboard if applicable"
                  },
                  "pdf_landscape": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the paper should be landscape"
                  },
                  "long_tables": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not to expand table vis to full length"
                  },
                  "next_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan will next run (null if running once)",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan was last run",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was last updated",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "run_as_recipient": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                  },
                  "send_all_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Will run an unlimited query and send all results."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title",
                    "readOnly": true
                  },
                  "pdf_paper_size": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The size of paper a PDF should be rendered for"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query id"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id which owns this ScheduledPlan",
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a look",
                    "format": "int64"
                  },
                  "timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                  },
                  "filters_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query string to run look or dashboard with"
                  },
                  "datagroup": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                  },
                  "scheduled_plan_destination": {
                    "description": "Scheduled plan destinations",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ScheduledPlanDestination"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Scheduled Plan"
          }
        },
        "description": "### Get Scheduled Plans for a Space\n\nReturns scheduled plans owned by the caller for a given space id.\n",
        "summary": "Scheduled Plans for Space",
        "parameters": [
          {
            "format": "int64",
            "description": "Space Id",
            "required": true,
            "name": "space_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "scheduled_plans_for_space",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboards/{dashboard_id}/dashboard_layouts": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "active": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Active"
                  },
                  "dashboard_title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title extracted from the dashboard this layout represents.",
                    "readOnly": true
                  },
                  "dashboard_layout_components": {
                    "description": "Components",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardLayoutComponent"
                    },
                    "readOnly": true
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Dashboard"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type"
                  },
                  "column_width": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Column Width",
                    "format": "int64"
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not the dashboard layout is deleted.",
                    "readOnly": true
                  },
                  "width": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Width",
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "DashboardLayout"
          }
        },
        "description": "### Get information about all the dashboard elements on a dashboard with a specific id.",
        "summary": "Get All DashboardLayouts",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of dashboard",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_dashboard_layouts",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboard_layouts/{dashboard_layout_id}/dashboard_layout_components": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "element_title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dashboard element title, extracted from the Dashboard Element.",
                    "readOnly": true
                  },
                  "row": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Row",
                    "format": "int64"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "dashboard_element_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id Of Dashboard Element"
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not the dashboard layout component is deleted",
                    "readOnly": true
                  },
                  "width": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Width",
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "column": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Column",
                    "format": "int64"
                  },
                  "element_title_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not the dashboard element title is displayed.",
                    "readOnly": true
                  },
                  "height": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Height",
                    "format": "int64"
                  },
                  "vis_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Visualization type, extracted from a query's vis_config",
                    "readOnly": true
                  },
                  "dashboard_layout_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Dashboard Layout"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "DashboardLayoutComponent"
          }
        },
        "description": "### Get information about all the dashboard layout components for a dashboard layout with a specific id.",
        "summary": "Get All DashboardLayoutComponents",
        "parameters": [
          {
            "name": "dashboard_layout_id",
            "description": "Id of dashboard layout component",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_layout_dashboard_layout_components",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/fetch_and_parse_saml_idp_metadata": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identify Provider Url",
                  "readOnly": true
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identify Provider Certificate",
                  "readOnly": true
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identify Provider Issuer",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Parse result"
          }
        },
        "consumes": [
          "text/plain"
        ],
        "description": "### Fetch the given url and parse it as a SAML IdP metadata document and return the result.\nNote that this requires that the url be public or at least at a location where the Looker instance\ncan fetch it without requiring any special authentication.\n",
        "summary": "Parse SAML IdP Url",
        "parameters": [
          {
            "name": "body",
            "description": "SAML IdP metadata public url",
            "schema": {
              "type": "string"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "fetch_and_parse_saml_idp_metadata",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/connections/{connection_name}/connection_override/{override_context}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a connection override.\n",
        "summary": "Delete Connection Override",
        "parameters": [
          {
            "name": "connection_name",
            "description": "Name of connection",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "override_context",
            "description": "Context of connection override",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_connection_override",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/projects/{root_project_id}/credentials": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "root_project_id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Root project Id",
                    "readOnly": true
                  },
                  "git_password": {
                    "description": "(Write-Only) Git password for HTTPS authentication.",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "remote_url": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Git remote repository url",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "git_username": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Git username for HTTPS authentication."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "ssh_public_key": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public deploy key for SSH authentication."
                  },
                  "is_configured": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the credentials have been configured for the Git Repository.",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Repository Credential"
          }
        },
        "description": "### Get all Repository Credentials for a project\n\n`root_project_id` is required.\n",
        "summary": "Get All Repository Credentials",
        "parameters": [
          {
            "name": "root_project_id",
            "description": "Root Project Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "get_all_repository_credentials",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/homepages": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of homepage"
                },
                "homepage_sections": {
                  "description": "Sections of the homepage",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageSection"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of last homepage update",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "primary_homepage": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the homepage is the primary homepage or not",
                  "readOnly": true
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of homepage"
                },
                "section_order": {
                  "description": "ids of the homepage sections in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage deletion",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage creatopm",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated content_metadata record",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of homepage creator",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new homepage.\n",
        "summary": "Create Homepage",
        "parameters": [
          {
            "name": "body",
            "description": "Homepage",
            "schema": {
              "properties": {
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of homepage"
                },
                "homepage_sections": {
                  "description": "Sections of the homepage",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageSection"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of last homepage update",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "primary_homepage": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the homepage is the primary homepage or not",
                  "readOnly": true
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of homepage"
                },
                "section_order": {
                  "description": "ids of the homepage sections in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage deletion",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage creatopm",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated content_metadata record",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of homepage creator",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_homepage",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description of homepage"
                  },
                  "homepage_sections": {
                    "description": "Sections of the homepage",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/HomepageSection"
                    },
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date of last homepage update",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "primary_homepage": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the homepage is the primary homepage or not",
                    "readOnly": true
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title of homepage"
                  },
                  "section_order": {
                    "description": "ids of the homepage sections in the order they should be displayed",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date of homepage deletion",
                    "format": "date-time"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date of homepage creatopm",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of associated content_metadata record",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User id of homepage creator",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Homepage"
          }
        },
        "description": "### Get information about all homepages.\n",
        "summary": "Get All Homepages",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_homepages",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/roles": {
      "put": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "permission_set_id": {
                    "description": "(Write-Only) Id of permission set",
                    "x-looker-nullable": true,
                    "type": "integer",
                    "x-looker-write-only": true,
                    "format": "int64"
                  },
                  "permission_set": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/PermissionSet",
                    "description": "(Read only) Permission set",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "model_set_id": {
                    "description": "(Write-Only) Id of model set",
                    "x-looker-nullable": true,
                    "type": "integer",
                    "x-looker-write-only": true,
                    "format": "int64"
                  },
                  "users_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get list of users with this role",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of Role"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "model_set": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/ModelSet",
                    "description": "(Read only) Model set",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Roles of user."
          }
        },
        "description": "### Set roles of the user with a specific id.\n",
        "summary": "Set User Roles",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "array of roles ids for user",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "set_user_roles",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "permission_set_id": {
                    "description": "(Write-Only) Id of permission set",
                    "x-looker-nullable": true,
                    "type": "integer",
                    "x-looker-write-only": true,
                    "format": "int64"
                  },
                  "permission_set": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/PermissionSet",
                    "description": "(Read only) Permission set",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "model_set_id": {
                    "description": "(Write-Only) Id of model set",
                    "x-looker-nullable": true,
                    "type": "integer",
                    "x-looker-write-only": true,
                    "format": "int64"
                  },
                  "users_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get list of users with this role",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of Role"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "model_set": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/ModelSet",
                    "description": "(Read only) Model set",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Roles of user."
          }
        },
        "description": "### Get information about roles of a given user\n",
        "summary": "Get User Roles",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "direct_association_only",
            "description": "Get only roles associated directly with the user: exclude those only associated through groups.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_roles",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/roles/{role_id}": {
      "patch": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "permission_set_id": {
                  "description": "(Write-Only) Id of permission set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "permission_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/PermissionSet",
                  "description": "(Read only) Permission set",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "model_set_id": {
                  "description": "(Write-Only) Id of model set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "users_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get list of users with this role",
                  "readOnly": true,
                  "format": "uri"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of Role"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "model_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ModelSet",
                  "description": "(Read only) Model set",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Role"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          }
        },
        "description": "### Update information about the role with a specific id.\n",
        "summary": "Update Role",
        "parameters": [
          {
            "format": "int64",
            "description": "id of role",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Role",
            "schema": {
              "properties": {
                "permission_set_id": {
                  "description": "(Write-Only) Id of permission set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "permission_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/PermissionSet",
                  "description": "(Read only) Permission set",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "model_set_id": {
                  "description": "(Write-Only) Id of model set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "users_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get list of users with this role",
                  "readOnly": true,
                  "format": "uri"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of Role"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "model_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ModelSet",
                  "description": "(Read only) Model set",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_role",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete the role with a specific id.\n",
        "summary": "Delete Role",
        "parameters": [
          {
            "format": "int64",
            "description": "id of role",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_role",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "permission_set_id": {
                  "description": "(Write-Only) Id of permission set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "permission_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/PermissionSet",
                  "description": "(Read only) Permission set",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "model_set_id": {
                  "description": "(Write-Only) Id of model set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "users_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get list of users with this role",
                  "readOnly": true,
                  "format": "uri"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of Role"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "model_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ModelSet",
                  "description": "(Read only) Model set",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Role"
          }
        },
        "description": "### Get information about the role with a specific id.\n",
        "summary": "Get Role",
        "parameters": [
          {
            "format": "int64",
            "description": "id of role",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "role",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/user_login_lockouts": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "full_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's name",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User ID",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "remote_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Remote ID of user if using LDAP",
                    "readOnly": true
                  },
                  "lockout_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time when lockout was triggered",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "auth_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Authentication method for login failures",
                    "readOnly": true
                  },
                  "fail_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of failures that triggered the lockout",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "ip": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "IP address of most recent failed attempt",
                    "readOnly": true
                  },
                  "key": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Hash of user's client id",
                    "readOnly": true
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Email address associated with the user's account",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "User Login Lockout"
          }
        },
        "description": "### Get currently locked-out users.\n",
        "summary": "Get All User Login Lockouts",
        "parameters": [
          {
            "name": "fields",
            "description": "Include only these fields in the response",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_user_login_lockouts",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/lookml_models/{lookml_model_name}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "project_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of project containing the model"
                },
                "has_content": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Does this model declaration have have lookml content?",
                  "readOnly": true
                },
                "explores": {
                  "description": "Array of explores (if has_content)",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelNavExplore"
                  },
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model. Also used as the unique identifier"
                },
                "allowed_db_connection_names": {
                  "description": "Array of names of connections this model is allowed to use",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "unlimited_db_connections": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this model allowed to use all current and future connections"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "UI-friendly name for this model",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "LookML Model"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a lookml model using the specified configuration.\n",
        "summary": "Update LookML Model",
        "parameters": [
          {
            "name": "lookml_model_name",
            "description": "Name of lookml model.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "LookML Model",
            "schema": {
              "properties": {
                "project_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of project containing the model"
                },
                "has_content": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Does this model declaration have have lookml content?",
                  "readOnly": true
                },
                "explores": {
                  "description": "Array of explores (if has_content)",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelNavExplore"
                  },
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model. Also used as the unique identifier"
                },
                "allowed_db_connection_names": {
                  "description": "Array of names of connections this model is allowed to use",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "unlimited_db_connections": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this model allowed to use all current and future connections"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "UI-friendly name for this model",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_lookml_model",
        "tags": [
          "LookmlModel"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a lookml model.\n",
        "summary": "Delete LookML Model",
        "parameters": [
          {
            "name": "lookml_model_name",
            "description": "Name of lookml model.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_lookml_model",
        "tags": [
          "LookmlModel"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "project_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of project containing the model"
                },
                "has_content": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Does this model declaration have have lookml content?",
                  "readOnly": true
                },
                "explores": {
                  "description": "Array of explores (if has_content)",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelNavExplore"
                  },
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model. Also used as the unique identifier"
                },
                "allowed_db_connection_names": {
                  "description": "Array of names of connections this model is allowed to use",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "unlimited_db_connections": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this model allowed to use all current and future connections"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "UI-friendly name for this model",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "LookML Model"
          }
        },
        "description": "### Get information about a lookml model.\n",
        "summary": "Get LookML Model",
        "parameters": [
          {
            "name": "lookml_model_name",
            "description": "Name of lookml model.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "lookml_model",
        "tags": [
          "LookmlModel"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/sessions/{session_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Web login session for the specified user.",
        "summary": "Delete Web Login Session",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "id of Web Login Session",
            "required": true,
            "name": "session_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_session",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "city": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "City component of user location (derived from IP address)",
                  "readOnly": true
                },
                "browser": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's browser type",
                  "readOnly": true
                },
                "sudo_user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Actual user in the case when this session represents one user sudo'ing as another",
                  "readOnly": true,
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of credentials used for logging in this session",
                  "readOnly": true
                },
                "state": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "State component of user location (derived from IP address)",
                  "readOnly": true
                },
                "extended_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time when this session was last extended by the user",
                  "readOnly": true
                },
                "operating_system": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's Operating System",
                  "readOnly": true
                },
                "country": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Country component of user location (derived from IP address)",
                  "readOnly": true
                },
                "ip_address": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "IP address of user when this session was initiated",
                  "readOnly": true
                },
                "expires_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time when this session will expire",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "extended_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times this session was extended",
                  "readOnly": true,
                  "format": "int64"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time when this session was initiated",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Web Login Session"
          }
        },
        "description": "### Web login session for the specified user.",
        "summary": "Get Web Login Session",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of Web Login Session",
            "required": true,
            "name": "session_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_session",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/scheduled_plans/run_once": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Scheduled Plan"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "429": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Too Many Requests"
          }
        },
        "description": "### Run a Scheduled Plan Immediately\n\nCreate a scheduled plan that runs only once, and immediately.\n\nThis can be useful for testing a Scheduled Plan before committing to a production schedule.\n\nAdmins can create scheduled plans on behalf of other users by specifying a user id.\n\nThis API is rate limited to prevent it from being used for relay spam or DoS attacks\n\nScheduled plan destinations must specify the data format to produce and send to the destination\n\nScheduled Plan Destination formats:\n\n| format | Description\n| :-----------: | :--- |\n| json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| xlsx | MS Excel spreadsheet\n| wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document\n| assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document\n| wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image\n||\n\nValid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.\n\n\n",
        "summary": "Run Scheduled Plan Once",
        "parameters": [
          {
            "name": "body",
            "description": "Scheduled Plan",
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "scheduled_plan_run_once",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboards/{lookml_dashboard_id}/sync": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "description": "Ids of all the dashboards that were updated by this operation"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update all linked dashboards to match the specified LookML dashboard.\n\nAny UDD (a dashboard which exists in the Looker database rather than as a LookML file) which has a `lookml_link_id`\nproperty value referring to a LookML dashboard's id (model::dashboardname) will be updated so that it matches the current state of the LookML dashboard.\n\nFor this operation to succeed the user must have permission to view the LookML dashboard, and only linked dashboards\nthat the user has permission to update will be synced.\n\nTo **link** or **unlink** a UDD set the `lookml_link_id` property with [update_dashboard()](#!/Dashboard/update_dashboard)\n",
        "summary": "Sync LookML Dashboard",
        "parameters": [
          {
            "name": "lookml_dashboard_id",
            "description": "Id of LookML dashboard, in the form 'model::dashboardname'",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Dashboard",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "raw_locale",
            "description": "If true, and this dashboard is localized, export it with the raw keys, not localized.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "sync_lookml_dashboard",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/lookml_models": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "project_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of project containing the model"
                },
                "has_content": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Does this model declaration have have lookml content?",
                  "readOnly": true
                },
                "explores": {
                  "description": "Array of explores (if has_content)",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelNavExplore"
                  },
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model. Also used as the unique identifier"
                },
                "allowed_db_connection_names": {
                  "description": "Array of names of connections this model is allowed to use",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "unlimited_db_connections": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this model allowed to use all current and future connections"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "UI-friendly name for this model",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "LookML Model"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a lookml model using the specified configuration.\n",
        "summary": "Create LookML Model",
        "parameters": [
          {
            "name": "body",
            "description": "LookML Model",
            "schema": {
              "properties": {
                "project_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of project containing the model"
                },
                "has_content": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Does this model declaration have have lookml content?",
                  "readOnly": true
                },
                "explores": {
                  "description": "Array of explores (if has_content)",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelNavExplore"
                  },
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model. Also used as the unique identifier"
                },
                "allowed_db_connection_names": {
                  "description": "Array of names of connections this model is allowed to use",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "unlimited_db_connections": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this model allowed to use all current and future connections"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "UI-friendly name for this model",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_lookml_model",
        "tags": [
          "LookmlModel"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "project_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of project containing the model"
                  },
                  "has_content": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Does this model declaration have have lookml content?",
                    "readOnly": true
                  },
                  "explores": {
                    "description": "Array of explores (if has_content)",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookmlModelNavExplore"
                    },
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of the model. Also used as the unique identifier"
                  },
                  "allowed_db_connection_names": {
                    "description": "Array of names of connections this model is allowed to use",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unlimited_db_connections": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is this model allowed to use all current and future connections"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "label": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "UI-friendly name for this model",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "LookML Model"
          }
        },
        "description": "### Get information about all lookml models.\n",
        "summary": "Get All LookML Models",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_lookml_models",
        "tags": [
          "LookmlModel"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/workspaces": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "The unique id of this user workspace. Predefined workspace ids include \"production\" and \"dev\"",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "projects": {
                    "description": "The local state of each project in the workspace",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Project"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Workspace"
          }
        },
        "description": "### Get All Workspaces\n\nReturns all workspaces available to the calling user.\n",
        "summary": "Get All Workspaces",
        "x-looker-activity-type": "non_query",
        "operationId": "all_workspaces",
        "tags": [
          "Workspace"
        ],
        "x-looker-status": "beta"
      }
    },
    "/scheduled_plans/look/{look_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserPublic",
                    "description": "User who owns this ScheduledPlan",
                    "readOnly": true
                  },
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the ScheduledPlan is enabled"
                  },
                  "require_no_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if the dashboard look does not return results"
                  },
                  "require_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if running the dashboard or look returns results"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a dashboard",
                    "format": "int64"
                  },
                  "lookml_dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of a LookML dashboard"
                  },
                  "crontab": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Vixie-Style crontab specification when to run"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "run_once": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the plan in question should only be run once (usually for testing)"
                  },
                  "include_links": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether links back to Looker should be included in this ScheduledPlan"
                  },
                  "embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this schedule is in an embed context or not"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was created",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "x-looker-deprecated": true,
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "(DEPRECATED) Alias for filters_string field"
                  },
                  "require_change": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if data have changed since the last run"
                  },
                  "color_theme": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color scheme of the dashboard if applicable"
                  },
                  "pdf_landscape": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the paper should be landscape"
                  },
                  "long_tables": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not to expand table vis to full length"
                  },
                  "next_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan will next run (null if running once)",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan was last run",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was last updated",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "run_as_recipient": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                  },
                  "send_all_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Will run an unlimited query and send all results."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title",
                    "readOnly": true
                  },
                  "pdf_paper_size": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The size of paper a PDF should be rendered for"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query id"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id which owns this ScheduledPlan",
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a look",
                    "format": "int64"
                  },
                  "timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                  },
                  "filters_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query string to run look or dashboard with"
                  },
                  "datagroup": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                  },
                  "scheduled_plan_destination": {
                    "description": "Scheduled plan destinations",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ScheduledPlanDestination"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Scheduled Plan"
          }
        },
        "description": "### Get Scheduled Plans for a Look\n\nReturns all scheduled plans for a look which belong to the caller or given user.\n\nIf no user_id is provided, this function returns the scheduled plans owned by the caller.\n\n\nTo list all schedules for all users, pass `all_users=true`.\n\n\nThe caller must have `see_schedules` permission to see other users' scheduled plans.\n\n\n",
        "summary": "Scheduled Plans for Look",
        "parameters": [
          {
            "format": "int64",
            "description": "Look Id",
            "required": true,
            "name": "look_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "User Id (default is requesting user if not specified)",
            "required": false,
            "name": "user_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "all_users",
            "description": "Return scheduled plans belonging to all users for the look",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "scheduled_plans_for_look",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/themes/validate": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Theme validation results"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Validate a theme with the specified information\n\nValidates all values set for the theme, returning any errors encountered, or 200 OK if valid\n\nSee [Create Theme](#!/Theme/create_theme) for constraints\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Validate Theme",
        "parameters": [
          {
            "name": "body",
            "description": "Theme",
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "validate_theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/spaces/{space_id}/looks": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "public": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Public"
                  },
                  "public_slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Slug",
                    "readOnly": true
                  },
                  "image_embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Image Embed Url",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserIdOnly",
                    "description": "User",
                    "readOnly": true
                  },
                  "is_run_on_load": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "auto-run query when Look viewed"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space of this Look",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was last accessed by any user",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a look is 'soft' deleted."
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Url",
                    "readOnly": true
                  },
                  "google_spreadsheet_formula": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Google Spreadsheet Formula",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_updater_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that last updated the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that deleted the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "excel_file_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Excel File Url",
                    "readOnly": true
                  },
                  "public_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Url",
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was updated.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Space Id"
                  },
                  "query": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/Query",
                    "description": "Query",
                    "readOnly": true
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Look Title"
                  },
                  "short_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Short Url",
                    "readOnly": true
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Query Id",
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embed Url",
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id",
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Looks"
          }
        },
        "description": "### Get the looks in a space",
        "summary": "Get Space Looks",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space_looks",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboard_elements/{dashboard_element_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "note_state": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note State"
                },
                "title_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile title"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML link ID",
                  "readOnly": true
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval"
                },
                "merge_result_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID of merge result"
                },
                "alert_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of Alerts associated to a dashboard element",
                  "readOnly": true,
                  "format": "int64"
                },
                "body_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text as Html",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookWithQuery",
                  "description": "Look",
                  "readOnly": true
                },
                "note_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text as Html",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "result_maker": {
                  "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                  "description": "Data about the result maker.",
                  "x-looker-nullable": true
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of the ResultMakerLookup entry.",
                  "readOnly": true,
                  "format": "int64"
                },
                "title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether title is hidden"
                },
                "body_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "subtitle_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile subtitle text"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of dashboard element"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id Of Query",
                  "format": "int64"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval as integer",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Look"
                },
                "note_display": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Display"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "note_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardElement"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the dashboard element with a specific id.",
        "summary": "Update DashboardElement",
        "parameters": [
          {
            "name": "dashboard_element_id",
            "description": "Id of dashboard element",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "DashboardElement",
            "schema": {
              "properties": {
                "note_state": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note State"
                },
                "title_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile title"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML link ID",
                  "readOnly": true
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval"
                },
                "merge_result_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID of merge result"
                },
                "alert_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of Alerts associated to a dashboard element",
                  "readOnly": true,
                  "format": "int64"
                },
                "body_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text as Html",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookWithQuery",
                  "description": "Look",
                  "readOnly": true
                },
                "note_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text as Html",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "result_maker": {
                  "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                  "description": "Data about the result maker.",
                  "x-looker-nullable": true
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of the ResultMakerLookup entry.",
                  "readOnly": true,
                  "format": "int64"
                },
                "title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether title is hidden"
                },
                "body_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "subtitle_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile subtitle text"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of dashboard element"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id Of Query",
                  "format": "int64"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval as integer",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Look"
                },
                "note_display": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Display"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "note_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_dashboard_element",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a dashboard element with a specific id.",
        "summary": "Delete DashboardElement",
        "parameters": [
          {
            "name": "dashboard_element_id",
            "description": "Id of dashboard element",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_dashboard_element",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "note_state": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note State"
                },
                "title_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile title"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML link ID",
                  "readOnly": true
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval"
                },
                "merge_result_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID of merge result"
                },
                "alert_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of Alerts associated to a dashboard element",
                  "readOnly": true,
                  "format": "int64"
                },
                "body_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text as Html",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookWithQuery",
                  "description": "Look",
                  "readOnly": true
                },
                "note_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text as Html",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "result_maker": {
                  "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                  "description": "Data about the result maker.",
                  "x-looker-nullable": true
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of the ResultMakerLookup entry.",
                  "readOnly": true,
                  "format": "int64"
                },
                "title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether title is hidden"
                },
                "body_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "subtitle_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile subtitle text"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of dashboard element"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id Of Query",
                  "format": "int64"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval as integer",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Look"
                },
                "note_display": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Display"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "note_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardElement"
          }
        },
        "description": "### Get information about the dashboard element with a specific id.",
        "summary": "Get DashboardElement",
        "parameters": [
          {
            "name": "dashboard_element_id",
            "description": "Id of dashboard element",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_element",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/login": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "access_token": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Access Token used for API calls",
                  "readOnly": true
                },
                "token_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of Token",
                  "readOnly": true
                },
                "expires_in": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of seconds before the token expires",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Access token with metadata."
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "### Present client credentials to obtain an authorization token\n\nLooker API implements the OAuth2 [Resource Owner Password Credentials Grant](https://looker.com/docs/r/api/outh2_resource_owner_pc) pattern.\nThe client credentials required for this login must be obtained by creating an API3 key on a user account\nin the Looker Admin console. The API3 key consists of a public `client_id` and a private `client_secret`.\n\nThe access token returned by `login` must be used in the HTTP Authorization header of subsequent\nAPI requests, like this:\n```\nAuthorization: token 4QDkCyCtZzYgj4C2p2cj3csJH7zqS5RzKs2kTnG4\n```\nReplace \"4QDkCy...\" with the `access_token` value returned by `login`.\nThe word `token` is a string literal and must be included exactly as shown.\n\nThis function can accept `client_id` and `client_secret` parameters as URL query params or as www-form-urlencoded params in the body of the HTTP request. Since there is a small risk that URL parameters may be visible to intermediate nodes on the network route (proxies, routers, etc), passing credentials in the body of the request is considered more secure than URL params.\n\nExample of passing credentials in the HTTP request body:\n````\nPOST HTTP /login\nContent-Type: application/x-www-form-urlencoded\n\nclient_id=CGc9B7v7J48dQSJvxxx&client_secret=nNVS9cSS3xNpSC9JdsBvvvvv\n````\n\n### Best Practice:\nAlways pass credentials in body params. Pass credentials in URL query params **only** when you cannot pass body params due to application, tool, or other limitations.\n\nFor more information and detailed examples of Looker API authorization, see [How to Authenticate to Looker API3](https://github.com/looker/looker-sdk-ruby/blob/master/authentication.md).\n",
        "summary": "Login",
        "parameters": [
          {
            "name": "client_id",
            "description": "client_id part of API3 Key.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "client_secret",
            "description": "client_secret part of API3 Key.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "login",
        "tags": [
          "ApiAuth"
        ],
        "x-looker-activity-type": "none",
        "x-looker-status": "stable"
      }
    },
    "/spaces/{space_id}/ancestors": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed shared space",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed users space",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root shared space",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root user space",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is a user's personal space",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is descendant of a user's personal space",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is an embed space",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Spaces"
          }
        },
        "description": "### Get the ancestors of a space",
        "summary": "Get Space Ancestors",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space_ancestors",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/user_attributes/{user_attribute_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user_can_view": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Non-admin users can see the values of their attributes and use them in filters"
                },
                "is_system": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Attribute is a system default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users can change the value of this attribute for themselves"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, users will not be able to view values of this attribute"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value for when no value is set on the user"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "User Attribute"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a user attribute definition.\n",
        "summary": "Update User Attribute",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "User Attribute",
            "schema": {
              "properties": {
                "user_can_view": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Non-admin users can see the values of their attributes and use them in filters"
                },
                "is_system": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Attribute is a system default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users can change the value of this attribute for themselves"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, users will not be able to view values of this attribute"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value for when no value is set on the user"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_user_attribute",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a user attribute (admin only).\n",
        "summary": "Delete User Attribute",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user_attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_attribute",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "user_can_view": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Non-admin users can see the values of their attributes and use them in filters"
                },
                "is_system": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Attribute is a system default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users can change the value of this attribute for themselves"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, users will not be able to view values of this attribute"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value for when no value is set on the user"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "User Attribute"
          }
        },
        "description": "### Get information about a user attribute.\n",
        "summary": "Get User Attribute",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_attribute",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/oidc_test_configs/{test_slug}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Test config succssfully deleted."
          }
        },
        "description": "### Delete a OIDC test configuration.\n",
        "summary": "Delete OIDC Test Configuration",
        "parameters": [
          {
            "name": "test_slug",
            "description": "Slug of test config",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_oidc_test_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable OIDC authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of user who last modified this config",
                  "readOnly": true,
                  "format": "int64"
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
                },
                "secret": {
                  "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from OIDC"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a OIDC config test",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Array of scopes to request.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Token Url"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true,
                  "format": "date-time"
                },
                "audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Audience"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "identifier": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relying Party Identifier (provided by OpenID Provider)"
                },
                "authorization_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Authorization Url",
                  "format": "uri"
                },
                "issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Issuer"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeWrite"
                  }
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "userinfo_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider User Information Url",
                  "format": "uri"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "OIDC test config."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get a OIDC test configuration by test_slug.\n",
        "summary": "Get OIDC Test Configuration",
        "parameters": [
          {
            "name": "test_slug",
            "description": "Slug of test config",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "oidc_test_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/logout": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Logged out successfully."
          }
        },
        "description": "### Logout of the API and invalidate the current access token.\n",
        "summary": "Logout",
        "x-looker-activity-type": "none",
        "operationId": "logout",
        "tags": [
          "ApiAuth"
        ],
        "x-looker-status": "stable"
      }
    },
    "/password_config": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "min_length": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Minimum number of characters required for a new password.  Must be between 7 and 100",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "require_special": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one special character"
                },
                "require_numeric": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one numeric character"
                },
                "require_upperlower": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one uppercase and one lowercase letter"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Password Config"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update password config.\n",
        "summary": "Update Password Config",
        "parameters": [
          {
            "name": "body",
            "description": "Password Config",
            "schema": {
              "properties": {
                "min_length": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Minimum number of characters required for a new password.  Must be between 7 and 100",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "require_special": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one special character"
                },
                "require_numeric": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one numeric character"
                },
                "require_upperlower": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one uppercase and one lowercase letter"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_password_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "min_length": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Minimum number of characters required for a new password.  Must be between 7 and 100",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "require_special": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one special character"
                },
                "require_numeric": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one numeric character"
                },
                "require_upperlower": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Require at least one uppercase and one lowercase letter"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Password Config"
          }
        },
        "description": "### Get password config.\n",
        "summary": "Get Password Config",
        "x-looker-activity-type": "non_query",
        "operationId": "password_config",
        "tags": [
          "Auth"
        ],
        "x-looker-status": "beta"
      }
    },
    "/spaces/{space_id}/children": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed shared space",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed users space",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root shared space",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root user space",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is a user's personal space",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is descendant of a user's personal space",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is an embed space",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Spaces"
          }
        },
        "description": "### Get the children of a space.",
        "summary": "Get Space Children",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space_children",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/connections/{connection_name}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone to use in queries"
                },
                "tmp_db_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of temporary database (if used)"
                },
                "dialect_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Read/Write) SQL Dialect name"
                },
                "port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Port number on server"
                },
                "after_connect_statements": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                },
                "pdt_context_override": {
                  "$ref": "#/definitions/DBConnectionOverride",
                  "description": "db_connection_override for this connection in the `pdt` maintenance context",
                  "x-looker-nullable": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "last_reap_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT reap process",
                  "readOnly": true
                },
                "example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this an example connection",
                  "readOnly": true
                },
                "maintenance_cron": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Creation date for this connection",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of the connection. Also used as the unique identifier"
                },
                "uses_oauth": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the connection uses OAuth for authentication.",
                  "readOnly": true
                },
                "ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use SSL/TLS when connecting to server"
                },
                "pool_timeout": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Pool Timeout",
                  "format": "int64"
                },
                "user_db_credentials": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                },
                "jdbc_additional_params": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional params to add to JDBC connection string"
                },
                "database": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Database name"
                },
                "dialect": {
                  "x-looker-nullable": false,
                  "$ref": "#/definitions/Dialect",
                  "description": "(Read-only) SQL Dialect details",
                  "readOnly": true
                },
                "password": {
                  "description": "(Write-Only) Password for server authentication",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "verify_ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Verify the SSL"
                },
                "certificate": {
                  "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "max_connections": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Maximum number of concurrent connection to use",
                  "format": "int64"
                },
                "user_attribute_fields": {
                  "description": "Fields whose values map to user attribute names",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Username for server authentication"
                },
                "snippets": {
                  "description": "SQL Runner snippets for this connection",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Snippet"
                  },
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of user who last modified this connection configuration",
                  "readOnly": true
                },
                "sql_runner_precache_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Precache tables in the SQL Runner"
                },
                "last_regen_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT trigger check process",
                  "readOnly": true
                },
                "file_type": {
                  "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "schema": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Scheme name"
                },
                "db_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time zone of database"
                },
                "max_billing_gigabytes": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                },
                "host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Host name/address of server"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Connection"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a connection using the specified configuration.\n",
        "summary": "Update Connection",
        "parameters": [
          {
            "name": "connection_name",
            "description": "Name of connection",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Connection",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone to use in queries"
                },
                "tmp_db_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of temporary database (if used)"
                },
                "dialect_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Read/Write) SQL Dialect name"
                },
                "port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Port number on server"
                },
                "after_connect_statements": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                },
                "pdt_context_override": {
                  "$ref": "#/definitions/DBConnectionOverride",
                  "description": "db_connection_override for this connection in the `pdt` maintenance context",
                  "x-looker-nullable": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "last_reap_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT reap process",
                  "readOnly": true
                },
                "example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this an example connection",
                  "readOnly": true
                },
                "maintenance_cron": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Creation date for this connection",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of the connection. Also used as the unique identifier"
                },
                "uses_oauth": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the connection uses OAuth for authentication.",
                  "readOnly": true
                },
                "ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use SSL/TLS when connecting to server"
                },
                "pool_timeout": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Pool Timeout",
                  "format": "int64"
                },
                "user_db_credentials": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                },
                "jdbc_additional_params": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional params to add to JDBC connection string"
                },
                "database": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Database name"
                },
                "dialect": {
                  "x-looker-nullable": false,
                  "$ref": "#/definitions/Dialect",
                  "description": "(Read-only) SQL Dialect details",
                  "readOnly": true
                },
                "password": {
                  "description": "(Write-Only) Password for server authentication",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "verify_ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Verify the SSL"
                },
                "certificate": {
                  "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "max_connections": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Maximum number of concurrent connection to use",
                  "format": "int64"
                },
                "user_attribute_fields": {
                  "description": "Fields whose values map to user attribute names",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Username for server authentication"
                },
                "snippets": {
                  "description": "SQL Runner snippets for this connection",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Snippet"
                  },
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of user who last modified this connection configuration",
                  "readOnly": true
                },
                "sql_runner_precache_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Precache tables in the SQL Runner"
                },
                "last_regen_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT trigger check process",
                  "readOnly": true
                },
                "file_type": {
                  "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "schema": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Scheme name"
                },
                "db_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time zone of database"
                },
                "max_billing_gigabytes": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                },
                "host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Host name/address of server"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_connection",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a connection.\n",
        "summary": "Delete Connection",
        "parameters": [
          {
            "name": "connection_name",
            "description": "Name of connection",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_connection",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone to use in queries"
                },
                "tmp_db_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of temporary database (if used)"
                },
                "dialect_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Read/Write) SQL Dialect name"
                },
                "port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Port number on server"
                },
                "after_connect_statements": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                },
                "pdt_context_override": {
                  "$ref": "#/definitions/DBConnectionOverride",
                  "description": "db_connection_override for this connection in the `pdt` maintenance context",
                  "x-looker-nullable": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "last_reap_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT reap process",
                  "readOnly": true
                },
                "example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this an example connection",
                  "readOnly": true
                },
                "maintenance_cron": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Creation date for this connection",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of the connection. Also used as the unique identifier"
                },
                "uses_oauth": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the connection uses OAuth for authentication.",
                  "readOnly": true
                },
                "ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use SSL/TLS when connecting to server"
                },
                "pool_timeout": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Pool Timeout",
                  "format": "int64"
                },
                "user_db_credentials": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                },
                "jdbc_additional_params": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional params to add to JDBC connection string"
                },
                "database": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Database name"
                },
                "dialect": {
                  "x-looker-nullable": false,
                  "$ref": "#/definitions/Dialect",
                  "description": "(Read-only) SQL Dialect details",
                  "readOnly": true
                },
                "password": {
                  "description": "(Write-Only) Password for server authentication",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "verify_ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Verify the SSL"
                },
                "certificate": {
                  "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "max_connections": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Maximum number of concurrent connection to use",
                  "format": "int64"
                },
                "user_attribute_fields": {
                  "description": "Fields whose values map to user attribute names",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Username for server authentication"
                },
                "snippets": {
                  "description": "SQL Runner snippets for this connection",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Snippet"
                  },
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of user who last modified this connection configuration",
                  "readOnly": true
                },
                "sql_runner_precache_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Precache tables in the SQL Runner"
                },
                "last_regen_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT trigger check process",
                  "readOnly": true
                },
                "file_type": {
                  "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "schema": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Scheme name"
                },
                "db_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time zone of database"
                },
                "max_billing_gigabytes": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                },
                "host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Host name/address of server"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Connection"
          }
        },
        "description": "### Get information about a connection.\n",
        "summary": "Get Connection",
        "parameters": [
          {
            "name": "connection_name",
            "description": "Name of connection",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "connection",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/themes/active": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "settings": {
                    "$ref": "#/definitions/ThemeSettings",
                    "description": "Hash of name/value pairs for theme settings. These names get validated.",
                    "x-looker-nullable": false
                  },
                  "end_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for when this theme expires. Null=never",
                    "format": "date-time"
                  },
                  "name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of theme. Can only be alphanumeric and underscores."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "begin_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for when this theme becomes active. Null=always",
                    "format": "date-time"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Themes"
          }
        },
        "description": "### Get active themes\n\nReturns an array of active themes.\n\nIf the `name` parameter is specified, it will return an array with one theme if it's active and found.\n\nThe optional `ts` parameter can specify a different timestamp than \"now.\"\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n\n",
        "summary": "Get Active Themes",
        "parameters": [
          {
            "name": "name",
            "description": "Name of theme",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "date-time",
            "description": "Timestamp representing the target datetime for the active period. Defaults to 'now'",
            "required": false,
            "name": "ts",
            "type": "string",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "active_themes",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/sql_queries/{slug}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "explore_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore page URL for this SQL query",
                  "readOnly": true
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The most recent time this query was run",
                  "readOnly": true
                },
                "run_count": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Number of times this query has been run",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "creator": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who created this SQL query",
                  "readOnly": true
                },
                "plaintext": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Should this query be rendered as plain text",
                  "readOnly": true
                },
                "last_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds this query took to run the most recent time it was run",
                  "readOnly": true,
                  "format": "float"
                },
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model name this query uses",
                  "readOnly": true
                },
                "sql": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "SQL query text",
                  "readOnly": true
                },
                "slug": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The identifier of the SQL query",
                  "readOnly": true
                },
                "connection": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DBConnectionBase",
                  "description": "Connection this query uses",
                  "readOnly": true
                },
                "browser_limit": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Maximum number of rows this query will display on the SQL Runner page",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "SQL Runner Query"
          }
        },
        "description": "Get a SQL Runner query.",
        "summary": "Get SQL Runner Query",
        "parameters": [
          {
            "name": "slug",
            "description": "slug of query",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "sql_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/ldap_config/test_connection": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LDAPUser",
                  "description": "User details from LDAP server for auth tests",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to ldap config",
                  "readOnly": true,
                  "format": "uri"
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Test status code: always 'success' or 'error'",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short human readable test about the result",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "issues": {
                  "description": "Array of issues/considerations about the result",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPConfigTestIssue"
                  },
                  "readOnly": true
                },
                "trace": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A more detailed trace of incremental results during auth tests",
                  "readOnly": true
                },
                "details": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional details for error cases",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Result info."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Test the connection settings for an LDAP configuration.\n\nThis tests that the connection is possible given a connection_host and connection_port.\n\n**connection_host** and **connection_port** are required. **connection_tls** is optional.\n\nExample:\n```json\n{\n  \"connection_host\": \"ldap.example.com\",\n  \"connection_port\": \"636\",\n  \"connection_tls\": true\n}\n```\n\nNo authentication to the LDAP server is attempted.\n\nThe active LDAP settings are not modified.\n",
        "summary": "Test LDAP Connection",
        "parameters": [
          {
            "name": "body",
            "description": "LDAP Config",
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "test_ldap_config_connection",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/projects/{project_id}/lookml_tests": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "model_name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of model containing this test.",
                    "readOnly": true
                  },
                  "line": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Line number of this test in LookML.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "file": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of the LookML file containing this test.",
                    "readOnly": true
                  },
                  "query_url_params": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "The url parameters that can be used to reproduce this test's query on an explore.",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of this test.",
                    "readOnly": true
                  },
                  "explore_name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of the explore this test runs a query against",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "LookML Test"
          }
        },
        "description": "### Get All LookML Tests\n\nReturns a list of tests which can be run to validate a project's LookML code and/or the underlying data,\noptionally filtered by the file id.\nCall [Run LookML Test](#!/Project/run_lookml_test) to execute tests.\n",
        "summary": "Get All LookML Tests",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "file_id",
            "description": "File Id",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_lookml_tests",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/connections/{connection_name}/test": {
      "put": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of test",
                    "readOnly": true
                  },
                  "connection_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "JDBC connection string. (only populated in the 'connect' test)",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "status": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Result code of test",
                    "readOnly": true
                  },
                  "message": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Result message of test",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Test results"
          },
          "429": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Too Many Requests"
          }
        },
        "description": "### Test an existing connection.\n\nNote that a connection's 'dialect' property has a 'connection_tests' property that lists the\nspecific types of tests that the connection supports.\n\nThis API is rate limited.\n\nUnsupported tests in the request will be ignored.\n",
        "summary": "Test Connection",
        "parameters": [
          {
            "name": "connection_name",
            "description": "Name of connection",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            },
            "description": "Array of names of tests to run",
            "required": false,
            "name": "tests",
            "type": "array",
            "in": "query"
          }
        ],
        "operationId": "test_connection",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/dashboard_filters/{dashboard_filter_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "listens_to_filters": {
                  "description": "Array of listeners for faceted filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "model": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model of filter (required if type = field)"
                },
                "allow_multiple_values": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter allows multiple filter values"
                },
                "explore": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore of filter (required if type = field)"
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Display order of this filter relative to other filters",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dimension": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dimension of filter (required if type = field)"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of filter"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter requires a value to run the dashboard"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of filter"
                },
                "ui_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of filter: one of date, number, string, or field"
                },
                "field": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Field information",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value of filter"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "title",
                "type"
              ]
            },
            "description": "Dashboard Filter"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the dashboard filter with a specific id.",
        "summary": "Update Dashboard Filter",
        "parameters": [
          {
            "name": "dashboard_filter_id",
            "description": "Id of dashboard filter",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Dashboard Filter",
            "schema": {
              "properties": {
                "listens_to_filters": {
                  "description": "Array of listeners for faceted filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "model": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model of filter (required if type = field)"
                },
                "allow_multiple_values": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter allows multiple filter values"
                },
                "explore": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore of filter (required if type = field)"
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Display order of this filter relative to other filters",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dimension": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dimension of filter (required if type = field)"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of filter"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter requires a value to run the dashboard"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of filter"
                },
                "ui_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of filter: one of date, number, string, or field"
                },
                "field": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Field information",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value of filter"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "title",
                "type"
              ]
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_dashboard_filter",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a dashboard filter with a specific id.",
        "summary": "Delete Dashboard Filter",
        "parameters": [
          {
            "name": "dashboard_filter_id",
            "description": "Id of dashboard filter",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_dashboard_filter",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "listens_to_filters": {
                  "description": "Array of listeners for faceted filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "model": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model of filter (required if type = field)"
                },
                "allow_multiple_values": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter allows multiple filter values"
                },
                "explore": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore of filter (required if type = field)"
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Display order of this filter relative to other filters",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dimension": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dimension of filter (required if type = field)"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of filter"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter requires a value to run the dashboard"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of filter"
                },
                "ui_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of filter: one of date, number, string, or field"
                },
                "field": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Field information",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value of filter"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "title",
                "type"
              ]
            },
            "description": "Dashboard Filter"
          }
        },
        "description": "### Get information about the dashboard filters with a specific id.",
        "summary": "Get Dashboard Filter",
        "parameters": [
          {
            "name": "dashboard_filter_id",
            "description": "Id of dashboard filters",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_filter",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/groups/{group_id}/attribute_values/{user_attribute_id}": {
      "patch": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "user_attribute_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of user attribute",
                  "readOnly": true,
                  "format": "int64"
                },
                "value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value of user attribute for group",
                  "readOnly": true
                },
                "rank": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Precedence for resolving value for user",
                  "readOnly": true,
                  "format": "int64"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id of this group-attribute relation",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Group value object."
          }
        },
        "description": "### Set the value of a user attribute for a group.\n\nFor information about how user attribute values are calculated, see [Set User Attribute Group Values](#!/UserAttribute/set_user_attribute_group_values).\n",
        "summary": "Set User Attribute Group Value",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "New value for group.",
            "schema": {
              "properties": {
                "user_attribute_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of user attribute",
                  "readOnly": true,
                  "format": "int64"
                },
                "value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value of user attribute for group",
                  "readOnly": true
                },
                "rank": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Precedence for resolving value for user",
                  "readOnly": true,
                  "format": "int64"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id of this group-attribute relation",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_user_attribute_group_value",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "description": "Value successfully unset"
          }
        },
        "description": "### Remove a user attribute value from a group.\n",
        "summary": "Delete User Attribute Group Value",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_attribute_group_value",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/oidc_config": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable OIDC authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of user who last modified this config",
                  "readOnly": true,
                  "format": "int64"
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
                },
                "secret": {
                  "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from OIDC"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a OIDC config test",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Array of scopes to request.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Token Url"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true,
                  "format": "date-time"
                },
                "audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Audience"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "identifier": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relying Party Identifier (provided by OpenID Provider)"
                },
                "authorization_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Authorization Url",
                  "format": "uri"
                },
                "issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Issuer"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeWrite"
                  }
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "userinfo_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider User Information Url",
                  "format": "uri"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "New state for OIDC Configuration."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the OIDC configuration.\n\nConfiguring OIDC impacts authentication for all users. This configuration should be done carefully.\n\nOnly Looker administrators can read and update the OIDC configuration.\n\nOIDC is enabled or disabled for Looker using the **enabled** field.\n\nIt is **highly** recommended that any OIDC setting changes be tested using the APIs below before being set globally.\n",
        "summary": "Update OIDC Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "OIDC Config",
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable OIDC authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of user who last modified this config",
                  "readOnly": true,
                  "format": "int64"
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
                },
                "secret": {
                  "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from OIDC"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a OIDC config test",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Array of scopes to request.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Token Url"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true,
                  "format": "date-time"
                },
                "audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Audience"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "identifier": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relying Party Identifier (provided by OpenID Provider)"
                },
                "authorization_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Authorization Url",
                  "format": "uri"
                },
                "issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Issuer"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeWrite"
                  }
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "userinfo_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider User Information Url",
                  "format": "uri"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_oidc_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable OIDC authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of user who last modified this config",
                  "readOnly": true,
                  "format": "int64"
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
                },
                "secret": {
                  "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from OIDC"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a OIDC config test",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Array of scopes to request.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Token Url"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true,
                  "format": "date-time"
                },
                "audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Audience"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "identifier": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relying Party Identifier (provided by OpenID Provider)"
                },
                "authorization_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Authorization Url",
                  "format": "uri"
                },
                "issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Issuer"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeWrite"
                  }
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "userinfo_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider User Information Url",
                  "format": "uri"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "OIDC Configuration."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get the OIDC configuration.\n\nLooker can be optionally configured to authenticate users against an OpenID Connect (OIDC)\nauthentication server. OIDC setup requires coordination with an administrator of that server.\n\nOnly Looker administrators can read and update the OIDC configuration.\n\nConfiguring OIDC impacts authentication for all users. This configuration should be done carefully.\n\nLooker maintains a single OIDC configuation. It can be read and updated.       Updates only succeed if the new state will be valid (in the sense that all required fields are populated);       it is up to you to ensure that the configuration is appropriate and correct).\n\nOIDC is enabled or disabled for Looker using the **enabled** field.\n",
        "summary": "Get OIDC Configuration",
        "x-looker-activity-type": "non_query",
        "operationId": "oidc_config",
        "tags": [
          "Auth"
        ],
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_email/password_reset": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "password_reset_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url with one-time use secret token that the user can use to reset password",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "forced_password_reset_at_next_login": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Force the user to change their password upon their next login"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login"
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "email/password credential"
          }
        },
        "description": "### Create a password reset token.\nThis will create a cryptographically secure random password reset token for the user.\nIf the user already has a password reset token then this invalidates the old token and creates a new one.\nThe token is expressed as the 'password_reset_url' of the user's email/password credential object.\nThis takes an optional 'expires' param to indicate if the new token should be an expiring token.\nTokens that expire are typically used for self-service password resets for existing users.\nInvitation emails for new users typically are not set to expire.\nThe expire period is always 60 minutes when expires is enabled.\nThis method can be called with an empty body.\n",
        "summary": "Create Password Reset Token",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "expires",
            "description": "Expiring token.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_user_credentials_email_password_reset",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/internal_help_resources_content": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "menu_item_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text to display in the help menu item which will display the internal help resources"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "markdown_content": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content to be displayed in the internal help resources page/modal"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Internal Help Resources Content"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "Update internal help resources content\n",
        "summary": "Update internal help resources content",
        "parameters": [
          {
            "name": "body",
            "description": "Internal Help Resources Content",
            "schema": {
              "properties": {
                "menu_item_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text to display in the help menu item which will display the internal help resources"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "markdown_content": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content to be displayed in the internal help resources page/modal"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_internal_help_resources_content",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "menu_item_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text to display in the help menu item which will display the internal help resources"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "markdown_content": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content to be displayed in the internal help resources page/modal"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Internal Help Resources Content"
          }
        },
        "description": "### Set the menu item name and content for internal help resources\n",
        "summary": "Get Internal Help Resources Content",
        "x-looker-activity-type": "non_query",
        "operationId": "internal_help_resources_content",
        "tags": [
          "Config"
        ],
        "x-looker-status": "beta"
      }
    },
    "/oidc_test_configs": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable OIDC authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of user who last modified this config",
                  "readOnly": true,
                  "format": "int64"
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
                },
                "secret": {
                  "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from OIDC"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a OIDC config test",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Array of scopes to request.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Token Url"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true,
                  "format": "date-time"
                },
                "audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Audience"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "identifier": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relying Party Identifier (provided by OpenID Provider)"
                },
                "authorization_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Authorization Url",
                  "format": "uri"
                },
                "issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Issuer"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeWrite"
                  }
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "userinfo_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider User Information Url",
                  "format": "uri"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "OIDC test config"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Create a OIDC test configuration.\n",
        "summary": "Create OIDC Test Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "OIDC test config",
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable OIDC authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of user who last modified this config",
                  "readOnly": true,
                  "format": "int64"
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
                },
                "secret": {
                  "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from OIDC"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a OIDC config test",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Array of scopes to request.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Token Url"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true,
                  "format": "date-time"
                },
                "audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Audience"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "identifier": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relying Party Identifier (provided by OpenID Provider)"
                },
                "authorization_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Authorization Url",
                  "format": "uri"
                },
                "issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider Issuer"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeWrite"
                  }
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OIDCUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "userinfo_endpoint": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OpenID Provider User Information Url",
                  "format": "uri"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "create_oidc_test_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders/{folder_id}/parent": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed shared folder",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed users folder",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root shared folder",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root user folder",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is a user's personal folder",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is descendant of a user's personal folder",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is an embed folder",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Folder"
          }
        },
        "description": "### Get the parent of a folder",
        "summary": "Get Folder Parent",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder_parent",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/looks": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "public": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Public"
                },
                "public_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Slug",
                  "readOnly": true
                },
                "image_embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Image Embed Url",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserIdOnly",
                  "description": "User",
                  "readOnly": true
                },
                "is_run_on_load": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "auto-run query when Look viewed"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space of this Look",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was last accessed by any user",
                  "readOnly": true,
                  "format": "date-time"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a look is 'soft' deleted."
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url",
                  "readOnly": true
                },
                "google_spreadsheet_formula": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google Spreadsheet Formula",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_updater_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that last updated the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that deleted the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "excel_file_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Excel File Url",
                  "readOnly": true
                },
                "public_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Url",
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Space Id"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Look Title"
                },
                "short_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short Url",
                  "readOnly": true
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Query Id",
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embed Url",
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id",
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Look"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a Look\n\nTo create a look to display query data, first create the query with [create_query()](#!/Query/create_query)\nthen assign the query's id to the `query_id` property in the call to `create_look()`.\n\nTo place the look into a particular space, assign the space's id to the `space_id` property\nin the call to `create_look()`.\n",
        "summary": "Create Look",
        "parameters": [
          {
            "name": "body",
            "description": "Look",
            "schema": {
              "properties": {
                "public": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Public"
                },
                "public_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Slug",
                  "readOnly": true
                },
                "image_embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Image Embed Url",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserIdOnly",
                  "description": "User",
                  "readOnly": true
                },
                "is_run_on_load": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "auto-run query when Look viewed"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space of this Look",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was last accessed by any user",
                  "readOnly": true,
                  "format": "date-time"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a look is 'soft' deleted."
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url",
                  "readOnly": true
                },
                "google_spreadsheet_formula": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google Spreadsheet Formula",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_updater_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that last updated the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that deleted the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "excel_file_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Excel File Url",
                  "readOnly": true
                },
                "public_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Url",
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Space Id"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Look Title"
                },
                "short_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short Url",
                  "readOnly": true
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Query Id",
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embed Url",
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id",
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_look",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "public": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Public"
                  },
                  "public_slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Slug",
                    "readOnly": true
                  },
                  "image_embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Image Embed Url",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserIdOnly",
                    "description": "User",
                    "readOnly": true
                  },
                  "is_run_on_load": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "auto-run query when Look viewed"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space of this Look",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was last accessed by any user",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a look is 'soft' deleted."
                  },
                  "google_spreadsheet_formula": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Google Spreadsheet Formula",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_updater_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that last updated the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that deleted the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "excel_file_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Excel File Url",
                    "readOnly": true
                  },
                  "public_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Url",
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was updated.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Space Id"
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Look Title"
                  },
                  "short_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Short Url",
                    "readOnly": true
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Query Id",
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embed Url",
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id",
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Look"
          }
        },
        "description": "### Get information about all active Looks\n\nReturns an array of **abbreviated Look objects** describing all the looks that the caller has access to. Soft-deleted Looks are **not** included.\n\nGet the **full details** of a specific look by id with [look(id)](#!/Look/look)\n\nFind **soft-deleted looks** with [search_looks()](#!/Look/search_looks)\n",
        "summary": "Get All Looks",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_looks",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/connections": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone to use in queries"
                },
                "tmp_db_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of temporary database (if used)"
                },
                "dialect_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Read/Write) SQL Dialect name"
                },
                "port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Port number on server"
                },
                "after_connect_statements": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                },
                "pdt_context_override": {
                  "$ref": "#/definitions/DBConnectionOverride",
                  "description": "db_connection_override for this connection in the `pdt` maintenance context",
                  "x-looker-nullable": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "last_reap_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT reap process",
                  "readOnly": true
                },
                "example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this an example connection",
                  "readOnly": true
                },
                "maintenance_cron": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Creation date for this connection",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of the connection. Also used as the unique identifier"
                },
                "uses_oauth": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the connection uses OAuth for authentication.",
                  "readOnly": true
                },
                "ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use SSL/TLS when connecting to server"
                },
                "pool_timeout": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Pool Timeout",
                  "format": "int64"
                },
                "user_db_credentials": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                },
                "jdbc_additional_params": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional params to add to JDBC connection string"
                },
                "database": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Database name"
                },
                "dialect": {
                  "x-looker-nullable": false,
                  "$ref": "#/definitions/Dialect",
                  "description": "(Read-only) SQL Dialect details",
                  "readOnly": true
                },
                "password": {
                  "description": "(Write-Only) Password for server authentication",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "verify_ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Verify the SSL"
                },
                "certificate": {
                  "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "max_connections": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Maximum number of concurrent connection to use",
                  "format": "int64"
                },
                "user_attribute_fields": {
                  "description": "Fields whose values map to user attribute names",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Username for server authentication"
                },
                "snippets": {
                  "description": "SQL Runner snippets for this connection",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Snippet"
                  },
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of user who last modified this connection configuration",
                  "readOnly": true
                },
                "sql_runner_precache_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Precache tables in the SQL Runner"
                },
                "last_regen_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT trigger check process",
                  "readOnly": true
                },
                "file_type": {
                  "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "schema": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Scheme name"
                },
                "db_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time zone of database"
                },
                "max_billing_gigabytes": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                },
                "host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Host name/address of server"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Connection"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a connection using the specified configuration.\n",
        "summary": "Create Connection",
        "parameters": [
          {
            "name": "body",
            "description": "Connection",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone to use in queries"
                },
                "tmp_db_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of temporary database (if used)"
                },
                "dialect_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Read/Write) SQL Dialect name"
                },
                "port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Port number on server"
                },
                "after_connect_statements": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                },
                "pdt_context_override": {
                  "$ref": "#/definitions/DBConnectionOverride",
                  "description": "db_connection_override for this connection in the `pdt` maintenance context",
                  "x-looker-nullable": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "last_reap_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT reap process",
                  "readOnly": true
                },
                "example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this an example connection",
                  "readOnly": true
                },
                "maintenance_cron": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Creation date for this connection",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of the connection. Also used as the unique identifier"
                },
                "uses_oauth": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the connection uses OAuth for authentication.",
                  "readOnly": true
                },
                "ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use SSL/TLS when connecting to server"
                },
                "pool_timeout": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Pool Timeout",
                  "format": "int64"
                },
                "user_db_credentials": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                },
                "jdbc_additional_params": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional params to add to JDBC connection string"
                },
                "database": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Database name"
                },
                "dialect": {
                  "x-looker-nullable": false,
                  "$ref": "#/definitions/Dialect",
                  "description": "(Read-only) SQL Dialect details",
                  "readOnly": true
                },
                "password": {
                  "description": "(Write-Only) Password for server authentication",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "verify_ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Verify the SSL"
                },
                "certificate": {
                  "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "max_connections": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Maximum number of concurrent connection to use",
                  "format": "int64"
                },
                "user_attribute_fields": {
                  "description": "Fields whose values map to user attribute names",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Username for server authentication"
                },
                "snippets": {
                  "description": "SQL Runner snippets for this connection",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Snippet"
                  },
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of user who last modified this connection configuration",
                  "readOnly": true
                },
                "sql_runner_precache_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Precache tables in the SQL Runner"
                },
                "last_regen_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT trigger check process",
                  "readOnly": true
                },
                "file_type": {
                  "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "schema": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Scheme name"
                },
                "db_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time zone of database"
                },
                "max_billing_gigabytes": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                },
                "host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Host name/address of server"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_connection",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "query_timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone to use in queries"
                  },
                  "tmp_db_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of temporary database (if used)"
                  },
                  "dialect_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "(Read/Write) SQL Dialect name"
                  },
                  "port": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Port number on server"
                  },
                  "after_connect_statements": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                  },
                  "pdt_context_override": {
                    "$ref": "#/definitions/DBConnectionOverride",
                    "description": "db_connection_override for this connection in the `pdt` maintenance context",
                    "x-looker-nullable": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "last_reap_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unix timestamp at start of last completed PDT reap process",
                    "readOnly": true
                  },
                  "example": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is this an example connection",
                    "readOnly": true
                  },
                  "maintenance_cron": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Creation date for this connection",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of the connection. Also used as the unique identifier"
                  },
                  "uses_oauth": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the connection uses OAuth for authentication.",
                    "readOnly": true
                  },
                  "ssl": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Use SSL/TLS when connecting to server"
                  },
                  "pool_timeout": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Pool Timeout",
                    "format": "int64"
                  },
                  "user_db_credentials": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                  },
                  "jdbc_additional_params": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Additional params to add to JDBC connection string"
                  },
                  "database": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Database name"
                  },
                  "dialect": {
                    "x-looker-nullable": false,
                    "$ref": "#/definitions/Dialect",
                    "description": "(Read-only) SQL Dialect details",
                    "readOnly": true
                  },
                  "password": {
                    "description": "(Write-Only) Password for server authentication",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "verify_ssl": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Verify the SSL"
                  },
                  "certificate": {
                    "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "max_connections": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Maximum number of concurrent connection to use",
                    "format": "int64"
                  },
                  "user_attribute_fields": {
                    "description": "Fields whose values map to user attribute names",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "username": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Username for server authentication"
                  },
                  "snippets": {
                    "description": "SQL Runner snippets for this connection",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Snippet"
                    },
                    "readOnly": true
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of user who last modified this connection configuration",
                    "readOnly": true
                  },
                  "sql_runner_precache_tables": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Precache tables in the SQL Runner"
                  },
                  "last_regen_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unix timestamp at start of last completed PDT trigger check process",
                    "readOnly": true
                  },
                  "file_type": {
                    "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "schema": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Scheme name"
                  },
                  "db_timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time zone of database"
                  },
                  "max_billing_gigabytes": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                  },
                  "host": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Host name/address of server"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Connection"
          }
        },
        "description": "### Get information about all connections.\n",
        "summary": "Get All Connections",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_connections",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/query_tasks/multi_results": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "description": "Multiple query results"
          }
        },
        "description": "Fetch the results of multiple async Query Tasks in one response.\n\nFor Query Tasks that are not completed, the response will include the execution status of the Query Task but will not include query results.\nQuery Tasks whose results have expired will have a status of 'expired'.\nIf the user making the API request does not have sufficient privileges to view a Query Task result, the result will have a status of 'missing'\n",
        "summary": "Get Multiple Async Query Results",
        "parameters": [
          {
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            },
            "description": "List of Query Task IDs",
            "required": true,
            "name": "query_task_ids",
            "type": "array",
            "in": "query"
          }
        ],
        "operationId": "query_task_multi_results",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboard_layout_components/{dashboard_layout_component_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "element_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard element title, extracted from the Dashboard Element.",
                  "readOnly": true
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Row",
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dashboard_element_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Dashboard Element"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout component is deleted",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "column": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column",
                  "format": "int64"
                },
                "element_title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard element title is displayed.",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Height",
                  "format": "int64"
                },
                "vis_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visualization type, extracted from a query's vis_config",
                  "readOnly": true
                },
                "dashboard_layout_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard Layout"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardLayoutComponent"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the dashboard element with a specific id.",
        "summary": "Update DashboardLayoutComponent",
        "parameters": [
          {
            "name": "dashboard_layout_component_id",
            "description": "Id of dashboard layout component",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "DashboardLayoutComponent",
            "schema": {
              "properties": {
                "element_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard element title, extracted from the Dashboard Element.",
                  "readOnly": true
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Row",
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dashboard_element_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Dashboard Element"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout component is deleted",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "column": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column",
                  "format": "int64"
                },
                "element_title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard element title is displayed.",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Height",
                  "format": "int64"
                },
                "vis_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visualization type, extracted from a query's vis_config",
                  "readOnly": true
                },
                "dashboard_layout_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard Layout"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_dashboard_layout_component",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "element_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard element title, extracted from the Dashboard Element.",
                  "readOnly": true
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Row",
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dashboard_element_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Dashboard Element"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout component is deleted",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "column": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column",
                  "format": "int64"
                },
                "element_title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard element title is displayed.",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Height",
                  "format": "int64"
                },
                "vis_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visualization type, extracted from a query's vis_config",
                  "readOnly": true
                },
                "dashboard_layout_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard Layout"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardLayoutComponent"
          }
        },
        "description": "### Get information about the dashboard elements with a specific id.",
        "summary": "Get DashboardLayoutComponent",
        "parameters": [
          {
            "name": "dashboard_layout_component_id",
            "description": "Id of dashboard layout component",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_layout_component",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/roles/{role_id}/users": {
      "put": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "first_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "First name"
                  },
                  "credentials_api3": {
                    "description": "API 3 credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsApi3"
                    },
                    "readOnly": true
                  },
                  "presumed_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker",
                    "readOnly": true
                  },
                  "credentials_saml": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsSaml",
                    "description": "Saml auth credentials",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_ids": {
                    "description": "Array of ids of the groups for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  },
                  "locale": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                  },
                  "verified_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                    "readOnly": true
                  },
                  "credentials_email": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsEmail",
                    "description": "Email/Password login credentials",
                    "readOnly": true
                  },
                  "roles_externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                    "readOnly": true
                  },
                  "credentials_oidc": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsOIDC",
                    "description": "OpenID Connect auth credentials",
                    "readOnly": true
                  },
                  "display_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Full name for display (available only if both first_name and last_name are set)",
                    "readOnly": true
                  },
                  "avatar_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for the avatar image (may be generic)",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_totp": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsTotp",
                    "description": "Two-factor credentials",
                    "readOnly": true
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Account has been disabled"
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "EMail address",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_ldap": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLDAP",
                    "description": "LDAP credentials",
                    "readOnly": true
                  },
                  "last_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last name"
                  },
                  "sessions": {
                    "description": "Active sessions",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Session"
                    },
                    "readOnly": true
                  },
                  "ui_state": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "home_space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID string for user's home space"
                  },
                  "models_dir_validated": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "User's dev workspace has been checked for presence of applicable production projects"
                  },
                  "embed_group_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "looker_versions": {
                    "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "credentials_google": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsGoogle",
                    "description": "Google auth credentials",
                    "readOnly": true
                  },
                  "personal_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of user's personal space",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_embed": {
                    "description": "Embed credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsEmbed"
                    },
                    "readOnly": true
                  },
                  "credentials_looker_openid": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLookerOpenid",
                    "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "role_ids": {
                    "description": "Array of ids of the roles for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Users with role."
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          }
        },
        "description": "### Set all the users of the role with a specific id.\n",
        "summary": "Update Role Users",
        "parameters": [
          {
            "format": "int64",
            "description": "id of role",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "array of user ids for role",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "set_role_users",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "first_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "First name"
                  },
                  "credentials_api3": {
                    "description": "API 3 credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsApi3"
                    },
                    "readOnly": true
                  },
                  "presumed_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker",
                    "readOnly": true
                  },
                  "credentials_saml": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsSaml",
                    "description": "Saml auth credentials",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_ids": {
                    "description": "Array of ids of the groups for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  },
                  "locale": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                  },
                  "verified_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                    "readOnly": true
                  },
                  "credentials_email": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsEmail",
                    "description": "Email/Password login credentials",
                    "readOnly": true
                  },
                  "roles_externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                    "readOnly": true
                  },
                  "credentials_oidc": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsOIDC",
                    "description": "OpenID Connect auth credentials",
                    "readOnly": true
                  },
                  "display_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Full name for display (available only if both first_name and last_name are set)",
                    "readOnly": true
                  },
                  "avatar_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for the avatar image (may be generic)",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_totp": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsTotp",
                    "description": "Two-factor credentials",
                    "readOnly": true
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Account has been disabled"
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "EMail address",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_ldap": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLDAP",
                    "description": "LDAP credentials",
                    "readOnly": true
                  },
                  "last_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last name"
                  },
                  "sessions": {
                    "description": "Active sessions",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Session"
                    },
                    "readOnly": true
                  },
                  "ui_state": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "home_space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID string for user's home space"
                  },
                  "models_dir_validated": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "User's dev workspace has been checked for presence of applicable production projects"
                  },
                  "embed_group_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "looker_versions": {
                    "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "credentials_google": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsGoogle",
                    "description": "Google auth credentials",
                    "readOnly": true
                  },
                  "personal_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of user's personal space",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_embed": {
                    "description": "Embed credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsEmbed"
                    },
                    "readOnly": true
                  },
                  "credentials_looker_openid": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLookerOpenid",
                    "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "role_ids": {
                    "description": "Array of ids of the roles for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Users with role."
          }
        },
        "description": "### Get information about all the users with the role that has a specific id.\n",
        "summary": "Get Role Users",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "direct_association_only",
            "description": "Get only users associated directly with the role: exclude those only associated through groups.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "role_users",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/themes/default": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Theme"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Set the global default theme by theme name\n\nOnly Admin users can call this function.\n\nOnly an active theme with no expiration (`end_at` not set) can be assigned as the default theme. As long as a theme has an active record with no expiration, it can be set as the default.\n\n[Create Theme](#!/Theme/create) has detailed information on rules for default and active themes\n\nReturns the new specified default theme object.\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Set Default Theme",
        "parameters": [
          {
            "name": "name",
            "description": "Name of theme to set as default",
            "type": "string",
            "in": "query",
            "required": true
          }
        ],
        "operationId": "set_default_theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Theme"
          }
        },
        "description": "### Get the default theme\n\nReturns the active theme object set as the default.\n\nThe **default** theme name can be set in the UI on the Admin|Theme UI page\n\nThe optional `ts` parameter can specify a different timestamp than \"now.\" If specified, it returns the default theme at the time indicated.\n",
        "summary": "Get Default Theme",
        "parameters": [
          {
            "format": "date-time",
            "description": "Timestamp representing the target datetime for the active period. Defaults to 'now'",
            "required": false,
            "name": "ts",
            "type": "string",
            "in": "query"
          }
        ],
        "operationId": "default_theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/running_queries/{query_task_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Query successfully killed."
          }
        },
        "description": "Kill a query with a specific query_task_id.\n",
        "summary": "Kill Running Query",
        "parameters": [
          {
            "name": "query_task_id",
            "description": "Query task id.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "kill_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/timezones": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone",
                    "readOnly": true
                  },
                  "group": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone group (e.g Common, Other, etc.)",
                    "readOnly": true
                  },
                  "label": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description of timezone",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Timezone"
          }
        },
        "description": "### Get a list of timezones that Looker supports (e.g. useful for scheduling tasks).\n",
        "summary": "Get All Timezones",
        "x-looker-activity-type": "non_query",
        "operationId": "all_timezones",
        "tags": [
          "Config"
        ],
        "x-looker-status": "stable"
      }
    },
    "/dashboard_layouts/{dashboard_layout_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "active": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Active"
                },
                "dashboard_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title extracted from the dashboard this layout represents.",
                  "readOnly": true
                },
                "dashboard_layout_components": {
                  "description": "Components",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayoutComponent"
                  },
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "column_width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column Width",
                  "format": "int64"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout is deleted.",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardLayout"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the dashboard layout with a specific id.",
        "summary": "Update DashboardLayout",
        "parameters": [
          {
            "name": "dashboard_layout_id",
            "description": "Id of dashboard layout",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "DashboardLayout",
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "active": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Active"
                },
                "dashboard_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title extracted from the dashboard this layout represents.",
                  "readOnly": true
                },
                "dashboard_layout_components": {
                  "description": "Components",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayoutComponent"
                  },
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "column_width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column Width",
                  "format": "int64"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout is deleted.",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_dashboard_layout",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a dashboard layout with a specific id.",
        "summary": "Delete DashboardLayout",
        "parameters": [
          {
            "name": "dashboard_layout_id",
            "description": "Id of dashboard layout",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_dashboard_layout",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "active": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Active"
                },
                "dashboard_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title extracted from the dashboard this layout represents.",
                  "readOnly": true
                },
                "dashboard_layout_components": {
                  "description": "Components",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayoutComponent"
                  },
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "column_width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column Width",
                  "format": "int64"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout is deleted.",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardLayout"
          }
        },
        "description": "### Get information about the dashboard layouts with a specific id.",
        "summary": "Get DashboardLayout",
        "parameters": [
          {
            "name": "dashboard_layout_id",
            "description": "Id of dashboard layouts",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_layout",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/datagroups": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "triggered_at": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "UNIX timestamp at which this entry became triggered. Cannot be in the future.",
                    "format": "int64"
                  },
                  "model_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of the model containing the datagroup. Unique when combined with name.",
                    "readOnly": true
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "UNIX timestamp at which this entry was created.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "stale_before": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "UNIX timestamp before which cache entries are considered stale. Cannot be in the future.",
                    "format": "int64"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of the datagroup. Unique when combined with model_name.",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "ID of the datagroup. Also used as the unique identifier.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "trigger_check_at": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "UNIX timestamp at which this entry trigger was last checked.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "trigger_error": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The message returned with the error of the last trigger check.",
                    "readOnly": true
                  },
                  "trigger_value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The value of the trigger when last checked.",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Datagroup"
          }
        },
        "description": "### Get information about all datagroups.\n",
        "summary": "Get All Datagroups",
        "x-looker-activity-type": "non_query",
        "operationId": "all_datagroups",
        "tags": [
          "Datagroup"
        ],
        "x-looker-status": "beta"
      }
    },
    "/looks/{look_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "public": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Public"
                },
                "public_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Slug",
                  "readOnly": true
                },
                "image_embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Image Embed Url",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserIdOnly",
                  "description": "User",
                  "readOnly": true
                },
                "is_run_on_load": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "auto-run query when Look viewed"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space of this Look",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was last accessed by any user",
                  "readOnly": true,
                  "format": "date-time"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a look is 'soft' deleted."
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url",
                  "readOnly": true
                },
                "google_spreadsheet_formula": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google Spreadsheet Formula",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_updater_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that last updated the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that deleted the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "excel_file_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Excel File Url",
                  "readOnly": true
                },
                "public_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Url",
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Space Id"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Look Title"
                },
                "short_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short Url",
                  "readOnly": true
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Query Id",
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embed Url",
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id",
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Look"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Modify a Look\n\nUse this function to modify parts of a look. Property values given in a call to `update_look` are\napplied to the existing look, so there's no need to include properties whose values are not changing.\nIt's best to specify only the properties you want to change and leave everything else out\nof your `update_look` call. **Look properties marked 'read-only' will be ignored.**\n\nWhen a user deletes a look in the Looker UI, the look data remains in the database but is\nmarked with a deleted flag (\"soft-deleted\"). Soft-deleted looks can be undeleted (by an admin)\nif the delete was in error.\n\nTo soft-delete a look via the API, use [update_look()](#!/Look/update_look) to change the look's `deleted` property to `true`.\nYou can undelete a look by calling `update_look` to change the look's `deleted` property to `false`.\n\nSoft-deleted looks are excluded from the results of [all_looks()](#!/Look/all_looks) and [search_looks()](#!/Look/search_looks), so they\nessentially disappear from view even though they still reside in the db.\nIn API 3.1 and later, you can pass `deleted: true` as a parameter to [search_looks()](#!/3.1/Look/search_looks) to list soft-deleted looks.\n\nNOTE: [delete_look()](#!/Look/delete_look) performs a \"hard delete\" - the look data is removed from the Looker\ndatabase and destroyed. There is no \"undo\" for `delete_look()`.\n",
        "summary": "Update Look",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of look",
            "required": true,
            "name": "look_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Look",
            "schema": {
              "properties": {
                "public": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Public"
                },
                "public_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Slug",
                  "readOnly": true
                },
                "image_embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Image Embed Url",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserIdOnly",
                  "description": "User",
                  "readOnly": true
                },
                "is_run_on_load": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "auto-run query when Look viewed"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space of this Look",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was last accessed by any user",
                  "readOnly": true,
                  "format": "date-time"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a look is 'soft' deleted."
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url",
                  "readOnly": true
                },
                "google_spreadsheet_formula": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google Spreadsheet Formula",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_updater_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that last updated the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that deleted the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "excel_file_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Excel File Url",
                  "readOnly": true
                },
                "public_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Url",
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Space Id"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Look Title"
                },
                "short_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short Url",
                  "readOnly": true
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Query Id",
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embed Url",
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id",
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_look",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Permanently Delete a Look\n\nThis operation **permanently** removes a look from the Looker database.\n\nNOTE: There is no \"undo\" for this kind of delete.\n\nFor information about soft-delete (which can be undone) see [update_look()](#!/Look/update_look).\n",
        "summary": "Delete Look",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of look",
            "required": true,
            "name": "look_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_look",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "public": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Public"
                },
                "public_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Slug",
                  "readOnly": true
                },
                "image_embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Image Embed Url",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserIdOnly",
                  "description": "User",
                  "readOnly": true
                },
                "is_run_on_load": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "auto-run query when Look viewed"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space of this Look",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was last accessed by any user",
                  "readOnly": true,
                  "format": "date-time"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a look is 'soft' deleted."
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url",
                  "readOnly": true
                },
                "google_spreadsheet_formula": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google Spreadsheet Formula",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "last_updater_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that last updated the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that deleted the look.",
                  "readOnly": true,
                  "format": "int64"
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "excel_file_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Excel File Url",
                  "readOnly": true
                },
                "public_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public Url",
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Space Id"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Look Title"
                },
                "short_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short Url",
                  "readOnly": true
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Query Id",
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Look was deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "embed_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embed Url",
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id",
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Look"
          }
        },
        "description": "### Get a Look.\n\nReturns detailed information about a Look and its associated Query.\n\n",
        "summary": "Get Look",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of look",
            "required": true,
            "name": "look_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "look",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders/{folder_id}/ancestors": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed shared folder",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed users folder",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root shared folder",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root user folder",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is a user's personal folder",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is descendant of a user's personal folder",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is an embed folder",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Folders"
          }
        },
        "description": "### Get the ancestors of a folder",
        "summary": "Get Folder Ancestors",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder_ancestors",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/spaces/{space_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed shared space",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed users space",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root shared space",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root user space",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is a user's personal space",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is descendant of a user's personal space",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is an embed space",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Space"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the space with a specific id.",
        "summary": "Update Space",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Space",
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed shared space",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed users space",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root shared space",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root user space",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is a user's personal space",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is descendant of a user's personal space",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is an embed space",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_space",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete the space with a specific id including any children spaces.\n**DANGER** this will delete all looks and dashboards in the space.\n",
        "summary": "Delete Space",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_space",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed shared space",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed users space",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root shared space",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root user space",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is a user's personal space",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is descendant of a user's personal space",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is an embed space",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Space"
          }
        },
        "description": "### Get information about the space with a specific id.",
        "summary": "Get Space",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/themes/{theme_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Theme"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the theme by id.\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Update Theme",
        "parameters": [
          {
            "name": "theme_id",
            "description": "Id of theme",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Theme",
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a specific theme by id\n\nThis operation permanently deletes the identified theme from the database.\n\nBecause multiple themes can have the same name (with different activation time spans) themes can only be deleted by ID.\n\nAll IDs associated with a theme name can be retrieved by searching for the theme name with [Theme Search](#!/Theme/search).\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Delete Theme",
        "parameters": [
          {
            "name": "theme_id",
            "description": "Id of theme",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Theme"
          }
        },
        "description": "### Get a theme by ID\n\nUse this to retrieve a specific theme, whether or not it's currently active.\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Get Theme",
        "parameters": [
          {
            "name": "theme_id",
            "description": "Id of theme",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/git_branch/{branch_name}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete the specified Git Branch\n\nDelete git branch specified in branch_name path param from local and remote of specified project repository\n",
        "summary": "Delete a Git Branch",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "branch_name",
            "description": "Branch Name",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_git_branch",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                },
                "is_remote": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a remote ref exists for the branch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                  "readOnly": true
                },
                "behind_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is behind the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "remote_ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch remote.",
                  "readOnly": true
                },
                "is_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this is the production branch",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                },
                "error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of error",
                  "readOnly": true
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is readonly",
                  "readOnly": true
                },
                "remote": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The name of the remote",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Message describing an error if present",
                  "readOnly": true
                },
                "remote_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the remote",
                  "readOnly": true
                },
                "owner_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the owner of a personal branch",
                  "readOnly": true
                },
                "ahead_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is ahead of the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_local": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a local ref exists for the branch",
                  "readOnly": true
                },
                "commit_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this branch was last committed.",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Git Branch"
          }
        },
        "description": "### Get the specified Git Branch\n\nReturns the git branch specified in branch_name path param if it exists in the given project repository\n",
        "summary": "Find a Git Branch",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "branch_name",
            "description": "Branch Name",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "find_git_branch",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/content_view/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date the piece of content was last viewed",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times piece of content was viewed",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content metadata id of the Look or Dashboard",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of viewed Look",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of the viewed Dashboard",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "start_of_week_date": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Week start date for the view and favorite count during that given week",
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times piece of content was favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of user content was viewed by",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of group content was viewed by",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Content View"
          }
        },
        "description": "### Search Content Views\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n",
        "summary": "Search Content Views",
        "parameters": [
          {
            "format": "int64",
            "description": "Match view count",
            "required": false,
            "name": "view_count",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Match Group Id",
            "required": false,
            "name": "group_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "look_id",
            "description": "Match look_id",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "dashboard_id",
            "description": "Match dashboard_id",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Match content metadata id",
            "required": false,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "start_of_week_date",
            "description": "Match start of week date",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "all_time",
            "description": "True if only all time view records should be returned",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Match user id",
            "required": false,
            "name": "user_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Number of results to return. Use with `offset` to manage pagination of results",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning data",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_content_views",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/running_queries": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserPublic",
                    "description": "User who initiated the query",
                    "readOnly": true
                  },
                  "dialect": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dialect",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "query_task_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID of a Query Task",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Slug",
                    "readOnly": true
                  },
                  "query": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/Query",
                    "description": "Query that was run",
                    "readOnly": true
                  },
                  "connection_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Connection ID",
                    "readOnly": true
                  },
                  "cache_key": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Cache Key",
                    "readOnly": true
                  },
                  "node_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Node Id",
                    "readOnly": true
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query Id",
                    "readOnly": true
                  },
                  "runtime": {
                    "x-looker-nullable": true,
                    "type": "number",
                    "description": "Number of seconds elapsed running the Query",
                    "readOnly": true,
                    "format": "double"
                  },
                  "look": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookBasic",
                    "description": "Look of query that was run",
                    "readOnly": true
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date/Time Query was initiated",
                    "readOnly": true
                  },
                  "message": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Additional Information(Error message or verbose status)",
                    "readOnly": true
                  },
                  "completed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date/Time Query was completed",
                    "readOnly": true
                  },
                  "sql": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "SQL text of the query as run",
                    "readOnly": true
                  },
                  "sql_query": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SqlQuery",
                    "description": "SQL Query that was run",
                    "readOnly": true
                  },
                  "connection_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Connection",
                    "readOnly": true
                  },
                  "source": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Source (look, dashboard, queryrunner, explore, etc.)",
                    "readOnly": true
                  },
                  "status": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Status description",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Running Queries."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "Get information about all running queries.\n",
        "summary": "Get All Running Queries",
        "x-looker-activity-type": "db_query",
        "operationId": "all_running_queries",
        "tags": [
          "Query"
        ],
        "x-looker-status": "stable"
      }
    },
    "/groups/{group_id}/users/{user_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "description": "User successfully removed from group"
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Removes a user from a group.\n",
        "summary": "Remove a User from Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of user to remove from group",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_group_user",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/integrations": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the integration is available to users."
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description of the integration.",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "ID of the integration.",
                    "readOnly": true
                  },
                  "icon_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL to an icon for the integration.",
                    "readOnly": true
                  },
                  "supported_visualization_formattings": {
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of visualization formatting options the integration supports. If unspecified, this will default to [\"apply\", \"noapply\"]. Valid values are: \"apply\", \"noapply\".",
                    "readOnly": true,
                    "x-looker-values": [
                      "apply",
                      "noapply"
                    ],
                    "x-looker-nullable": false,
                    "type": "array"
                  },
                  "required_fields": {
                    "description": "A list of descriptions of required fields that this integration is compatible with. If there are multiple entries in this list, the integration requires more than one field. If unspecified, no fields will be required.",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/IntegrationRequiredField"
                    },
                    "readOnly": true
                  },
                  "integration_hub_id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "ID of the integration hub.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "supported_action_types": {
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of action types the integration supports. Valid values are: \"cell\", \"query\", \"dashboard\".",
                    "readOnly": true,
                    "x-looker-values": [
                      "cell",
                      "query",
                      "dashboard"
                    ],
                    "x-looker-nullable": false,
                    "type": "array"
                  },
                  "supported_formats": {
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of data formats the integration supports. If unspecified, this will default to [\"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\"]. Valid values are: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\".",
                    "readOnly": true,
                    "x-looker-values": [
                      "txt",
                      "csv",
                      "inline_json",
                      "json",
                      "json_detail",
                      "json_detail_lite_stream",
                      "xlsx",
                      "html",
                      "wysiwyg_pdf",
                      "assembled_pdf",
                      "wysiwyg_png",
                      "csv_zip"
                    ],
                    "x-looker-nullable": false,
                    "type": "array"
                  },
                  "params": {
                    "description": "Array of params for the integration.",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/IntegrationParam"
                    }
                  },
                  "supported_download_settings": {
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of all the download mechanisms the integration supports. The order is undefined: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this will default to [\"push\"]. Valid values are: \"push\", \"url\".",
                    "readOnly": true,
                    "x-looker-values": [
                      "push",
                      "url"
                    ],
                    "x-looker-nullable": false,
                    "type": "array"
                  },
                  "supported_formattings": {
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of formatting options the integration supports. If unspecified, this will default to [\"formatted\", \"unformatted\"]. Valid values are: \"formatted\", \"unformatted\".",
                    "readOnly": true,
                    "x-looker-values": [
                      "formatted",
                      "unformatted"
                    ],
                    "x-looker-nullable": false,
                    "type": "array"
                  },
                  "uses_oauth": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "Whether the integration uses oauth.",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "label": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Label for the integration.",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Integration"
          }
        },
        "description": "### Get information about all Integrations.\n",
        "summary": "Get All Integrations",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "integration_hub_id",
            "description": "Filter to a specific provider",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_integrations",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/query_tasks/{query_task_id}/results": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "The Query Task Id was not found or the results have expired."
          },
          "200": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "description": "The query results."
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "The query is not finished"
          }
        },
        "parameters": [
          {
            "name": "query_task_id",
            "description": "ID of the Query Task",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "description": "Returns the results of an async Query Task if the query has completed.\n",
        "summary": "Get Async Query Results",
        "produces": [
          "text",
          "application/json"
        ],
        "operationId": "query_task_results",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/deploy_to_production": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Project"
          },
          "204": {
            "description": "Returns 204 if project was successfully deployed to production, otherwise 400 with an error message"
          }
        },
        "description": "### Deploy LookML from this Development Mode Project to Production\n\nGit must have been configured, must be in dev mode and deploy permission required\n\nDeploy is a two / three step process\n1. Push commits in current branch of dev mode project to the production branch (origin/master).\n   Note a. This step is skipped in read-only projects.\n   Note b. If this step is unsuccessful for any reason (e.g. rejected non-fastforward because production branch has\n             commits not in current branch), subsequent steps will be skipped.\n2. If this is the first deploy of this project, create the production project with git repository.\n3. Pull the production branch into the production project.\n\n",
        "summary": "Deploy To Production",
        "parameters": [
          {
            "name": "project_id",
            "description": "Id of project",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "deploy_to_production",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/manifest": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Manifest project name",
                  "readOnly": true
                },
                "imports": {
                  "description": "Imports for a project",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ImportedProject"
                  },
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "localization_settings": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LocalizationSettings",
                  "description": "Localization settings for a project",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Manifest"
          }
        },
        "description": "### Get A Projects Manifest object\n\nReturns the project with the given project id\n",
        "summary": "Get Manifest",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "manifest",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/parse_saml_idp_metadata": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identify Provider Url",
                  "readOnly": true
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identify Provider Certificate",
                  "readOnly": true
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identify Provider Issuer",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Parse result"
          }
        },
        "consumes": [
          "text/plain"
        ],
        "description": "### Parse the given xml as a SAML IdP metadata document and return the result.\n",
        "summary": "Parse SAML IdP XML",
        "parameters": [
          {
            "name": "body",
            "description": "SAML IdP metadata xml",
            "schema": {
              "type": "string"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "parse_saml_idp_metadata",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/dashboard_elements": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "note_state": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note State"
                },
                "title_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile title"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML link ID",
                  "readOnly": true
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval"
                },
                "merge_result_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID of merge result"
                },
                "alert_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of Alerts associated to a dashboard element",
                  "readOnly": true,
                  "format": "int64"
                },
                "body_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text as Html",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookWithQuery",
                  "description": "Look",
                  "readOnly": true
                },
                "note_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text as Html",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "result_maker": {
                  "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                  "description": "Data about the result maker.",
                  "x-looker-nullable": true
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of the ResultMakerLookup entry.",
                  "readOnly": true,
                  "format": "int64"
                },
                "title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether title is hidden"
                },
                "body_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "subtitle_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile subtitle text"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of dashboard element"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id Of Query",
                  "format": "int64"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval as integer",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Look"
                },
                "note_display": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Display"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "note_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardElement"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a dashboard element on the dashboard with a specific id.",
        "summary": "Create DashboardElement",
        "parameters": [
          {
            "name": "body",
            "description": "DashboardElement",
            "schema": {
              "properties": {
                "note_state": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note State"
                },
                "title_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile title"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML link ID",
                  "readOnly": true
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval"
                },
                "merge_result_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID of merge result"
                },
                "alert_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of Alerts associated to a dashboard element",
                  "readOnly": true,
                  "format": "int64"
                },
                "body_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text as Html",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookWithQuery",
                  "description": "Look",
                  "readOnly": true
                },
                "note_text_as_html": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text as Html",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "result_maker": {
                  "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                  "description": "Data about the result maker.",
                  "x-looker-nullable": true
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of the ResultMakerLookup entry.",
                  "readOnly": true,
                  "format": "int64"
                },
                "title_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether title is hidden"
                },
                "body_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile body text"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "subtitle_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Text tile subtitle text"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of dashboard element"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id Of Query",
                  "format": "int64"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval as integer",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id Of Look"
                },
                "note_display": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Display"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "note_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Note Text"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_dashboard_element",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/homepage_sections": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was deleted.",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "homepage_items": {
                  "description": "Items in the homepage section",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageItem"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was last updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "is_header": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this a header section (has no items)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "detail_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A URL pointing to a page showing further information about the content in the section.",
                  "readOnly": true
                },
                "homepage_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id reference to parent homepage",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of row"
                },
                "item_order": {
                  "description": "ids of the homepage items in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage section"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new homepage section.\n",
        "summary": "Create Homepage section",
        "parameters": [
          {
            "name": "body",
            "description": "Homepage section",
            "schema": {
              "properties": {
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was deleted.",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "homepage_items": {
                  "description": "Items in the homepage section",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageItem"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was last updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "is_header": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this a header section (has no items)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "detail_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A URL pointing to a page showing further information about the content in the section.",
                  "readOnly": true
                },
                "homepage_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id reference to parent homepage",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of row"
                },
                "item_order": {
                  "description": "ids of the homepage items in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_homepage_section",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time at which this section was deleted.",
                    "format": "date-time"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time at which this section was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "homepage_items": {
                    "description": "Items in the homepage section",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/HomepageItem"
                    },
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time at which this section was last updated.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "is_header": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is this a header section (has no items)",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "detail_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "A URL pointing to a page showing further information about the content in the section.",
                    "readOnly": true
                  },
                  "homepage_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id reference to parent homepage",
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of row"
                  },
                  "item_order": {
                    "description": "ids of the homepage items in the order they should be displayed",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Homepage section"
          }
        },
        "description": "### Get information about all homepage sections.\n",
        "summary": "Get All Homepage sections",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_homepage_sections",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboard_layouts": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "active": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Active"
                },
                "dashboard_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title extracted from the dashboard this layout represents.",
                  "readOnly": true
                },
                "dashboard_layout_components": {
                  "description": "Components",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayoutComponent"
                  },
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "column_width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column Width",
                  "format": "int64"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout is deleted.",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "DashboardLayout"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a dashboard layout on the dashboard with a specific id.",
        "summary": "Create DashboardLayout",
        "parameters": [
          {
            "name": "body",
            "description": "DashboardLayout",
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "active": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Active"
                },
                "dashboard_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title extracted from the dashboard this layout represents.",
                  "readOnly": true
                },
                "dashboard_layout_components": {
                  "description": "Components",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayoutComponent"
                  },
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type"
                },
                "column_width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Column Width",
                  "format": "int64"
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the dashboard layout is deleted.",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Width",
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_dashboard_layout",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_embed": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "external_group_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's id for a group to which this user was added during the most recent login",
                    "readOnly": true
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Short name for the type of this kind of credential",
                    "readOnly": true
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for the creation of this credential",
                    "readOnly": true
                  },
                  "external_user_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's unique id for the user",
                    "readOnly": true
                  },
                  "logged_in_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for most recent login using credential",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Has this credential been disabled?",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Embedding Credential"
          }
        },
        "description": "### Embed login information for the specified user.",
        "summary": "Get All Embedding Credentials",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_user_credentials_embeds",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/user_login_lockout/{key}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Removes login lockout for the associated user.\n",
        "summary": "Delete User Login Lockout",
        "parameters": [
          {
            "name": "key",
            "description": "The key associated with the locked user",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_user_login_lockout",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/connections/test": {
      "put": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of test",
                    "readOnly": true
                  },
                  "connection_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "JDBC connection string. (only populated in the 'connect' test)",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "status": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Result code of test",
                    "readOnly": true
                  },
                  "message": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Result message of test",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Test results"
          },
          "429": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Too Many Requests"
          }
        },
        "description": "### Test a connection configuration.\n\nNote that a connection's 'dialect' property has a 'connection_tests' property that lists the\nspecific types of tests that the connection supports.\n\nThis API is rate limited.\n\nUnsupported tests in the request will be ignored.\n",
        "summary": "Test Connection Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "Connection",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone to use in queries"
                },
                "tmp_db_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of temporary database (if used)"
                },
                "dialect_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Read/Write) SQL Dialect name"
                },
                "port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Port number on server"
                },
                "after_connect_statements": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
                },
                "pdt_context_override": {
                  "$ref": "#/definitions/DBConnectionOverride",
                  "description": "db_connection_override for this connection in the `pdt` maintenance context",
                  "x-looker-nullable": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "last_reap_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT reap process",
                  "readOnly": true
                },
                "example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this an example connection",
                  "readOnly": true
                },
                "maintenance_cron": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Creation date for this connection",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of the connection. Also used as the unique identifier"
                },
                "uses_oauth": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the connection uses OAuth for authentication.",
                  "readOnly": true
                },
                "ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use SSL/TLS when connecting to server"
                },
                "pool_timeout": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Pool Timeout",
                  "format": "int64"
                },
                "user_db_credentials": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
                },
                "jdbc_additional_params": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional params to add to JDBC connection string"
                },
                "database": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Database name"
                },
                "dialect": {
                  "x-looker-nullable": false,
                  "$ref": "#/definitions/Dialect",
                  "description": "(Read-only) SQL Dialect details",
                  "readOnly": true
                },
                "password": {
                  "description": "(Write-Only) Password for server authentication",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "verify_ssl": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Verify the SSL"
                },
                "certificate": {
                  "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "max_connections": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Maximum number of concurrent connection to use",
                  "format": "int64"
                },
                "user_attribute_fields": {
                  "description": "Fields whose values map to user attribute names",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Username for server authentication"
                },
                "snippets": {
                  "description": "SQL Runner snippets for this connection",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Snippet"
                  },
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of user who last modified this connection configuration",
                  "readOnly": true
                },
                "sql_runner_precache_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Precache tables in the SQL Runner"
                },
                "last_regen_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unix timestamp at start of last completed PDT trigger check process",
                  "readOnly": true
                },
                "file_type": {
                  "description": "(Write-Only) Certificate keyfile type - .json or .p12",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "schema": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Scheme name"
                },
                "db_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time zone of database"
                },
                "max_billing_gigabytes": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
                },
                "host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Host name/address of server"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            },
            "description": "Array of names of tests to run",
            "required": false,
            "name": "tests",
            "type": "array",
            "in": "query"
          }
        ],
        "operationId": "test_connection_config",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/scheduled_plans": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Scheduled Plan"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a Scheduled Plan\n\nCreate a scheduled plan to render a Look or Dashboard on a recurring schedule.\n\nTo create a scheduled plan, you MUST provide values for the following fields:\n`name`\nand\n`look_id`, `dashboard_id`, `lookml_dashboard_id`, or `query_id`\nand\n`cron_tab` or `datagroup`\nand\nat least one scheduled_plan_destination\n\nWhen `look_id` is set, `require_no_results`, `require_results`, and `require_change` are all required.\n\nIf `create_scheduled_plan` fails with a 422 error, be sure to look at the error messages in the response which will explain exactly what fields are missing or values that are incompatible.\n\nThe queries that provide the data for the look or dashboard are run in the context of user account that owns the scheduled plan.\n\nWhen `run_as_recipient` is `false` or not specified, the queries that provide the data for the\nlook or dashboard are run in the context of user account that owns the scheduled plan.\n\nWhen `run_as_recipient` is `true` and all the email recipients are Looker user accounts, the\nqueries are run in the context of each recipient, so different recipients may see different\ndata from the same scheduled render of a look or dashboard. For more details, see [Run As Recipient](https://looker.com/docs/r/admin/run-as-recipient?version=6.20).\n\nAdmins can create and modify scheduled plans on behalf of other users by specifying a user id.\nNon-admin users may not create or modify scheduled plans by or for other users.\n\nScheduled plan destinations must specify the data format to produce and send to the destination\n\nScheduled Plan Destination formats:\n\n| format | Description\n| :-----------: | :--- |\n| json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| xlsx | MS Excel spreadsheet\n| wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document\n| assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document\n| wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image\n||\n\nValid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.\n\n\n",
        "summary": "Create Scheduled Plan",
        "parameters": [
          {
            "name": "body",
            "description": "Scheduled Plan",
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_scheduled_plan",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserPublic",
                    "description": "User who owns this ScheduledPlan",
                    "readOnly": true
                  },
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the ScheduledPlan is enabled"
                  },
                  "require_no_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if the dashboard look does not return results"
                  },
                  "require_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if running the dashboard or look returns results"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a dashboard",
                    "format": "int64"
                  },
                  "lookml_dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of a LookML dashboard"
                  },
                  "crontab": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Vixie-Style crontab specification when to run"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "run_once": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the plan in question should only be run once (usually for testing)"
                  },
                  "include_links": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether links back to Looker should be included in this ScheduledPlan"
                  },
                  "embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this schedule is in an embed context or not"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was created",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "x-looker-deprecated": true,
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "(DEPRECATED) Alias for filters_string field"
                  },
                  "require_change": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if data have changed since the last run"
                  },
                  "color_theme": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color scheme of the dashboard if applicable"
                  },
                  "pdf_landscape": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the paper should be landscape"
                  },
                  "long_tables": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not to expand table vis to full length"
                  },
                  "next_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan will next run (null if running once)",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan was last run",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was last updated",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "run_as_recipient": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                  },
                  "send_all_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Will run an unlimited query and send all results."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title",
                    "readOnly": true
                  },
                  "pdf_paper_size": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The size of paper a PDF should be rendered for"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query id"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id which owns this ScheduledPlan",
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a look",
                    "format": "int64"
                  },
                  "timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                  },
                  "filters_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query string to run look or dashboard with"
                  },
                  "datagroup": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                  },
                  "scheduled_plan_destination": {
                    "description": "Scheduled plan destinations",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ScheduledPlanDestination"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Scheduled Plan"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### List All Scheduled Plans\n\nReturns all scheduled plans which belong to the caller or given user.\n\nIf no user_id is provided, this function returns the scheduled plans owned by the caller.\n\n\nTo list all schedules for all users, pass `all_users=true`.\n\n\nThe caller must have `see_schedules` permission to see other users' scheduled plans.\n\n\n",
        "summary": "Get All Scheduled Plans",
        "parameters": [
          {
            "format": "int64",
            "description": "Return scheduled plans belonging to this user_id. If not provided, returns scheduled plans owned by the caller.",
            "required": false,
            "name": "user_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Comma delimited list of field names. If provided, only the fields specified will be included in the response",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "all_users",
            "description": "Return scheduled plans belonging to all users (caller needs see_schedules permission)",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_scheduled_plans",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/spaces/{space_id}/dashboards": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "query_timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone in which the Dashboard will run by default."
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Content Metadata Slug"
                  },
                  "lookml_link_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                  },
                  "refresh_interval": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "show_filters_bar": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time the dashboard was last accessed",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "tile_background_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Tile background color"
                  },
                  "tile_text_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Tile text color"
                  },
                  "text_tile_text_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color of text on text tiles"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "show_title": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Show title"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Dashboard was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "description": "Filters",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardFilter"
                    },
                    "readOnly": true
                  },
                  "title_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title color"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that 'soft' deleted the dashboard.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboard_elements": {
                    "description": "Elements",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardElement"
                    },
                    "readOnly": true
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Space"
                  },
                  "load_configuration": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "configuration option that governs how dashboard loading will happen."
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a dashboard is 'soft' deleted."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dashboard Title"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Dashboard was 'soft' deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "refresh_interval_to_i": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Refresh Interval in milliseconds",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Hidden"
                  },
                  "background_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Background color"
                  },
                  "readonly": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Read-only",
                    "readOnly": true
                  },
                  "edit_uri": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "dashboard_layouts": {
                    "description": "Layouts",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardLayout"
                    },
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Dashboard"
          }
        },
        "description": "### Get the dashboards in a space",
        "summary": "Get Space Dashboards",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space_dashboards",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/git_branch": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                },
                "is_remote": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a remote ref exists for the branch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                  "readOnly": true
                },
                "behind_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is behind the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "remote_ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch remote.",
                  "readOnly": true
                },
                "is_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this is the production branch",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                },
                "error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of error",
                  "readOnly": true
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is readonly",
                  "readOnly": true
                },
                "remote": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The name of the remote",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Message describing an error if present",
                  "readOnly": true
                },
                "remote_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the remote",
                  "readOnly": true
                },
                "owner_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the owner of a personal branch",
                  "readOnly": true
                },
                "ahead_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is ahead of the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_local": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a local ref exists for the branch",
                  "readOnly": true
                },
                "commit_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this branch was last committed.",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Git Branch"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Checkout and/or reset --hard an existing Git Branch\n\nOnly allowed in development mode\n  - Call `update_session` to select the 'dev' workspace.\n\nCheckout an existing branch if name field is different from the name of the currently checked out branch.\n\nOptionally specify a branch name, tag name or commit SHA to which the branch should be reset.\n  **DANGER** hard reset will be force pushed to the remote. Unsaved changes and commits may be permanently lost.\n\n",
        "summary": "Update Project Git Branch",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Git Branch",
            "schema": {
              "properties": {
                "ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                },
                "is_remote": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a remote ref exists for the branch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                  "readOnly": true
                },
                "behind_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is behind the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "remote_ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch remote.",
                  "readOnly": true
                },
                "is_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this is the production branch",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                },
                "error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of error",
                  "readOnly": true
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is readonly",
                  "readOnly": true
                },
                "remote": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The name of the remote",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Message describing an error if present",
                  "readOnly": true
                },
                "remote_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the remote",
                  "readOnly": true
                },
                "owner_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the owner of a personal branch",
                  "readOnly": true
                },
                "ahead_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is ahead of the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_local": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a local ref exists for the branch",
                  "readOnly": true
                },
                "commit_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this branch was last committed.",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_git_branch",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                },
                "is_remote": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a remote ref exists for the branch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                  "readOnly": true
                },
                "behind_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is behind the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "remote_ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch remote.",
                  "readOnly": true
                },
                "is_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this is the production branch",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                },
                "error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of error",
                  "readOnly": true
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is readonly",
                  "readOnly": true
                },
                "remote": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The name of the remote",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Message describing an error if present",
                  "readOnly": true
                },
                "remote_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the remote",
                  "readOnly": true
                },
                "owner_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the owner of a personal branch",
                  "readOnly": true
                },
                "ahead_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is ahead of the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_local": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a local ref exists for the branch",
                  "readOnly": true
                },
                "commit_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this branch was last committed.",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Git Branch"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create and Checkout a Git Branch\n\nCreates and checks out a new branch in the given project repository\nOnly allowed in development mode\n  - Call `update_session` to select the 'dev' workspace.\n\nOptionally specify a branch name, tag name or commit SHA as the start point in the ref field.\n  If no ref is specified, HEAD of the current branch will be used as the start point for the new branch.\n\n",
        "summary": "Checkout New Git Branch",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Git Branch",
            "schema": {
              "properties": {
                "ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                },
                "is_remote": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a remote ref exists for the branch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                  "readOnly": true
                },
                "behind_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is behind the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "remote_ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch remote.",
                  "readOnly": true
                },
                "is_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this is the production branch",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                },
                "error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of error",
                  "readOnly": true
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is readonly",
                  "readOnly": true
                },
                "remote": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The name of the remote",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Message describing an error if present",
                  "readOnly": true
                },
                "remote_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the remote",
                  "readOnly": true
                },
                "owner_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the owner of a personal branch",
                  "readOnly": true
                },
                "ahead_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is ahead of the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_local": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a local ref exists for the branch",
                  "readOnly": true
                },
                "commit_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this branch was last committed.",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_git_branch",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
                },
                "is_remote": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a remote ref exists for the branch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
                  "readOnly": true
                },
                "behind_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is behind the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "remote_ref": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The resolved ref of this branch remote.",
                  "readOnly": true
                },
                "is_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this is the production branch",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
                },
                "error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of error",
                  "readOnly": true
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not this branch is readonly",
                  "readOnly": true
                },
                "remote": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The name of the remote",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Message describing an error if present",
                  "readOnly": true
                },
                "remote_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The short name on the remote",
                  "readOnly": true
                },
                "owner_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the owner of a personal branch",
                  "readOnly": true
                },
                "ahead_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of commits the local branch is ahead of the remote",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_local": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a local ref exists for the branch",
                  "readOnly": true
                },
                "commit_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this branch was last committed.",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Git Branch"
          }
        },
        "description": "### Get the Current Git Branch\n\nReturns the git branch currently checked out in the given project repository\n",
        "summary": "Get Active Git Branch",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "git_branch",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/user_attributes": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "user_can_view": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Non-admin users can see the values of their attributes and use them in filters"
                },
                "is_system": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Attribute is a system default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users can change the value of this attribute for themselves"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, users will not be able to view values of this attribute"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value for when no value is set on the user"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "User Attribute"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new user attribute\n\nPermission information for a user attribute is conveyed through the `can` and `user_can_edit` fields.\nThe `user_can_edit` field indicates whether an attribute is user-editable _anywhere_ in the application.\nThe `can` field gives more granular access information, with the `set_value` child field indicating whether\nan attribute's value can be set by [Setting the User Attribute User Value](#!/User/set_user_attribute_user_value).\n\nNote: `name` and `label` fields must be unique across all user attributes in the Looker instance.\nAttempting to create a new user attribute with a name or label that duplicates an existing\nuser attribute will fail with a 422 error.\n",
        "summary": "Create User Attribute",
        "parameters": [
          {
            "name": "body",
            "description": "User Attribute",
            "schema": {
              "properties": {
                "user_can_view": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Non-admin users can see the values of their attributes and use them in filters"
                },
                "is_system": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Attribute is a system default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users can change the value of this attribute for themselves"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, users will not be able to view values of this attribute"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value for when no value is set on the user"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_user_attribute",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user_can_view": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Non-admin users can see the values of their attributes and use them in filters"
                  },
                  "is_system": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Attribute is a system default",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "hidden_value_domain_whitelist": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
                  },
                  "user_can_edit": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Users can change the value of this attribute for themselves"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of user attribute"
                  },
                  "value_is_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true, users will not be able to view values of this attribute"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
                  },
                  "default_value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Default value for when no value is set on the user"
                  },
                  "label": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Human-friendly label for user attribute"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "User Attribute"
          }
        },
        "description": "### Get information about all user attributes.\n",
        "summary": "Get All User Attributes",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "Fields to order the results by. Sortable fields include: name, label",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_user_attributes",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/dashboards": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Dashboard"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new dashboard\n\nCreates a new dashboard object and returns the details of the newly created dashboard.\n\n`Title`, `user_id`, and `space_id` are all required fields.\n`Space_id` and `user_id` must contain the id of an existing space or user, respectively.\nA dashboard's `title` must be unique within the space in which it resides.\n\nIf you receive a 422 error response when creating a dashboard, be sure to look at the\nresponse body for information about exactly which fields are missing or contain invalid data.\n\nYou can **update** an existing dashboard with [update_dashboard()](#!/Dashboard/update_dashboard)\n\nYou can **permanently delete** an existing dashboard with [delete_dashboard()](#!/Dashboard/delete_dashboard)\n",
        "summary": "Create Dashboard",
        "parameters": [
          {
            "name": "body",
            "description": "Dashboard",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_dashboard",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "query_timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone in which the Dashboard will run by default.",
                    "readOnly": true
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "refresh_interval": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds.",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dashboard Title",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "readonly": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Read-only",
                    "readOnly": true
                  },
                  "refresh_interval_to_i": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Refresh Interval in milliseconds",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Hidden",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description",
                    "readOnly": true
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "dashboards"
          }
        },
        "description": "### Get information about all active dashboards.\n\nReturns an array of **abbreviated dashboard objects**. Dashboards marked as deleted are excluded from this list.\n\nGet the **full details** of a specific dashboard by id with [dashboard()](#!/Dashboard/dashboard)\n\nFind **deleted dashboards** with [search_dashboards()](#!/Dashboard/search_dashboards)\n",
        "summary": "Get All Dashboards",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_dashboards",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboards/{dashboard_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Dashboard"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          }
        },
        "description": "### Update a dashboard\n\nYou can use this function to change the string and integer properties of\na dashboard. Nested objects such as filters, dashboard elements, or dashboard layout components\ncannot be modified by this function - use the update functions for the respective\nnested object types (like [update_dashboard_filter()](#!/3.1/Dashboard/update_dashboard_filter) to change a filter)\nto modify nested objects referenced by a dashboard.\n\nIf you receive a 422 error response when updating a dashboard, be sure to look at the\nresponse body for information about exactly which fields are missing or contain invalid data.\n",
        "summary": "Update Dashboard",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of dashboard",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Dashboard",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_dashboard",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete the dashboard with the specified id\n\nPermanently **deletes** a dashboard. (The dashboard cannot be recovered after this operation.)\n\n\"Soft\" delete or hide a dashboard by setting its `deleted` status to `True` with [update_dashboard()](#!/Dashboard/update_dashboard).\n\nNote: When a dashboard is deleted in the UI, it is soft deleted. Use this API call to permanently remove it, if desired.\n",
        "summary": "Delete Dashboard",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of dashboard",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_dashboard",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Dashboard"
          }
        },
        "description": "### Get information about a dashboard\n\nReturns the full details of the identified dashboard object\n\nGet a **summary list** of all active dashboards with [all_dashboards()](#!/Dashboard/all_dashboards)\n\nYou can **Search** for dashboards with [search_dashboards()](#!/Dashboard/search_dashboards)\n",
        "summary": "Get Dashboard",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of dashboard",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/groups/{group_id}/users": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Added user."
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Adds a new user to a group.\n",
        "summary": "Add a User to Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "User id to add",
            "schema": {
              "properties": {
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of user",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "add_group_user",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "first_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "First name"
                  },
                  "credentials_api3": {
                    "description": "API 3 credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsApi3"
                    },
                    "readOnly": true
                  },
                  "presumed_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker",
                    "readOnly": true
                  },
                  "credentials_saml": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsSaml",
                    "description": "Saml auth credentials",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_ids": {
                    "description": "Array of ids of the groups for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  },
                  "locale": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                  },
                  "verified_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                    "readOnly": true
                  },
                  "credentials_email": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsEmail",
                    "description": "Email/Password login credentials",
                    "readOnly": true
                  },
                  "roles_externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                    "readOnly": true
                  },
                  "credentials_oidc": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsOIDC",
                    "description": "OpenID Connect auth credentials",
                    "readOnly": true
                  },
                  "display_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Full name for display (available only if both first_name and last_name are set)",
                    "readOnly": true
                  },
                  "avatar_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for the avatar image (may be generic)",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_totp": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsTotp",
                    "description": "Two-factor credentials",
                    "readOnly": true
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Account has been disabled"
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "EMail address",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_ldap": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLDAP",
                    "description": "LDAP credentials",
                    "readOnly": true
                  },
                  "last_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last name"
                  },
                  "sessions": {
                    "description": "Active sessions",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Session"
                    },
                    "readOnly": true
                  },
                  "ui_state": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "home_space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID string for user's home space"
                  },
                  "models_dir_validated": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "User's dev workspace has been checked for presence of applicable production projects"
                  },
                  "embed_group_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "looker_versions": {
                    "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "credentials_google": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsGoogle",
                    "description": "Google auth credentials",
                    "readOnly": true
                  },
                  "personal_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of user's personal space",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_embed": {
                    "description": "Embed credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsEmbed"
                    },
                    "readOnly": true
                  },
                  "credentials_looker_openid": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLookerOpenid",
                    "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "role_ids": {
                    "description": "Array of ids of the roles for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "All users in group."
          }
        },
        "description": "### Get information about all the users directly included in a group.\n",
        "summary": "Get All Users in Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_group_users",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/login/{user_id}": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "access_token": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Access Token used for API calls",
                  "readOnly": true
                },
                "token_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of Token",
                  "readOnly": true
                },
                "expires_in": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of seconds before the token expires",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Access token with metadata."
          }
        },
        "description": "### Create an access token for a given user.\n\nThis can only be called by an authenticated admin user. It allows that admin to generate a new\nauthentication token for the user with the given user id. That token can then be used for subsequent\nAPI calls - which are then performed *as* that target user.\n\nThe target user does *not* need to have a pre-existing API client_id/client_secret pair. And, no such\ncredentials are created by this call.\n\nThis allows for building systems where api user authentication for an arbitrary number of users is done\noutside of Looker and funneled through a single 'service account' with admin permissions. Note that a\nnew access token is generated on each call. If target users are going to be making numerous API\ncalls in a short period then it is wise to cache this authentication token rather than call this before\neach of those API calls.\n\nSee 'login' for more detail on the access token and how to use it.\n",
        "summary": "Login user",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user.",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "login_user",
        "tags": [
          "ApiAuth"
        ],
        "x-looker-activity-type": "none",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/credentials_looker_openid": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Looker Openid login information for the specified user. Used by Looker Analysts.",
        "summary": "Delete Looker OpenId Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_looker_openid",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "logged_in_ip": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "IP address of client for most recent login using credential",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login",
                  "readOnly": true
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Looker OpenId Credential"
          }
        },
        "description": "### Looker Openid login information for the specified user. Used by Looker Analysts.",
        "summary": "Get Looker OpenId Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_looker_openid",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/integration_hubs/{integration_hub_id}/accept_legal_agreement": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "URL of the hub."
                },
                "official": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this hub is a first-party integration hub operated by Looker.",
                  "readOnly": true
                },
                "legal_agreement_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The legal agreement text for this integration hub.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "has_authorization_token": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the authorization_token is set for the hub.",
                  "readOnly": true
                },
                "legal_agreement_signed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "legal_agreement_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal terms for the integration hub are required before use.",
                  "readOnly": true
                },
                "authorization_token": {
                  "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of the hub.",
                  "readOnly": true
                },
                "fetch_error_message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Integration hub"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "Accepts the legal agreement for a given integration hub. This only works for integration hubs that have legal_agreement_required set to true and legal_agreement_signed set to false.",
        "summary": "Accept Integration Hub Legal Agreement",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of integration_hub",
            "required": true,
            "name": "integration_hub_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "accept_integration_hub_legal_agreement",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/internal_help_resources": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true and internal help resources content is not blank then the link for internal help resources will be show in the help menu and the content displayed within Looker"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Custom Welcome Email"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "Update internal help resources settings\n",
        "summary": "Update internal help resources configuration",
        "parameters": [
          {
            "name": "body",
            "description": "Custom Welcome Email",
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true and internal help resources content is not blank then the link for internal help resources will be show in the help menu and the content displayed within Looker"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_internal_help_resources",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboards/{dashboard_id}/dashboard_filters": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "listens_to_filters": {
                    "description": "Array of listeners for faceted filters",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Model of filter (required if type = field)"
                  },
                  "allow_multiple_values": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the filter allows multiple filter values"
                  },
                  "explore": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Explore of filter (required if type = field)"
                  },
                  "row": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Display order of this filter relative to other filters",
                    "format": "int64"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Dashboard",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "dimension": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dimension of filter (required if type = field)"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title of filter"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "required": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the filter requires a value to run the dashboard"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of filter"
                  },
                  "ui_config": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                    "additionalProperties": {
                      "type": "string",
                      "format": "any"
                    }
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type of filter: one of date, number, string, or field"
                  },
                  "field": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Field information",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "string",
                      "format": "any"
                    }
                  },
                  "default_value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Default value of filter"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "title",
                  "type"
                ]
              }
            },
            "description": "Dashboard Filter"
          }
        },
        "description": "### Get information about all the dashboard filters on a dashboard with a specific id.",
        "summary": "Get All Dashboard Filters",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of dashboard",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_dashboard_filters",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed shared folder",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed users folder",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root shared folder",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root user folder",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is a user's personal folder",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is descendant of a user's personal folder",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is an embed folder",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "folders"
          }
        },
        "description": "Search for folders by creator id, parent id, name, etc",
        "summary": "Search Folders",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to return. (used with offset and takes priority over page and per_page)",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning any. (used with limit and takes priority over page and per_page)",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "name",
            "description": "Match Space title.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Match Space id",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "parent_id",
            "description": "Filter on a children of a particular folder.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "creator_id",
            "description": "Filter on folder created by a particular user.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_folders",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/looks/{look_id}/run/{result_format}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Look"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "parameters": [
          {
            "format": "int64",
            "description": "Id of look",
            "required": true,
            "name": "look_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "result_format",
            "description": "Format of result",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "format": "int64",
            "description": "Row limit (may override the limit in the saved query).",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "apply_formatting",
            "description": "Apply model-specified formatting to each result.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "apply_vis",
            "description": "Apply visualization options to results.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache",
            "description": "Get results from cache if available.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Render width for image formats.",
            "required": false,
            "name": "image_width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Render height for image formats.",
            "required": false,
            "name": "image_height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "generate_drill_links",
            "description": "Generate drill links (only applicable to 'json_detail' format.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "force_production",
            "description": "Force use of production models even if the user is in development mode.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache_only",
            "description": "Retrieve any results from cache even if the results have expired.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "path_prefix",
            "description": "Prefix to use for drill links (url encoded).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "rebuild_pdts",
            "description": "Rebuild PDTS used in query.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "server_table_calcs",
            "description": "Perform table calculations on query results",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "description": "### Run a Look\n\nRuns a given look's query and returns the results in the requested format.\n\nSupported formats:\n\n| result_format | Description\n| :-----------: | :--- |\n| json | Plain json\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| md | Simple markdown\n| xlsx | MS Excel spreadsheet\n| sql | Returns the generated SQL rather than running the query\n| png | A PNG image of the visualization of the query\n| jpg | A JPG image of the visualization of the query\n\n\n",
        "summary": "Run Look",
        "produces": [
          "text",
          "application/json",
          "image/png",
          "image/jpg"
        ],
        "operationId": "run_look",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/users/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "first_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "First name"
                  },
                  "credentials_api3": {
                    "description": "API 3 credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsApi3"
                    },
                    "readOnly": true
                  },
                  "presumed_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker",
                    "readOnly": true
                  },
                  "credentials_saml": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsSaml",
                    "description": "Saml auth credentials",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_ids": {
                    "description": "Array of ids of the groups for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  },
                  "locale": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                  },
                  "verified_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                    "readOnly": true
                  },
                  "credentials_email": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsEmail",
                    "description": "Email/Password login credentials",
                    "readOnly": true
                  },
                  "roles_externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                    "readOnly": true
                  },
                  "credentials_oidc": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsOIDC",
                    "description": "OpenID Connect auth credentials",
                    "readOnly": true
                  },
                  "display_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Full name for display (available only if both first_name and last_name are set)",
                    "readOnly": true
                  },
                  "avatar_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for the avatar image (may be generic)",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_totp": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsTotp",
                    "description": "Two-factor credentials",
                    "readOnly": true
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Account has been disabled"
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "EMail address",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_ldap": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLDAP",
                    "description": "LDAP credentials",
                    "readOnly": true
                  },
                  "last_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last name"
                  },
                  "sessions": {
                    "description": "Active sessions",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Session"
                    },
                    "readOnly": true
                  },
                  "ui_state": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "home_space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID string for user's home space"
                  },
                  "models_dir_validated": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "User's dev workspace has been checked for presence of applicable production projects"
                  },
                  "embed_group_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "looker_versions": {
                    "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "credentials_google": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsGoogle",
                    "description": "Google auth credentials",
                    "readOnly": true
                  },
                  "personal_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of user's personal space",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_embed": {
                    "description": "Embed credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsEmbed"
                    },
                    "readOnly": true
                  },
                  "credentials_looker_openid": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLookerOpenid",
                    "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "role_ids": {
                    "description": "Array of ids of the roles for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Matching users."
          }
        },
        "description": "### Search users\n\nReturns all<sup>*</sup> user records that match the given search criteria.\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n\n(<sup>*</sup>) Results are always filtered to the level of information the caller is permitted to view.\nLooker admins can see all user details; normal users in an open system can see\nnames of other users but no details; normal users in a closed system can only see\nnames of other users who are members of the same group as the user.\n\n",
        "summary": "Search Users",
        "parameters": [
          {
            "name": "fields",
            "description": "Include only these fields in the response",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Return only page N of paginated results",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Return N rows of data per page",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Match User Id.",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "first_name",
            "description": "Match First name.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "last_name",
            "description": "Match Last name.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "verified_looker_employee",
            "description": "Search for user accounts associated with Looker employees",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "email",
            "description": "Search for the user with this email address",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "is_disabled",
            "description": "Search for disabled user accounts",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Search for users who have access to this content_metadata item",
            "required": false,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Search for users who are direct members of this group",
            "required": false,
            "name": "group_id",
            "type": "integer",
            "in": "query"
          }
        ],
        "operationId": "search_users",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/sql_queries": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "explore_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore page URL for this SQL query",
                  "readOnly": true
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The most recent time this query was run",
                  "readOnly": true
                },
                "run_count": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Number of times this query has been run",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "creator": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who created this SQL query",
                  "readOnly": true
                },
                "plaintext": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Should this query be rendered as plain text",
                  "readOnly": true
                },
                "last_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds this query took to run the most recent time it was run",
                  "readOnly": true,
                  "format": "float"
                },
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model name this query uses",
                  "readOnly": true
                },
                "sql": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "SQL query text",
                  "readOnly": true
                },
                "slug": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The identifier of the SQL query",
                  "readOnly": true
                },
                "connection": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DBConnectionBase",
                  "description": "Connection this query uses",
                  "readOnly": true
                },
                "browser_limit": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Maximum number of rows this query will display on the SQL Runner page",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "SQL Runner Query"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "Create a SQL Runner query.",
        "summary": "Create SQL Runner Query",
        "parameters": [
          {
            "name": "body",
            "description": "SQL Runner Query",
            "schema": {
              "properties": {
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of LookML Model (this or \"connection_id\" required)"
                },
                "connection_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Connection (this or \"model_name\" required)"
                },
                "sql": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "SQL query"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "create_sql_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/render_tasks/{render_task_id}/results": {
      "get": {
        "responses": {
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Document or image"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "parameters": [
          {
            "name": "render_task_id",
            "description": "Id of render task",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "description": "### Get the document or image produced by a completed render task.\n\nNote that the PDF or image result will be a binary blob in the HTTP response, as indicated by the\nContent-Type in the response headers. This may require specialized (or at least different) handling than text\nresponses such as JSON. You may need to tell your HTTP client that the response is binary so that it does not\nattempt to parse the binary data as text.\n\nIf the render task exists but has not finished rendering the results, the response HTTP status will be\n**202 Accepted**, the response body will be empty, and the response will have a Retry-After header indicating\nthat the caller should repeat the request at a later time.\n\nReturns 404 if the render task cannot be found, if the cached result has expired, or if the caller\ndoes not have permission to view the results.\n\nFor detailed information about the status of the render task, use [Render Task](#!/RenderTask/render_task).\nPolling loops waiting for completion of a render task would be better served by polling **render_task(id)** until\nthe task status reaches completion (or error) instead of polling **render_task_results(id)** alone.\n",
        "summary": "Render Task Results",
        "produces": [
          "image/jpeg",
          "image/png",
          "application/pdf"
        ],
        "operationId": "render_task_results",
        "tags": [
          "RenderTask"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/content_metadata_access/{content_metadata_access_id}": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated Content Metadata",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated user",
                  "readOnly": true,
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "permission_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of permission: \"view\" or \"edit\"",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Content Metadata Access"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update type of access for content metadata.\n",
        "summary": "Update Content Metadata Access",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of content metadata access",
            "required": true,
            "name": "content_metadata_access_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Content Metadata Access",
            "schema": {
              "properties": {
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated Content Metadata",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated user",
                  "readOnly": true,
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "permission_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of permission: \"view\" or \"edit\"",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_content_metadata_access",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Remove content metadata access.\n",
        "summary": "Delete Content Metadata Access",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of content metadata access",
            "required": true,
            "name": "content_metadata_access_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_content_metadata_access",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/saml_test_configs": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "idp_audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Certificate (provided by IdP)"
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from Saml"
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Url (provided by IdP)"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a Saml config test",
                  "readOnly": true
                },
                "allowed_clock_drift": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
                  "format": "int64"
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable Saml authentication for the server"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeWrite"
                  }
                },
                "bypass_login_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "groups_member_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Issuer (provided by IdP)"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "SAML test config"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Create a SAML test configuration.\n",
        "summary": "Create SAML Test Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "SAML test config",
            "schema": {
              "properties": {
                "idp_audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Certificate (provided by IdP)"
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from Saml"
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Url (provided by IdP)"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a Saml config test",
                  "readOnly": true
                },
                "allowed_clock_drift": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
                  "format": "int64"
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable Saml authentication for the server"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeWrite"
                  }
                },
                "bypass_login_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "groups_member_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Issuer (provided by IdP)"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "create_saml_test_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/credentials_totp": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "verified": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User has verified",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Two-Factor Credential"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Two-factor login information for the specified user.",
        "summary": "Create Two-Factor Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Two-Factor Credential",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "verified": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User has verified",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_user_credentials_totp",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Two-factor login information for the specified user.",
        "summary": "Delete Two-Factor Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_totp",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "verified": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User has verified",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Two-Factor Credential"
          }
        },
        "description": "### Two-factor login information for the specified user.",
        "summary": "Get Two-Factor Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_totp",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/integration_hubs/{integration_hub_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "URL of the hub."
                },
                "official": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this hub is a first-party integration hub operated by Looker.",
                  "readOnly": true
                },
                "legal_agreement_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The legal agreement text for this integration hub.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "has_authorization_token": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the authorization_token is set for the hub.",
                  "readOnly": true
                },
                "legal_agreement_signed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "legal_agreement_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal terms for the integration hub are required before use.",
                  "readOnly": true
                },
                "authorization_token": {
                  "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of the hub.",
                  "readOnly": true
                },
                "fetch_error_message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Integration Hub"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a Integration Hub definition.\n",
        "summary": "Update Integration Hub",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Integration Hub",
            "required": true,
            "name": "integration_hub_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Integration Hub",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "URL of the hub."
                },
                "official": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this hub is a first-party integration hub operated by Looker.",
                  "readOnly": true
                },
                "legal_agreement_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The legal agreement text for this integration hub.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "has_authorization_token": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the authorization_token is set for the hub.",
                  "readOnly": true
                },
                "legal_agreement_signed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "legal_agreement_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal terms for the integration hub are required before use.",
                  "readOnly": true
                },
                "authorization_token": {
                  "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of the hub.",
                  "readOnly": true
                },
                "fetch_error_message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_integration_hub",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a Integration Hub.\n",
        "summary": "Delete Integration Hub",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of integration_hub",
            "required": true,
            "name": "integration_hub_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_integration_hub",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "URL of the hub."
                },
                "official": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this hub is a first-party integration hub operated by Looker.",
                  "readOnly": true
                },
                "legal_agreement_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The legal agreement text for this integration hub.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "has_authorization_token": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the authorization_token is set for the hub.",
                  "readOnly": true
                },
                "legal_agreement_signed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "legal_agreement_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal terms for the integration hub are required before use.",
                  "readOnly": true
                },
                "authorization_token": {
                  "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of the hub.",
                  "readOnly": true
                },
                "fetch_error_message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Integration Hub"
          }
        },
        "description": "### Get information about a Integration Hub.\n",
        "summary": "Get Integration Hub",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Integration Hub",
            "required": true,
            "name": "integration_hub_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "integration_hub",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_embed/{credentials_embed_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Embed login information for the specified user.",
        "summary": "Delete Embedding Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "id of Embedding Credential",
            "required": true,
            "name": "credentials_embed_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_embed",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's id for a group to which this user was added during the most recent login",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "external_user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's unique id for the user",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Embedding Credential"
          }
        },
        "description": "### Embed login information for the specified user.",
        "summary": "Get Embedding Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of Embedding Credential",
            "required": true,
            "name": "credentials_embed_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_embed",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/dashboard_filters": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "listens_to_filters": {
                  "description": "Array of listeners for faceted filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "model": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model of filter (required if type = field)"
                },
                "allow_multiple_values": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter allows multiple filter values"
                },
                "explore": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore of filter (required if type = field)"
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Display order of this filter relative to other filters",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dimension": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dimension of filter (required if type = field)"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of filter"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter requires a value to run the dashboard"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of filter"
                },
                "ui_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of filter: one of date, number, string, or field"
                },
                "field": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Field information",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value of filter"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "title",
                "type"
              ]
            },
            "description": "Dashboard Filter"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a dashboard filter on the dashboard with a specific id.",
        "summary": "Create Dashboard Filter",
        "parameters": [
          {
            "name": "body",
            "description": "Dashboard Filter",
            "schema": {
              "properties": {
                "listens_to_filters": {
                  "description": "Array of listeners for faceted filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "model": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Model of filter (required if type = field)"
                },
                "allow_multiple_values": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter allows multiple filter values"
                },
                "explore": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore of filter (required if type = field)"
                },
                "row": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Display order of this filter relative to other filters",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Dashboard"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "dimension": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dimension of filter (required if type = field)"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of filter"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the filter requires a value to run the dashboard"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of filter"
                },
                "ui_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of filter: one of date, number, string, or field"
                },
                "field": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Field information",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "default_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default value of filter"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "dashboard_id",
                "name",
                "title",
                "type"
              ]
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_dashboard_filter",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_email": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "password_reset_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url with one-time use secret token that the user can use to reset password",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "forced_password_reset_at_next_login": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Force the user to change their password upon their next login"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login"
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Email/Password Credential"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Email/password login information for the specified user.",
        "summary": "Create Email/Password Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Email/Password Credential",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "password_reset_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url with one-time use secret token that the user can use to reset password",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "forced_password_reset_at_next_login": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Force the user to change their password upon their next login"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login"
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_user_credentials_email",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "password_reset_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url with one-time use secret token that the user can use to reset password",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "forced_password_reset_at_next_login": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Force the user to change their password upon their next login"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login"
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Email/Password Credential"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Email/password login information for the specified user.",
        "summary": "Update Email/Password Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Email/Password Credential",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "password_reset_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url with one-time use secret token that the user can use to reset password",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "forced_password_reset_at_next_login": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Force the user to change their password upon their next login"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login"
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_user_credentials_email",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Email/password login information for the specified user.",
        "summary": "Delete Email/Password Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_email",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "password_reset_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Url with one-time use secret token that the user can use to reset password",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "forced_password_reset_at_next_login": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Force the user to change their password upon their next login"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address used for user login"
                },
                "user_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this user",
                  "readOnly": true,
                  "format": "uri"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Email/Password Credential"
          }
        },
        "description": "### Email/password login information for the specified user.",
        "summary": "Get Email/Password Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_email",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/content_validation": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "content_with_errors": {
                  "description": "A list of content errors",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContentValidatorError"
                  },
                  "readOnly": true
                },
                "total_looks_validated": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The number of looks validated",
                  "readOnly": true,
                  "format": "int64"
                },
                "total_dashboard_elements_validated": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The number of dashboard elements validated",
                  "readOnly": true,
                  "format": "int64"
                },
                "total_explores_validated": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The number of explores used across all content validated",
                  "readOnly": true,
                  "format": "int64"
                },
                "computation_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Duration of content validation in seconds",
                  "readOnly": true,
                  "format": "float"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Content validation results"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Validate All Content\nRequires Content Validation Labs Feature be enabled\n\nPerforms validation of all looks and dashboards\nReturns a list of errors found as well as metadata about the content validation run.\n",
        "summary": "Validate Content",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "content_validation",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/validate": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "models_not_validated": {
                  "description": "A list of models which were not fully validated",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ModelsNotValidated"
                  },
                  "readOnly": true
                },
                "project_digest": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A hash value computed from the project's current state",
                  "readOnly": true
                },
                "errors": {
                  "description": "A list of project errors",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProjectError"
                  },
                  "readOnly": true
                },
                "computation_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Duration of project validation in seconds",
                  "readOnly": true,
                  "format": "float"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project validation results"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Validate Project\n\nPerforms lint validation of all lookml files in the project.\nReturns a list of errors found, if any.\n\nValidating the content of all the files in a project can be computationally intensive\nfor large projects. For best performance, call `validate_project(project_id)` only\nwhen you really want to recompute project validation. To quickly display the results of\nthe most recent project validation (without recomputing), use `project_validation_results(project_id)`\n",
        "summary": "Validate Project",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "validate_project",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "models_not_validated": {
                  "description": "A list of models which were not fully validated",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ModelsNotValidated"
                  },
                  "readOnly": true
                },
                "stale": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, the cached project validation results are no longer accurate because the project has changed since the cached results were calculated",
                  "readOnly": true
                },
                "project_digest": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A hash value computed from the project's current state",
                  "readOnly": true
                },
                "errors": {
                  "description": "A list of project errors",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProjectError"
                  },
                  "readOnly": true
                },
                "computation_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Duration of project validation in seconds",
                  "readOnly": true,
                  "format": "float"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project validation results"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "description": "Deleted"
          }
        },
        "description": "### Get Cached Project Validation Results\n\nReturns the cached results of a previous project validation calculation, if any.\nReturns http status 204 No Content if no validation results exist.\n\nValidating the content of all the files in a project can be computationally intensive\nfor large projects. Use this API to simply fetch the results of the most recent\nproject validation rather than revalidating the entire project from scratch.\n\nA value of `\"stale\": true` in the response indicates that the project has changed since\nthe cached validation results were computed. The cached validation results may no longer\nreflect the current state of the project.\n",
        "summary": "Cached Project Validation Results",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "project_validation_results",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/content_metadata_access": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated Content Metadata",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated user",
                  "readOnly": true,
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "permission_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of permission: \"view\" or \"edit\"",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Content Metadata Access"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create content metadata access.\n",
        "summary": "Create Content Metadata Access",
        "parameters": [
          {
            "name": "body",
            "description": "Content Metadata Access",
            "schema": {
              "properties": {
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated Content Metadata",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated user",
                  "readOnly": true,
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "permission_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of permission: \"view\" or \"edit\"",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of associated group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_content_metadata_access",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of associated Content Metadata",
                    "readOnly": true
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of associated user",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "permission_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type of permission: \"view\" or \"edit\"",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "group_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of associated group",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Content Metadata Access"
          }
        },
        "description": "### All content metadata access records for a content metadata item.\n",
        "summary": "Get All Content Metadata Accesses",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of content metadata",
            "required": true,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_content_metadata_accesses",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders/{folder_id}/children": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed shared space",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed users space",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root shared space",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root user space",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is a user's personal space",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is descendant of a user's personal space",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is an embed space",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Folders"
          }
        },
        "description": "### Get the children of a folder.",
        "summary": "Get Folder Children",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder_children",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/files": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "extension": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The extension of the file: .view.lkml, .model.lkml, etc",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "editable": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "State of editability for the file.",
                    "readOnly": true
                  },
                  "path": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Path, file name, and extension of the file relative to the project root directory",
                    "readOnly": true
                  },
                  "git_status": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/GitStatus",
                    "description": "Status of the file according to git",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "An opaque token uniquely identifying a file within a project. Avoid parsing or decomposing the text of this token. This token is stable within a Looker release but may change between Looker releases",
                    "readOnly": true
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "File type: model, view, etc",
                    "readOnly": true
                  },
                  "mime_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "File mime type",
                    "readOnly": true
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Display name",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Project File"
          }
        },
        "description": "### Get All Project Files\n\nReturns a list of the files in the project\n",
        "summary": "Get All Project Files",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_project_files",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/permissions": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "parent": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dependency parent symbol",
                    "readOnly": true
                  },
                  "permission": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Permission symbol",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Permission"
          }
        },
        "description": "### Get all supported permissions.\n",
        "summary": "Get All Permissions",
        "x-looker-activity-type": "non_query",
        "operationId": "all_permissions",
        "tags": [
          "Role"
        ],
        "x-looker-status": "stable"
      }
    },
    "/color_collections/default": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "ColorCollection"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Set the global default Color Collection by ID\n\nReturns the new specified default Color Collection object.\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Set Default Color Collection",
        "parameters": [
          {
            "name": "collection_id",
            "description": "ID of color collection to set as default",
            "type": "string",
            "in": "query",
            "required": true
          }
        ],
        "operationId": "set_default_color_collection",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "ColorCollection"
          }
        },
        "description": "### Get the default color collection\n\nUse this to retrieve the default Color Collection.\n\nSet the default color collection with [ColorCollection](#!/ColorCollection/set_default_color_collection)\n",
        "summary": "Get Default Color Collection",
        "x-looker-activity-type": "non_query",
        "operationId": "default_color_collection",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-status": "beta"
      }
    },
    "/render_tasks/queries/{query_id}/{result_format}": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "status_detail": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional information about the current status",
                  "readOnly": true
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of lookml dashboard to render",
                  "readOnly": true
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled",
                  "readOnly": true
                },
                "query_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed running queries",
                  "readOnly": true,
                  "format": "double"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Id of this render task",
                  "readOnly": true
                },
                "finalized_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was completed",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output width in pixels",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Output format: pdf, png, or jpg",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The user account permissions in which the render task will execute",
                  "readOnly": true,
                  "format": "int64"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was created",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output height in pixels. Flowed layouts may ignore this value.",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of dashboard to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Total seconds elapsed for render task",
                  "readOnly": true,
                  "format": "double"
                },
                "render_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed rendering data",
                  "readOnly": true,
                  "format": "double"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Render Task"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new task to render an existing query to an image.\n\nReturns a render task object.\nTo check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).\nOnce the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).\n\n",
        "summary": "Create Query Render Task",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of the query to render",
            "required": true,
            "name": "query_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "result_format",
            "description": "Output type: png or jpg",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "format": "int64",
            "description": "Output width in pixels",
            "required": true,
            "name": "width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Output height in pixels",
            "required": true,
            "name": "height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_query_render_task",
        "tags": [
          "RenderTask"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/workspaces/{workspace_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The unique id of this user workspace. Predefined workspace ids include \"production\" and \"dev\"",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "projects": {
                  "description": "The local state of each project in the workspace",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Project"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Workspace"
          }
        },
        "description": "### Get A Workspace\n\nReturns information about a workspace such as the git status and selected branches\nof all projects available to the caller's user account.\n\nA workspace defines which versions of project files will be used to evaluate expressions\nand operations that use model definitions - operations such as running queries or rendering dashboards.\nEach project has its own git repository, and each project in a workspace may be configured to reference\nparticular branch or revision within their respective repositories.\n\nThere are two predefined workspaces available: \"production\" and \"dev\".\n\nThe production workspace is shared across all Looker users. Models in the production workspace are read-only.\nChanging files in production is accomplished by modifying files in a git branch and using Pull Requests\nto merge the changes from the dev branch into the production branch, and then telling\nLooker to sync with production.\n\nThe dev workspace is local to each Looker user. Changes made to project/model files in the dev workspace only affect\nthat user, and only when the dev workspace is selected as the active workspace for the API session.\n(See set_session_workspace()).\n\nThe dev workspace is NOT unique to an API session. Two applications accessing the Looker API using\nthe same user account will see the same files in the dev workspace. To avoid collisions between\nAPI clients it's best to have each client login with API3 credentials for a different user account.\n\nChanges made to files in a dev workspace are persistent across API sessions. It's a good\nidea to commit any changes you've made to the git repository, but not strictly required. Your modified files\nreside in a special user-specific directory on the Looker server and will still be there when you login in again\nlater and use update_session(workspace_id: \"dev\") to select the dev workspace for the new API session.\n",
        "summary": "Get Workspace",
        "parameters": [
          {
            "name": "workspace_id",
            "description": "Id of the workspace ",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "workspace",
        "tags": [
          "Workspace"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboard_elements/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "note_state": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note State"
                  },
                  "title_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile title"
                  },
                  "lookml_link_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "LookML link ID",
                    "readOnly": true
                  },
                  "refresh_interval": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Refresh Interval"
                  },
                  "merge_result_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID of merge result"
                  },
                  "alert_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Count of Alerts associated to a dashboard element",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "body_text_as_html": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile body text as Html",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "look": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookWithQuery",
                    "description": "Look",
                    "readOnly": true
                  },
                  "note_text_as_html": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note Text as Html",
                    "readOnly": true
                  },
                  "edit_uri": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "result_maker": {
                    "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                    "description": "Data about the result maker.",
                    "x-looker-nullable": true
                  },
                  "result_maker_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of the ResultMakerLookup entry.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "title_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether title is hidden"
                  },
                  "body_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile body text"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Dashboard"
                  },
                  "query": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/Query",
                    "description": "Query",
                    "readOnly": true
                  },
                  "subtitle_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile subtitle text"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title of dashboard element"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id Of Query",
                    "format": "int64"
                  },
                  "refresh_interval_to_i": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Refresh Interval as integer",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id Of Look"
                  },
                  "note_display": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note Display"
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type"
                  },
                  "note_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note Text"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Dashboard elements"
          }
        },
        "description": "### Search Dashboard Elements\n\nReturns an **array of DashboardElement objects** that match the specified search criteria.\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n",
        "summary": "Search Dashboard Elements",
        "parameters": [
          {
            "format": "int64",
            "description": "Select elements that refer to a given dashboard id",
            "required": false,
            "name": "dashboard_id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Select elements that refer to a given look id",
            "required": false,
            "name": "look_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "title",
            "description": "Match the title of element",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "description": "Select soft-deleted dashboard elements",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "Fields to sort by. Sortable fields: [:look_id, :dashboard_id, :deleted, :title]",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_dashboard_elements",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dialect_info": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "supported_options": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/DialectInfoOptions",
                    "description": "Option support details",
                    "readOnly": true
                  },
                  "default_max_connections": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Default number max connections",
                    "readOnly": true
                  },
                  "installed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is the supporting driver installed",
                    "readOnly": true
                  },
                  "default_port": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Default port number",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The name of the dialect",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "label": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The human-readable label of the connection",
                    "readOnly": true
                  },
                  "label_for_database_equivalent": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "What the dialect calls the equivalent of a normal SQL table",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Dialect Info"
          }
        },
        "description": "### Get information about all dialects.\n",
        "summary": "Get All Dialect Infos",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_dialect_infos",
        "tags": [
          "Connection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/attribute_values/{user_attribute_id}": {
      "patch": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "user_attribute_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User Attribute",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can the user set this value",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value of attribute for user"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute",
                  "readOnly": true
                },
                "rank": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Precedence for setting value on user (lowest wins)",
                  "readOnly": true,
                  "format": "int64"
                },
                "source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "How user got this value for this attribute",
                  "readOnly": true
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "If this user attribute is hidden, whitelist of destinations to which it may be sent.",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "User attribute value."
          }
        },
        "description": "### Store a custom value for a user attribute in a user's account settings.\n\nPer-user user attribute values take precedence over group or default values.\n",
        "summary": "Set User Attribute User Value",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "New attribute value for user.",
            "schema": {
              "properties": {
                "user_attribute_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User Attribute",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_can_edit": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can the user set this value",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value of attribute for user"
                },
                "value_is_hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user attribute",
                  "readOnly": true
                },
                "rank": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Precedence for setting value on user (lowest wins)",
                  "readOnly": true,
                  "format": "int64"
                },
                "source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "How user got this value for this attribute",
                  "readOnly": true
                },
                "hidden_value_domain_whitelist": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "If this user attribute is hidden, whitelist of destinations to which it may be sent.",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Human-friendly label for user attribute",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "set_user_attribute_user_value",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "description": "Deleted"
          }
        },
        "description": "### Delete a user attribute value from a user's account settings.\n\nAfter the user attribute value is deleted from the user's account settings, subsequent requests\nfor the user attribute value for this user will draw from the user's groups or the default\nvalue of the user attribute. See [Get User Attribute Values](#!/User/user_attribute_user_values) for more\ninformation about how user attribute values are resolved.\n",
        "summary": "Delete User Attribute User Value",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_attribute_user_value",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/dashboards/{lookml_dashboard_id}/import/{space_id}": {
      "post": {
        "responses": {
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Dashboard"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "201": {
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "dashboard"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Import a LookML dashboard to a space as a UDD\nCreates a UDD (a dashboard which exists in the Looker database rather than as a LookML file) from the LookML dashboard\nand puts it in the space specified. The created UDD will have a lookml_link_id which links to the original LookML dashboard.\n\nTo give the imported dashboard specify a (e.g. title: \"my title\") in the body of your request, otherwise the imported\ndashboard will have the same title as the original LookML dashboard.\n\nFor this operation to succeed the user must have permission to see the LookML dashboard in question, and have permission to\ncreate content in the space the dashboard is being imported to.\n\n**Sync** a linked UDD with [sync_lookml_dashboard()](#!/Dashboard/sync_lookml_dashboard)\n**Unlink** a linked UDD by setting lookml_link_id to null with [update_dashboard()](#!/Dashboard/update_dashboard)\n",
        "summary": "Import LookML Dashboard",
        "parameters": [
          {
            "name": "lookml_dashboard_id",
            "description": "Id of LookML dashboard",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "space_id",
            "description": "Id of space to import the dashboard to",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Dashboard",
            "schema": {
              "properties": {
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone in which the Dashboard will run by default."
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Metadata Slug"
                },
                "lookml_link_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                },
                "refresh_interval": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "space": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/SpaceBase",
                  "description": "Space",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Favorite Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "show_filters_bar": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                },
                "last_accessed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time the dashboard was last accessed",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_viewed_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time last viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "date-time"
                },
                "tile_background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile background color"
                },
                "tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Tile text color"
                },
                "text_tile_text_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color of text on text tiles"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "show_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Show title"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "description": "Filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardFilter"
                  },
                  "readOnly": true
                },
                "title_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title color"
                },
                "deleter_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User that 'soft' deleted the dashboard.",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_elements": {
                  "description": "Elements",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardElement"
                  },
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookModel",
                  "description": "Model",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Space"
                },
                "load_configuration": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "configuration option that governs how dashboard loading will happen."
                },
                "deleted": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not a dashboard is 'soft' deleted."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard Title"
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times viewed in the Looker web UI",
                  "readOnly": true,
                  "format": "int64"
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time that the Dashboard was 'soft' deleted.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "refresh_interval_to_i": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Refresh Interval in milliseconds",
                  "readOnly": true,
                  "format": "int64"
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Hidden"
                },
                "background_color": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Background color"
                },
                "readonly": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is Read-only",
                  "readOnly": true
                },
                "edit_uri": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                  "readOnly": true,
                  "format": "uri"
                },
                "dashboard_layouts": {
                  "description": "Layouts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardLayout"
                  },
                  "readOnly": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times favorited",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of User",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "raw_locale",
            "description": "If true, and this dashboard is localized, export it with the raw keys, not localized.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "import_lookml_dashboard",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/looks/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "public": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Public"
                  },
                  "public_slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Slug",
                    "readOnly": true
                  },
                  "image_embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Image Embed Url",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserIdOnly",
                    "description": "User",
                    "readOnly": true
                  },
                  "is_run_on_load": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "auto-run query when Look viewed"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space of this Look",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was last accessed by any user",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a look is 'soft' deleted."
                  },
                  "google_spreadsheet_formula": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Google Spreadsheet Formula",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_updater_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that last updated the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that deleted the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "excel_file_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Excel File Url",
                    "readOnly": true
                  },
                  "public_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Url",
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was updated.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Space Id"
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Look Title"
                  },
                  "short_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Short Url",
                    "readOnly": true
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Query Id",
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embed Url",
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id",
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "looks"
          }
        },
        "description": "### Search Looks\n\nReturns an **array of Look objects** that match the specified search criteria.\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n\nGet a **single look** by id with [look(id)](#!/Look/look)\n",
        "summary": "Search Looks",
        "parameters": [
          {
            "name": "title",
            "description": "Match Look title.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "description",
            "description": "Match Look description.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Select looks with a particular content favorite id",
            "required": false,
            "name": "content_favorite_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "space_id",
            "description": "Select looks in a particular space.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "user_id",
            "description": "Select looks created by a particular user.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "view_count",
            "description": "Select looks with particular view_count value",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "description": "Select soft-deleted looks",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Select looks that reference a particular query by query_id",
            "required": false,
            "name": "query_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to return. (used with offset and takes priority over page and per_page)",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning any. (used with limit and takes priority over page and per_page)",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "One or more fields to sort results by. Sortable fields: [:title, :user_id, :id, :created_at, :space_id, :description, :updated_at, :last_updater_id, :view_count, :favorite_count, :content_favorite_id, :deleted, :deleted_at, :last_viewed_at, :query_id]",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_looks",
        "tags": [
          "Look"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders/{folder_id}/dashboards": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "query_timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone in which the Dashboard will run by default."
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Content Metadata Slug"
                  },
                  "lookml_link_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                  },
                  "refresh_interval": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "show_filters_bar": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time the dashboard was last accessed",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "tile_background_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Tile background color"
                  },
                  "tile_text_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Tile text color"
                  },
                  "text_tile_text_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color of text on text tiles"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "show_title": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Show title"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Dashboard was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "description": "Filters",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardFilter"
                    },
                    "readOnly": true
                  },
                  "title_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title color"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that 'soft' deleted the dashboard.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboard_elements": {
                    "description": "Elements",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardElement"
                    },
                    "readOnly": true
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Space"
                  },
                  "load_configuration": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "configuration option that governs how dashboard loading will happen."
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a dashboard is 'soft' deleted."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dashboard Title"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Dashboard was 'soft' deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "refresh_interval_to_i": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Refresh Interval in milliseconds",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Hidden"
                  },
                  "background_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Background color"
                  },
                  "readonly": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Read-only",
                    "readOnly": true
                  },
                  "edit_uri": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "dashboard_layouts": {
                    "description": "Layouts",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardLayout"
                    },
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Dashboard"
          }
        },
        "description": "### Get the dashboards in a folder",
        "summary": "Get Folder Dashboards",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder_dashboards",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/roles": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "permission_set_id": {
                  "description": "(Write-Only) Id of permission set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "permission_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/PermissionSet",
                  "description": "(Read only) Permission set",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "model_set_id": {
                  "description": "(Write-Only) Id of model set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "users_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get list of users with this role",
                  "readOnly": true,
                  "format": "uri"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of Role"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "model_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ModelSet",
                  "description": "(Read only) Model set",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Role"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a role with the specified information.\n",
        "summary": "Create Role",
        "parameters": [
          {
            "name": "body",
            "description": "Role",
            "schema": {
              "properties": {
                "permission_set_id": {
                  "description": "(Write-Only) Id of permission set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "permission_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/PermissionSet",
                  "description": "(Read only) Permission set",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "model_set_id": {
                  "description": "(Write-Only) Id of model set",
                  "x-looker-nullable": true,
                  "type": "integer",
                  "x-looker-write-only": true,
                  "format": "int64"
                },
                "users_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get list of users with this role",
                  "readOnly": true,
                  "format": "uri"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of Role"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "model_set": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ModelSet",
                  "description": "(Read only) Model set",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_role",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "permission_set_id": {
                    "description": "(Write-Only) Id of permission set",
                    "x-looker-nullable": true,
                    "type": "integer",
                    "x-looker-write-only": true,
                    "format": "int64"
                  },
                  "permission_set": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/PermissionSet",
                    "description": "(Read only) Permission set",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "model_set_id": {
                    "description": "(Write-Only) Id of model set",
                    "x-looker-nullable": true,
                    "type": "integer",
                    "x-looker-write-only": true,
                    "format": "int64"
                  },
                  "users_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get list of users with this role",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of Role"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "model_set": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/ModelSet",
                    "description": "(Read only) Model set",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Role"
          }
        },
        "description": "### Get information about all roles.\n",
        "summary": "Get All Roles",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "collectionFormat": "csv",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Optional list of ids to get specific roles.",
            "required": false,
            "name": "ids",
            "type": "array",
            "in": "query"
          }
        ],
        "operationId": "all_roles",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/model_sets": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "models": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of ModelSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Newly created ModelSet"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a model set with the specified information. Model sets are used by Roles.\n",
        "summary": "Create Model Set",
        "parameters": [
          {
            "name": "body",
            "description": "ModelSet",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "models": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of ModelSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_model_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "models": {
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "built_in": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of ModelSet"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "all_access": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "All model sets."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get information about all model sets.\n",
        "summary": "Get All Model Sets",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_model_sets",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/credentials_saml": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Saml authentication login information for the specified user.",
        "summary": "Delete Saml Auth Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_saml",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "saml_user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Saml IdP's Unique ID for this user",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Saml Auth Credential"
          }
        },
        "description": "### Saml authentication login information for the specified user.",
        "summary": "Get Saml Auth Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_saml",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/content_favorite/{content_favorite_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete favorite content",
        "summary": "Delete Favorite Content",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of favorite content",
            "required": true,
            "name": "content_favorite_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_content_favorite",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "look": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookBasic",
                  "description": "Associated Look",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content Metadata Id associated with this ContentFavorite",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ContentFavorite",
                  "format": "int64"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DashboardBase",
                  "description": "Associated Dashboard",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Favorite Content"
          }
        },
        "description": "### Get favorite content by its id",
        "summary": "Get Favorite Content",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of favorite content",
            "required": true,
            "name": "content_favorite_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "content_favorite",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/spaces/{space_id}/parent": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed shared space",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed users space",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root shared space",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root user space",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is a user's personal space",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is descendant of a user's personal space",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is an embed space",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Space"
          }
        },
        "description": "### Get the parent of a space",
        "summary": "Get Space Parent",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space_parent",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/ldap_config/test_user_auth": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LDAPUser",
                  "description": "User details from LDAP server for auth tests",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to ldap config",
                  "readOnly": true,
                  "format": "uri"
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Test status code: always 'success' or 'error'",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short human readable test about the result",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "issues": {
                  "description": "Array of issues/considerations about the result",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPConfigTestIssue"
                  },
                  "readOnly": true
                },
                "trace": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A more detailed trace of incremental results during auth tests",
                  "readOnly": true
                },
                "details": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional details for error cases",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Result info."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Test the user authentication settings for an LDAP configuration.\n\nThis test accepts a full LDAP configuration along with a username/password pair and attempts to       authenticate the user with the LDAP server. The configuration is validated before attempting the       authentication.\n\nLooker will never return an **auth_password**. If this request omits the **auth_password** field, then       the **auth_password** value from the active config (if present) will be used for the test.\n\n**test_ldap_user** and **test_ldap_password** are required.\n\nThe active LDAP settings are not modified.\n\n",
        "summary": "Test LDAP User Auth",
        "parameters": [
          {
            "name": "body",
            "description": "LDAP Config",
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "test_ldap_config_user_auth",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/legacy_features/{legacy_feature_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "disallowed_as_of_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Looker version where this feature became a legacy feature",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this feature is currently enabled",
                  "readOnly": true
                },
                "enabled_locally": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this feature has been enabled by a user"
                },
                "approximate_disable_date": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Approximate date that this feature will be automatically disabled.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "end_of_life_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Future Looker version where this feature will be removed",
                  "readOnly": true
                },
                "approximate_end_of_life_date": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Approximate date that this feature will be removed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description",
                  "readOnly": true
                },
                "disable_on_upgrade_to_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Looker version where this feature will be automatically disabled",
                  "readOnly": true
                },
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for documentation about this feature",
                  "readOnly": true
                },
                "has_disabled_on_upgrade": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this legacy feature may have been automatically disabled when upgrading to the current version.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Legacy Feature"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update information about the legacy feature with a specific id.\n",
        "summary": "Update Legacy Feature",
        "parameters": [
          {
            "format": "int64",
            "description": "id of legacy feature",
            "required": true,
            "name": "legacy_feature_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Legacy Feature",
            "schema": {
              "properties": {
                "disallowed_as_of_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Looker version where this feature became a legacy feature",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this feature is currently enabled",
                  "readOnly": true
                },
                "enabled_locally": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this feature has been enabled by a user"
                },
                "approximate_disable_date": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Approximate date that this feature will be automatically disabled.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "end_of_life_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Future Looker version where this feature will be removed",
                  "readOnly": true
                },
                "approximate_end_of_life_date": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Approximate date that this feature will be removed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description",
                  "readOnly": true
                },
                "disable_on_upgrade_to_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Looker version where this feature will be automatically disabled",
                  "readOnly": true
                },
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for documentation about this feature",
                  "readOnly": true
                },
                "has_disabled_on_upgrade": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this legacy feature may have been automatically disabled when upgrading to the current version.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_legacy_feature",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "disallowed_as_of_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Looker version where this feature became a legacy feature",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this feature is currently enabled",
                  "readOnly": true
                },
                "enabled_locally": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this feature has been enabled by a user"
                },
                "approximate_disable_date": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Approximate date that this feature will be automatically disabled.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "end_of_life_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Future Looker version where this feature will be removed",
                  "readOnly": true
                },
                "approximate_end_of_life_date": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Approximate date that this feature will be removed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description",
                  "readOnly": true
                },
                "disable_on_upgrade_to_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Looker version where this feature will be automatically disabled",
                  "readOnly": true
                },
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for documentation about this feature",
                  "readOnly": true
                },
                "has_disabled_on_upgrade": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this legacy feature may have been automatically disabled when upgrading to the current version.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Legacy Feature"
          }
        },
        "description": "### Get information about the legacy feature with a specific id.\n",
        "summary": "Get Legacy Feature",
        "parameters": [
          {
            "format": "int64",
            "description": "id of legacy feature",
            "required": true,
            "name": "legacy_feature_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "legacy_feature",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/color_collections/custom": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "categoricalPalettes": {
                    "description": "Array of categorical palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DiscretePalette"
                    }
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "divergingPalettes": {
                    "description": "Array of diverging palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousPalette"
                    }
                  },
                  "label": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Label of color collection"
                  },
                  "sequentialPalettes": {
                    "description": "Array of discrete palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousPalette"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "ColorCollections"
          }
        },
        "description": "### Get an array of all existing **Custom** Color Collections\nGet a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)\n\nGet all **standard** color collections with [ColorCollection](#!/ColorCollection/color_collections_standard)\n\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Get all Custom Color Collections",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "color_collections_custom",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/data_actions": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "webhook_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID of the webhook event that sent this data action. In some error conditions, this may be null.",
                  "readOnly": true
                },
                "refresh_query": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "When true, indicates that the client should refresh (rerun) the source query because the data may have been changed by the action.",
                  "readOnly": true
                },
                "success": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the data action was successful.",
                  "readOnly": true
                },
                "validation_errors": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ValidationError",
                  "description": "Validation errors returned by the data action server.",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional message returned by the data action server describing the state of the action that took place. This can be used to implement custom failure messages. If a failure is related to a particular form field, the server should send back a validation error instead. The Looker web UI does not currently display any message if the action indicates 'success', but may do so in the future.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Data Action Response"
          }
        },
        "description": "Perform a data action. The data action object can be obtained from query results, and used to perform an arbitrary action.",
        "summary": "Send a Data Action",
        "parameters": [
          {
            "name": "body",
            "description": "Data Action Request",
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "form_values": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "User input for any form values the data action might use.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "action": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The JSON describing the data action. This JSON should be considered opaque and should be passed through unmodified from the query result it came from.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "perform_data_action",
        "tags": [
          "DataAction"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/queries/{query_id}/run/{result_format}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Query"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "parameters": [
          {
            "format": "int64",
            "description": "Id of query",
            "required": true,
            "name": "query_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "result_format",
            "description": "Format of result",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "format": "int64",
            "description": "Row limit (may override the limit in the saved query).",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "apply_formatting",
            "description": "Apply model-specified formatting to each result.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "apply_vis",
            "description": "Apply visualization options to results.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache",
            "description": "Get results from cache if available.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Render width for image formats.",
            "required": false,
            "name": "image_width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Render height for image formats.",
            "required": false,
            "name": "image_height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "generate_drill_links",
            "description": "Generate drill links (only applicable to 'json_detail' format.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "force_production",
            "description": "Force use of production models even if the user is in development mode.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache_only",
            "description": "Retrieve any results from cache even if the results have expired.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "path_prefix",
            "description": "Prefix to use for drill links (url encoded).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "rebuild_pdts",
            "description": "Rebuild PDTS used in query.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "server_table_calcs",
            "description": "Perform table calculations on query results",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "description": "### Run a saved query.\n\nThis runs a previously saved query. You can use this on a query that was generated in the Looker UI\nor one that you have explicitly created using the API. You can also use a query 'id' from a saved 'Look'.\n\nThe 'result_format' parameter specifies the desired structure and format of the response.\n\nSupported formats:\n\n| result_format | Description\n| :-----------: | :--- |\n| json | Plain json\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| md | Simple markdown\n| xlsx | MS Excel spreadsheet\n| sql | Returns the generated SQL rather than running the query\n| png | A PNG image of the visualization of the query\n| jpg | A JPG image of the visualization of the query\n\n\n",
        "summary": "Run Query",
        "produces": [
          "text",
          "application/json",
          "image/png",
          "image/jpg"
        ],
        "operationId": "run_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/data_actions/form": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "state": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DataActionUserState",
                  "description": "User state",
                  "readOnly": true
                },
                "fields": {
                  "description": "Array of form fields.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DataActionFormField"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Data Action Form"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "For some data actions, the remote server may supply a form requesting further user input. This endpoint takes a data action, asks the remote server to generate a form for it, and returns that form to you for presentation to the user.",
        "summary": "Fetch Remote Data Action Form",
        "parameters": [
          {
            "name": "body",
            "description": "Data Action Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "fetch_remote_data_action_form",
        "tags": [
          "DataAction"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/git_connection_tests": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "A short string, uniquely naming this test",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Human readable string describing the test",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Git Connection Test"
          }
        },
        "description": "### Get All Git Connection Tests\n\nReturns a list of tests which can be run against a project's (or the dependency project for the provided remote_url) git connection. Call [Run Git Connection Test](#!/Project/run_git_connection_test) to execute each test in sequence.\n\nTests are ordered by increasing specificity. Tests should be run in the order returned because later tests require functionality tested by tests earlier in the test list.\n\nFor example, a late-stage test for write access is meaningless if connecting to the git server (an early test) is failing.\n",
        "summary": "Get All Git Connection Tests",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "remote_url",
            "description": "(Optional: leave blank for root project) The remote url for remote dependency to test.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_git_connection_tests",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/password_config/force_password_reset_at_next_login_for_all_users": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Password Config"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Force all credentials_email users to reset their login passwords upon their next login.\n",
        "summary": "Force password reset",
        "x-looker-activity-type": "non_query",
        "operationId": "force_password_reset_at_next_login_for_all_users",
        "tags": [
          "Auth"
        ],
        "x-looker-status": "beta"
      }
    },
    "/queries/run/{result_format}": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Query Result"
          }
        },
        "parameters": [
          {
            "name": "result_format",
            "description": "Format of result",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "inline query",
            "schema": {
              "properties": {
                "share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Share Url",
                  "readOnly": true
                },
                "visible_ui_sections": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visible UI Sections"
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Limit"
                },
                "fill_fields": {
                  "description": "Fill Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query Timezone"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Url",
                  "readOnly": true
                },
                "view": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Explore Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "filter_expression": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter Expression"
                },
                "filters": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Filters",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "has_table_calculations": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has Table Calculations",
                  "readOnly": true
                },
                "row_total": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Raw Total"
                },
                "filter_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "total": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Total"
                },
                "expanded_share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Share Url",
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Model"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated."
                },
                "sorts": {
                  "description": "Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subtotals": {
                  "description": "Fields on which to run subtotals",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug",
                  "readOnly": true
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime",
                  "format": "double"
                },
                "fields": {
                  "description": "Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "stable",
              "required": [
                "model",
                "view"
              ]
            },
            "in": "body",
            "required": true
          },
          {
            "format": "int64",
            "description": "Row limit (may override the limit in the saved query).",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "apply_formatting",
            "description": "Apply model-specified formatting to each result.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "apply_vis",
            "description": "Apply visualization options to results.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache",
            "description": "Get results from cache if available.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Render width for image formats.",
            "required": false,
            "name": "image_width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Render height for image formats.",
            "required": false,
            "name": "image_height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "generate_drill_links",
            "description": "Generate drill links (only applicable to 'json_detail' format.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "force_production",
            "description": "Force use of production models even if the user is in development mode.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache_only",
            "description": "Retrieve any results from cache even if the results have expired.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "path_prefix",
            "description": "Prefix to use for drill links (url encoded).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "rebuild_pdts",
            "description": "Rebuild PDTS used in query.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "server_table_calcs",
            "description": "Perform table calculations on query results",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "description": "### Run the query that is specified inline in the posted body.\n\nThis allows running a query as defined in json in the posted body. This combines\nthe two actions of posting & running a query into one step.\n\nHere is an example body in json:\n```\n{\n  \"model\":\"thelook\",\n  \"view\":\"inventory_items\",\n  \"fields\":[\"category.name\",\"inventory_items.days_in_inventory_tier\",\"products.count\"],\n  \"filters\":{\"category.name\":\"socks\"},\n  \"sorts\":[\"products.count desc 0\"],\n  \"limit\":\"500\",\n  \"query_timezone\":\"America/Los_Angeles\"\n}\n```\n\nWhen using the Ruby SDK this would be passed as a Ruby hash like:\n```\n{\n :model=>\"thelook\",\n :view=>\"inventory_items\",\n :fields=>\n  [\"category.name\",\n   \"inventory_items.days_in_inventory_tier\",\n   \"products.count\"],\n :filters=>{:\"category.name\"=>\"socks\"},\n :sorts=>[\"products.count desc 0\"],\n :limit=>\"500\",\n :query_timezone=>\"America/Los_Angeles\",\n}\n```\n\nThis will return the result of running the query in the format specified by the 'result_format' parameter.\n\nSupported formats:\n\n| result_format | Description\n| :-----------: | :--- |\n| json | Plain json\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| md | Simple markdown\n| xlsx | MS Excel spreadsheet\n| sql | Returns the generated SQL rather than running the query\n| png | A PNG image of the visualization of the query\n| jpg | A JPG image of the visualization of the query\n\n\n",
        "summary": "Run Inline Query",
        "produces": [
          "text",
          "application/json",
          "image/png",
          "image/jpg"
        ],
        "operationId": "run_inline_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Current user."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get information about the current user; i.e. the user account currently calling the API.\n",
        "summary": "Get Current User",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "me",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/spaces": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed shared space",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed users space",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root shared space",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root user space",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is a user's personal space",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is descendant of a user's personal space",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is an embed space",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Space"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a space with specified information.\n\nCaller must have permission to edit the parent space and to create spaces, otherwise the request\nreturns 404 Not Found.\n",
        "summary": "Create Space",
        "parameters": [
          {
            "name": "body",
            "description": "Create a new space",
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed shared space",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root embed users space",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root shared space",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is the root user space",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is a user's personal space",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is descendant of a user's personal space",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Space is an embed space",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "create_space",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed shared space",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed users space",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root shared space",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root user space",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is a user's personal space",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is descendant of a user's personal space",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name",
                    "readOnly": true
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is an embed space",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "parent_id"
                ]
              }
            },
            "description": "Space"
          }
        },
        "description": "### Get information about all spaces.",
        "summary": "Get All Spaces",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_spaces",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "folders_enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, folders are enabled for this project"
                },
                "validation_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project Id",
                  "readOnly": true
                },
                "git_service_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the git service provider"
                },
                "git_password_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for password in per-user HTTPS authentication."
                },
                "git_username_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for username in per-user HTTPS authentication."
                },
                "allow_warnings": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
                },
                "uses_git": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is configured with a git repository",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is an example project and cannot be modified",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project display name"
                },
                "deploy_secret": {
                  "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "git_remote_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git remote repository url",
                  "format": "uri"
                },
                "pull_request_mode": {
                  "x-looker-values": [
                    "off",
                    "links",
                    "recommended",
                    "required"
                  ],
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
                },
                "unset_deploy_secret": {
                  "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "x-looker-write-only": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Create A Project\n\ndev mode required.\n- Call `update_session` to select the 'dev' workspace.\n\n`name` is required.\n`git_remote_url` is not allowed. To configure Git for the newly created project, follow the instructions in `update_project`.\n\n",
        "summary": "Create Project",
        "parameters": [
          {
            "name": "body",
            "description": "Project",
            "schema": {
              "properties": {
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "folders_enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, folders are enabled for this project"
                },
                "validation_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project Id",
                  "readOnly": true
                },
                "git_service_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the git service provider"
                },
                "git_password_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for password in per-user HTTPS authentication."
                },
                "git_username_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for username in per-user HTTPS authentication."
                },
                "allow_warnings": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
                },
                "uses_git": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is configured with a git repository",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is an example project and cannot be modified",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project display name"
                },
                "deploy_secret": {
                  "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "git_remote_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git remote repository url",
                  "format": "uri"
                },
                "pull_request_mode": {
                  "x-looker-values": [
                    "off",
                    "links",
                    "recommended",
                    "required"
                  ],
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
                },
                "unset_deploy_secret": {
                  "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "x-looker-write-only": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_project",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "git_password": {
                    "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "folders_enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true, folders are enabled for this project"
                  },
                  "validation_required": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
                  },
                  "git_username": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Project Id",
                    "readOnly": true
                  },
                  "git_service_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of the git service provider"
                  },
                  "git_password_user_attribute": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User attribute name for password in per-user HTTPS authentication."
                  },
                  "git_username_user_attribute": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User attribute name for username in per-user HTTPS authentication."
                  },
                  "allow_warnings": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
                  },
                  "uses_git": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true the project is configured with a git repository",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "is_example": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true the project is an example project and cannot be modified",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Project display name"
                  },
                  "deploy_secret": {
                    "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "git_remote_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Git remote repository url",
                    "format": "uri"
                  },
                  "pull_request_mode": {
                    "x-looker-values": [
                      "off",
                      "links",
                      "recommended",
                      "required"
                    ],
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
                  },
                  "unset_deploy_secret": {
                    "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "x-looker-write-only": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Project"
          }
        },
        "description": "### Get All Projects\n\nReturns all projects visible to the current user\n",
        "summary": "Get All Projects",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_projects",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/git_connection_tests/{test_id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "A short string, uniquely naming this test",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Either 'pass' or 'fail'",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional data from the test",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Git Connection Test Result"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Run a git connection test\n\nRun the named test on the git service used by this project (or the dependency project for the provided remote_url) and return the result. This\nis intended to help debug git connections when things do not work properly, to give\nmore helpful information about why a git url is not working with Looker.\n\nTests should be run in the order they are returned by [Get All Git Connection Tests](#!/Project/all_git_connection_tests).\n",
        "summary": "Run Git Connection Test",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "test_id",
            "description": "Test Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "remote_url",
            "description": "(Optional: leave blank for root project) The remote url for remote dependency to test.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "run_git_connection_test",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/homepages/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description of homepage"
                  },
                  "homepage_sections": {
                    "description": "Sections of the homepage",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/HomepageSection"
                    },
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date of last homepage update",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "primary_homepage": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the homepage is the primary homepage or not",
                    "readOnly": true
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title of homepage"
                  },
                  "section_order": {
                    "description": "ids of the homepage sections in the order they should be displayed",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date of homepage deletion",
                    "format": "date-time"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date of homepage creatopm",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of associated content_metadata record",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User id of homepage creator",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "homepages"
          }
        },
        "description": "### Search Homepages\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n",
        "summary": "Search Homepages",
        "parameters": [
          {
            "name": "title",
            "description": "Matches homepage title.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "created_at",
            "description": "Matches the timestamp for when the homepage was created.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "first_name",
            "description": "The first name of the user who created this homepage.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "last_name",
            "description": "The last name of the user who created this homepage.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "favorited",
            "description": "Return favorited homepages when true.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "creator_id",
            "description": "Filter on homepages created by a particular user.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "The fields to sort the results by",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "The page to return.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "The number of items in the returned page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "The number of items to skip before returning any. (used with limit and takes priority over page and per_page)",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "The maximum number of items to return. (used with offset and takes priority over page and per_page)",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_homepages",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/render_tasks/{render_task_id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "status_detail": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional information about the current status",
                  "readOnly": true
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of lookml dashboard to render",
                  "readOnly": true
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled",
                  "readOnly": true
                },
                "query_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed running queries",
                  "readOnly": true,
                  "format": "double"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Id of this render task",
                  "readOnly": true
                },
                "finalized_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was completed",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output width in pixels",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Output format: pdf, png, or jpg",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The user account permissions in which the render task will execute",
                  "readOnly": true,
                  "format": "int64"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was created",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output height in pixels. Flowed layouts may ignore this value.",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of dashboard to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Total seconds elapsed for render task",
                  "readOnly": true,
                  "format": "double"
                },
                "render_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed rendering data",
                  "readOnly": true,
                  "format": "double"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Render Task"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get information about a render task.\n\nReturns a render task object.\nTo check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).\nOnce the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).\n\n",
        "summary": "Get Render Task",
        "parameters": [
          {
            "name": "render_task_id",
            "description": "Id of render task",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "render_task",
        "tags": [
          "RenderTask"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/locales": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "native_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of Locale in its own language",
                    "readOnly": true
                  },
                  "code": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Code for Locale",
                    "readOnly": true
                  },
                  "english_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of Locale in English",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Locale"
          }
        },
        "description": "### Get a list of locales that Looker supports.\n",
        "summary": "Get All Locales",
        "x-looker-activity-type": "non_query",
        "operationId": "all_locales",
        "tags": [
          "Config"
        ],
        "x-looker-status": "stable"
      }
    },
    "/merge_queries": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "total": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Total"
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Unique to get results",
                  "readOnly": true,
                  "format": "int64"
                },
                "source_queries": {
                  "description": "Source Queries defining the results to be merged.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MergeQuerySourceQuery"
                  }
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization Config",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "sorts": {
                  "description": "Sorts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Merge Query"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create Merge Query\n\nCreates a new merge query object.\n\nA merge query takes the results of one or more queries and combines (merges) the results\naccording to field mapping definitions. The result is similar to a SQL left outer join.\n\nA merge query can merge results of queries from different SQL databases.\n\nThe order that queries are defined in the source_queries array property is significant. The\nfirst query in the array defines the primary key into which the results of subsequent\nqueries will be merged.\n\nLike model/view query objects, merge queries are immutable and have structural identity - if\nyou make a request to create a new merge query that is identical to an existing merge query,\nthe existing merge query will be returned instead of creating a duplicate. Conversely, any\nchange to the contents of a merge query will produce a new object with a new id.\n",
        "summary": "Create Merge Query",
        "parameters": [
          {
            "name": "body",
            "description": "Merge Query",
            "schema": {
              "properties": {
                "total": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Total"
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Unique to get results",
                  "readOnly": true,
                  "format": "int64"
                },
                "source_queries": {
                  "description": "Source Queries defining the results to be merged.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MergeQuerySourceQuery"
                  }
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization Config",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "sorts": {
                  "description": "Sorts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_merge_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/render_tasks/dashboards/{dashboard_id}/{result_format}": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "status_detail": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional information about the current status",
                  "readOnly": true
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of lookml dashboard to render",
                  "readOnly": true
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled",
                  "readOnly": true
                },
                "query_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed running queries",
                  "readOnly": true,
                  "format": "double"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Id of this render task",
                  "readOnly": true
                },
                "finalized_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was completed",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output width in pixels",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Output format: pdf, png, or jpg",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The user account permissions in which the render task will execute",
                  "readOnly": true,
                  "format": "int64"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was created",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output height in pixels. Flowed layouts may ignore this value.",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of dashboard to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Total seconds elapsed for render task",
                  "readOnly": true,
                  "format": "double"
                },
                "render_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed rendering data",
                  "readOnly": true,
                  "format": "double"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Render Task"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new task to render a dashboard to a document or image.\n\nReturns a render task object.\nTo check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).\nOnce the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).\n\n",
        "summary": "Create Dashboard Render Task",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of dashboard to render",
            "required": true,
            "name": "dashboard_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "result_format",
            "description": "Output type: pdf, png, or jpg",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Dashboard render task parameters",
            "schema": {
              "properties": {
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format"
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "format": "int64",
            "description": "Output width in pixels",
            "required": true,
            "name": "width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Output height in pixels",
            "required": true,
            "name": "height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "pdf_paper_size",
            "description": "Paper size for pdf",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "pdf_landscape",
            "description": "Whether to render pdf in landscape",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_dashboard_render_task",
        "tags": [
          "RenderTask"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/users": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Created User"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a user with the specified information.\n",
        "summary": "Create User",
        "parameters": [
          {
            "name": "body",
            "description": "User",
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_user",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "first_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "First name"
                  },
                  "credentials_api3": {
                    "description": "API 3 credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsApi3"
                    },
                    "readOnly": true
                  },
                  "presumed_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker",
                    "readOnly": true
                  },
                  "credentials_saml": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsSaml",
                    "description": "Saml auth credentials",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_ids": {
                    "description": "Array of ids of the groups for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  },
                  "locale": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                  },
                  "verified_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                    "readOnly": true
                  },
                  "credentials_email": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsEmail",
                    "description": "Email/Password login credentials",
                    "readOnly": true
                  },
                  "roles_externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                    "readOnly": true
                  },
                  "credentials_oidc": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsOIDC",
                    "description": "OpenID Connect auth credentials",
                    "readOnly": true
                  },
                  "display_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Full name for display (available only if both first_name and last_name are set)",
                    "readOnly": true
                  },
                  "avatar_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for the avatar image (may be generic)",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_totp": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsTotp",
                    "description": "Two-factor credentials",
                    "readOnly": true
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Account has been disabled"
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "EMail address",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_ldap": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLDAP",
                    "description": "LDAP credentials",
                    "readOnly": true
                  },
                  "last_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last name"
                  },
                  "sessions": {
                    "description": "Active sessions",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Session"
                    },
                    "readOnly": true
                  },
                  "ui_state": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "home_space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID string for user's home space"
                  },
                  "models_dir_validated": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "User's dev workspace has been checked for presence of applicable production projects"
                  },
                  "embed_group_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "looker_versions": {
                    "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "credentials_google": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsGoogle",
                    "description": "Google auth credentials",
                    "readOnly": true
                  },
                  "personal_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of user's personal space",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_embed": {
                    "description": "Embed credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsEmbed"
                    },
                    "readOnly": true
                  },
                  "credentials_looker_openid": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLookerOpenid",
                    "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "role_ids": {
                    "description": "Array of ids of the roles for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "All users."
          }
        },
        "description": "### Get information about all users.\n",
        "summary": "Get All Users",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "collectionFormat": "csv",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Optional list of ids to get specific users.",
            "required": false,
            "name": "ids",
            "type": "array",
            "in": "query"
          }
        ],
        "operationId": "all_users",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/ldap_config": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "New state for LDAP Configuration."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the LDAP configuration.\n\nConfiguring LDAP impacts authentication for all users. This configuration should be done carefully.\n\nOnly Looker administrators can read and update the LDAP configuration.\n\nLDAP is enabled or disabled for Looker using the **enabled** field.\n\nIt is **highly** recommended that any LDAP setting changes be tested using the APIs below before being set globally.\n\nSee the [Looker LDAP docs](https://www.looker.com/docs/r/api/ldap_setup) for additional information.\n",
        "summary": "Update LDAP Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "LDAP Config",
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_ldap_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "LDAP Configuration."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get the LDAP configuration.\n\nLooker can be optionally configured to authenticate users against an Active Directory or other LDAP directory server.\nLDAP setup requires coordination with an administrator of that directory server.\n\nOnly Looker administrators can read and update the LDAP configuration.\n\nConfiguring LDAP impacts authentication for all users. This configuration should be done carefully.\n\nLooker maintains a single LDAP configuration. It can be read and updated.       Updates only succeed if the new state will be valid (in the sense that all required fields are populated);       it is up to you to ensure that the configuration is appropriate and correct).\n\nLDAP is enabled or disabled for Looker using the **enabled** field.\n\nLooker will never return an **auth_password** field. That value can be set, but never retrieved.\n\nSee the [Looker LDAP docs](https://www.looker.com/docs/r/api/ldap_setup) for additional information.\n",
        "summary": "Get LDAP Configuration",
        "x-looker-activity-type": "non_query",
        "operationId": "ldap_config",
        "tags": [
          "Auth"
        ],
        "x-looker-status": "stable"
      }
    },
    "/ldap_config/test_auth": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LDAPUser",
                  "description": "User details from LDAP server for auth tests",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to ldap config",
                  "readOnly": true,
                  "format": "uri"
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Test status code: always 'success' or 'error'",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short human readable test about the result",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "issues": {
                  "description": "Array of issues/considerations about the result",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPConfigTestIssue"
                  },
                  "readOnly": true
                },
                "trace": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A more detailed trace of incremental results during auth tests",
                  "readOnly": true
                },
                "details": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional details for error cases",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Result info."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Test the connection authentication settings for an LDAP configuration.\n\nThis tests that the connection is possible and that a 'server' account to be used by Looker can       authenticate to the LDAP server given connection and authentication information.\n\n**connection_host**, **connection_port**, and **auth_username**, are required.       **connection_tls** and **auth_password** are optional.\n\nExample:\n```json\n{\n  \"connection_host\": \"ldap.example.com\",\n  \"connection_port\": \"636\",\n  \"connection_tls\": true,\n  \"auth_username\": \"cn=looker,dc=example,dc=com\",\n  \"auth_password\": \"secret\"\n}\n```\n\nLooker will never return an **auth_password**. If this request omits the **auth_password** field, then       the **auth_password** value from the active config (if present) will be used for the test.\n\nThe active LDAP settings are not modified.\n\n",
        "summary": "Test LDAP Auth",
        "parameters": [
          {
            "name": "body",
            "description": "LDAP Config",
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "test_ldap_config_auth",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/groups/{group_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "include_by_default": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "New users are added to this group by default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "External Id group if embed group",
                  "readOnly": true
                },
                "user_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of users included in this group",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of group"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "contains_current_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Currently logged in user is group member",
                  "readOnly": true
                },
                "can_add_to_content_metadata": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group can be used in content access controls"
                },
                "externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group membership controlled outside of Looker",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Group"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Updates the a group (admin only).",
        "summary": "Update Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Group",
            "schema": {
              "properties": {
                "include_by_default": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "New users are added to this group by default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "External Id group if embed group",
                  "readOnly": true
                },
                "user_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of users included in this group",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of group"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "contains_current_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Currently logged in user is group member",
                  "readOnly": true
                },
                "can_add_to_content_metadata": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group can be used in content access controls"
                },
                "externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group membership controlled outside of Looker",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_group",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Deletes a group (admin only).\n",
        "summary": "Delete Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_group",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "include_by_default": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "New users are added to this group by default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "External Id group if embed group",
                  "readOnly": true
                },
                "user_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of users included in this group",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of group"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "contains_current_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Currently logged in user is group member",
                  "readOnly": true
                },
                "can_add_to_content_metadata": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group can be used in content access controls"
                },
                "externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group membership controlled outside of Looker",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Group"
          }
        },
        "description": "### Get information about a group.\n",
        "summary": "Get Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "group",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/datagroups/{datagroup_id}": {
      "patch": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "triggered_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry became triggered. Cannot be in the future.",
                  "format": "int64"
                },
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model containing the datagroup. Unique when combined with name.",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry was created.",
                  "readOnly": true,
                  "format": "int64"
                },
                "stale_before": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp before which cache entries are considered stale. Cannot be in the future.",
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the datagroup. Unique when combined with model_name.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the datagroup. Also used as the unique identifier.",
                  "readOnly": true,
                  "format": "int64"
                },
                "trigger_check_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry trigger was last checked.",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "trigger_error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The message returned with the error of the last trigger check.",
                  "readOnly": true
                },
                "trigger_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The value of the trigger when last checked.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Datagroup"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Update a datagroup using the specified params.\n",
        "summary": "Update Datagroup",
        "parameters": [
          {
            "name": "datagroup_id",
            "description": "ID of datagroup.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Datagroup",
            "schema": {
              "properties": {
                "triggered_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry became triggered. Cannot be in the future.",
                  "format": "int64"
                },
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model containing the datagroup. Unique when combined with name.",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry was created.",
                  "readOnly": true,
                  "format": "int64"
                },
                "stale_before": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp before which cache entries are considered stale. Cannot be in the future.",
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the datagroup. Unique when combined with model_name.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the datagroup. Also used as the unique identifier.",
                  "readOnly": true,
                  "format": "int64"
                },
                "trigger_check_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry trigger was last checked.",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "trigger_error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The message returned with the error of the last trigger check.",
                  "readOnly": true
                },
                "trigger_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The value of the trigger when last checked.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_datagroup",
        "tags": [
          "Datagroup"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "triggered_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry became triggered. Cannot be in the future.",
                  "format": "int64"
                },
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the model containing the datagroup. Unique when combined with name.",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry was created.",
                  "readOnly": true,
                  "format": "int64"
                },
                "stale_before": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp before which cache entries are considered stale. Cannot be in the future.",
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the datagroup. Unique when combined with model_name.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the datagroup. Also used as the unique identifier.",
                  "readOnly": true,
                  "format": "int64"
                },
                "trigger_check_at": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "UNIX timestamp at which this entry trigger was last checked.",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "trigger_error": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The message returned with the error of the last trigger check.",
                  "readOnly": true
                },
                "trigger_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The value of the trigger when last checked.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Datagroup"
          }
        },
        "description": "### Get information about a datagroup.\n",
        "summary": "Get Datagroup",
        "parameters": [
          {
            "name": "datagroup_id",
            "description": "ID of datagroup.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "datagroup",
        "tags": [
          "Datagroup"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/queries/{query_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Share Url",
                  "readOnly": true
                },
                "visible_ui_sections": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visible UI Sections"
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Limit"
                },
                "fill_fields": {
                  "description": "Fill Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query Timezone"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Url",
                  "readOnly": true
                },
                "view": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Explore Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "filter_expression": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter Expression"
                },
                "filters": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Filters",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "has_table_calculations": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has Table Calculations",
                  "readOnly": true
                },
                "row_total": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Raw Total"
                },
                "filter_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "total": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Total"
                },
                "expanded_share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Share Url",
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Model"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated."
                },
                "sorts": {
                  "description": "Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subtotals": {
                  "description": "Fields on which to run subtotals",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug",
                  "readOnly": true
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime",
                  "format": "double"
                },
                "fields": {
                  "description": "Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "stable",
              "required": [
                "model",
                "view"
              ]
            },
            "description": "Query"
          }
        },
        "description": "### Get a previously created query by id.\n\nA Looker query object includes the various parameters that define a database query that has been run or\ncould be run in the future. These parameters include: model, view, fields, filters, pivots, etc.\nQuery *results* are not part of the query object.\n\nQuery objects are unique and immutable. Query objects are created automatically in Looker as users explore data.\nLooker does not delete them; they become part of the query history. When asked to create a query for\nany given set of parameters, Looker will first try to find an existing query object with matching\nparameters and will only create a new object when an appropriate object can not be found.\n\nThis 'get' method is used to get the details about a query for a given id. See the other methods here\nto 'create' and 'run' queries.\n\nNote that some fields like 'filter_config' and 'vis_config' etc are specific to how the Looker UI\nbuilds queries and visualizations and are not generally useful for API use. They are not required when\ncreating new queries and can usually just be ignored.\n\n",
        "summary": "Get Query",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of query",
            "required": true,
            "name": "query_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/projects/{project_id}/current_workspace": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "git_head": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git head revision name",
                  "readOnly": true
                },
                "workspace_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The id of the local workspace containing the project files",
                  "readOnly": true
                },
                "git_status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The status of the local git directory",
                  "readOnly": true
                },
                "git_branch": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/GitBranch",
                  "description": "GitBranch",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "project_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The id of the project",
                  "readOnly": true
                },
                "lookml_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The lookml syntax used by all files in this project",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project Workspace"
          }
        },
        "description": "### Get Project Workspace\n\nReturns information about the state of the project files in the currently selected workspace\n",
        "summary": "Get Project Workspace",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "project_workspace",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/roles/{role_id}/groups": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "include_by_default": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "New users are added to this group by default",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "external_group_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "External Id group if embed group",
                    "readOnly": true
                  },
                  "user_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of users included in this group",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of group"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "contains_current_user": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Currently logged in user is group member",
                    "readOnly": true
                  },
                  "can_add_to_content_metadata": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group can be used in content access controls"
                  },
                  "externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group membership controlled outside of Looker",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Groups with role."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Set all groups for a role, removing all existing group associations from that role.\n",
        "summary": "Update Role Groups",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Role",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Array of Group Ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "set_role_groups",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "include_by_default": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "New users are added to this group by default",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "external_group_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "External Id group if embed group",
                    "readOnly": true
                  },
                  "user_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of users included in this group",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of group"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "contains_current_user": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Currently logged in user is group member",
                    "readOnly": true
                  },
                  "can_add_to_content_metadata": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group can be used in content access controls"
                  },
                  "externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group membership controlled outside of Looker",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Groups with role."
          }
        },
        "description": "### Get information about all the groups with the role that has a specific id.\n",
        "summary": "Get Role Groups",
        "parameters": [
          {
            "format": "int64",
            "description": "id of role",
            "required": true,
            "name": "role_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "role_groups",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/projects/{project_id}/reset_to_production": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Project"
          },
          "204": {
            "description": "Returns 204 if project was successfully reset, otherwise 400 with an error message"
          }
        },
        "description": "### Reset a project to the revision of the project that is in production.\n\n**DANGER** this will delete any changes that have not been pushed to a remote repository.\n",
        "summary": "Reset To Production",
        "parameters": [
          {
            "name": "project_id",
            "description": "Id of project",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "reset_project_to_production",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/content_metadata/{content_metadata_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of Parent Content",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Type (\"dashboard\", \"look\", or \"space\")",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated look when content_type is \"look\"",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name or title of underlying content",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated dashboard when content_type is \"dashboard\"",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Slug",
                  "readOnly": true
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated space when content_type is \"space\"",
                  "readOnly": true
                },
                "inherits": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether content inherits its access levels from parent"
                },
                "inheriting_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of Inherited Content",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Content Metadata"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Move a piece of content.\n",
        "summary": "Update Content Metadata",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of content metadata",
            "required": true,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Content Metadata",
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of Parent Content",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Type (\"dashboard\", \"look\", or \"space\")",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated look when content_type is \"look\"",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name or title of underlying content",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated dashboard when content_type is \"dashboard\"",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Slug",
                  "readOnly": true
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated space when content_type is \"space\"",
                  "readOnly": true
                },
                "inherits": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether content inherits its access levels from parent"
                },
                "inheriting_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of Inherited Content",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_content_metadata",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of Parent Content",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Type (\"dashboard\", \"look\", or \"space\")",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated look when content_type is \"look\"",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name or title of underlying content",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated dashboard when content_type is \"dashboard\"",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Content Slug",
                  "readOnly": true
                },
                "space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of associated space when content_type is \"space\"",
                  "readOnly": true
                },
                "inherits": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether content inherits its access levels from parent"
                },
                "inheriting_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of Inherited Content",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Content Metadata"
          }
        },
        "description": "### Get information about an individual content metadata record.\n",
        "summary": "Get Content Metadata",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of content metadata",
            "required": true,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "content_metadata",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/backup_configuration": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "custom_s3_bucket_region": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of region where the bucket is located"
                },
                "custom_s3_secret": {
                  "description": "(Write-Only) AWS S3 secret used for custom-s3 backups",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "custom_s3_bucket": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of bucket for custom-s3 backups"
                },
                "custom_s3_key": {
                  "description": "(Write-Only) AWS S3 key used for custom-s3 backups",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of backup: looker-s3 or custom-s3"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "New state for specified model set."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the Looker internal database backup configuration.\n",
        "summary": "Update Backup Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "Options for Backup Configuration",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "custom_s3_bucket_region": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of region where the bucket is located"
                },
                "custom_s3_secret": {
                  "description": "(Write-Only) AWS S3 secret used for custom-s3 backups",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "custom_s3_bucket": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of bucket for custom-s3 backups"
                },
                "custom_s3_key": {
                  "description": "(Write-Only) AWS S3 key used for custom-s3 backups",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of backup: looker-s3 or custom-s3"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_backup_configuration",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "custom_s3_bucket_region": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of region where the bucket is located"
                },
                "custom_s3_secret": {
                  "description": "(Write-Only) AWS S3 secret used for custom-s3 backups",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "custom_s3_bucket": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of bucket for custom-s3 backups"
                },
                "custom_s3_key": {
                  "description": "(Write-Only) AWS S3 key used for custom-s3 backups",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Type of backup: looker-s3 or custom-s3"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Current Backup Configuration"
          }
        },
        "description": "### Get the current Looker internal database backup configuration.\n",
        "summary": "Get Backup Configuration",
        "x-looker-activity-type": "non_query",
        "operationId": "backup_configuration",
        "tags": [
          "Config"
        ],
        "x-looker-status": "stable"
      }
    },
    "/folders/{folder_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed shared folder",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed users folder",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root shared folder",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root user folder",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is a user's personal folder",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is descendant of a user's personal folder",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is an embed folder",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Folder"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the folder with a specific id.",
        "summary": "Update Folder",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Folder",
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed shared folder",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed users folder",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root shared folder",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root user folder",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is a user's personal folder",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is descendant of a user's personal folder",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is an embed folder",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_folder",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete the folder with a specific id including any children folders.\n**DANGER** this will delete all looks and dashboards in the folder.\n",
        "summary": "Delete Folder",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_folder",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed shared folder",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed users folder",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root shared folder",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root user folder",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is a user's personal folder",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is descendant of a user's personal folder",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is an embed folder",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Folder"
          }
        },
        "description": "### Get information about the folder with a specific id.",
        "summary": "Get Folder",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_oidc": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### OpenID Connect (OIDC) authentication login information for the specified user.",
        "summary": "Delete OIDC Auth Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_oidc",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "oidc_user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "OIDC OP's Unique ID for this user",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "OIDC Auth Credential"
          }
        },
        "description": "### OpenID Connect (OIDC) authentication login information for the specified user.",
        "summary": "Get OIDC Auth Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_oidc",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/saml_test_configs/{test_slug}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Test config succssfully deleted."
          }
        },
        "description": "### Delete a SAML test configuration.\n",
        "summary": "Delete SAML Test Configuration",
        "parameters": [
          {
            "name": "test_slug",
            "description": "Slug of test config",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_saml_test_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "idp_audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Certificate (provided by IdP)"
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from Saml"
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Url (provided by IdP)"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a Saml config test",
                  "readOnly": true
                },
                "allowed_clock_drift": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
                  "format": "int64"
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable Saml authentication for the server"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeWrite"
                  }
                },
                "bypass_login_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "groups_member_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Issuer (provided by IdP)"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "SAML test config."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get a SAML test configuration by test_slug.\n",
        "summary": "Get SAML Test Configuration",
        "parameters": [
          {
            "name": "test_slug",
            "description": "Slug of test config",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "saml_test_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/homepage_items": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "use_custom_url": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual description for display",
                  "readOnly": true
                },
                "custom_description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom description entered by the user, if present"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML Dashboard to base this item on"
                },
                "custom_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom title entered by the user, if present"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content favorite id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "custom_image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom image_url entered by the user, if present",
                  "readOnly": true
                },
                "order": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "An arbitrary integer representing the sort order within the section",
                  "format": "int64"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual url for display",
                  "readOnly": true
                },
                "use_custom_image": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
                },
                "section_fetch_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds it took to fetch the section this item is in",
                  "readOnly": true,
                  "format": "float"
                },
                "custom_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom url entered by the user, if present"
                },
                "content_created_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user who created the content this item is based on",
                  "readOnly": true
                },
                "use_custom_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
                },
                "content_updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last time the content that this item is based on was updated",
                  "readOnly": true
                },
                "location": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The container folder name of the content",
                  "readOnly": true
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been viewed, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content metadata id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual image_url for display",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Dashboard to base this item on",
                  "format": "int64"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual title for display",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Look to base this item on",
                  "format": "int64"
                },
                "homepage_section_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Associated Homepage Section"
                },
                "custom_image_data_base64": {
                  "description": "(Write-Only) base64 encoded image data",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been favorited, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "use_custom_description": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage Item"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new homepage item.\n",
        "summary": "Create Homepage Item",
        "parameters": [
          {
            "name": "body",
            "description": "Homepage Item",
            "schema": {
              "properties": {
                "use_custom_url": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual description for display",
                  "readOnly": true
                },
                "custom_description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom description entered by the user, if present"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML Dashboard to base this item on"
                },
                "custom_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom title entered by the user, if present"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content favorite id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "custom_image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom image_url entered by the user, if present",
                  "readOnly": true
                },
                "order": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "An arbitrary integer representing the sort order within the section",
                  "format": "int64"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual url for display",
                  "readOnly": true
                },
                "use_custom_image": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
                },
                "section_fetch_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds it took to fetch the section this item is in",
                  "readOnly": true,
                  "format": "float"
                },
                "custom_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom url entered by the user, if present"
                },
                "content_created_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user who created the content this item is based on",
                  "readOnly": true
                },
                "use_custom_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
                },
                "content_updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last time the content that this item is based on was updated",
                  "readOnly": true
                },
                "location": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The container folder name of the content",
                  "readOnly": true
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been viewed, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content metadata id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual image_url for display",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Dashboard to base this item on",
                  "format": "int64"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual title for display",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Look to base this item on",
                  "format": "int64"
                },
                "homepage_section_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Associated Homepage Section"
                },
                "custom_image_data_base64": {
                  "description": "(Write-Only) base64 encoded image data",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been favorited, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "use_custom_description": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_homepage_item",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "use_custom_url": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The actual description for display",
                    "readOnly": true
                  },
                  "custom_description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Custom description entered by the user, if present"
                  },
                  "lookml_dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "LookML Dashboard to base this item on"
                  },
                  "custom_title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Custom title entered by the user, if present"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content favorite id associated with the item this content is based on",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "custom_image_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Custom image_url entered by the user, if present",
                    "readOnly": true
                  },
                  "order": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "An arbitrary integer representing the sort order within the section",
                    "format": "int64"
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The actual url for display",
                    "readOnly": true
                  },
                  "use_custom_image": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
                  },
                  "section_fetch_time": {
                    "x-looker-nullable": true,
                    "type": "number",
                    "description": "Number of seconds it took to fetch the section this item is in",
                    "readOnly": true,
                    "format": "float"
                  },
                  "custom_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Custom url entered by the user, if present"
                  },
                  "content_created_by": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of user who created the content this item is based on",
                    "readOnly": true
                  },
                  "use_custom_title": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
                  },
                  "content_updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last time the content that this item is based on was updated",
                    "readOnly": true
                  },
                  "location": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The container folder name of the content",
                    "readOnly": true
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times content has been viewed, if present",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content metadata id associated with the item this content is based on",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "image_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The actual image_url for display",
                    "readOnly": true
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Dashboard to base this item on",
                    "format": "int64"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The actual title for display",
                    "readOnly": true
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Look to base this item on",
                    "format": "int64"
                  },
                  "homepage_section_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Associated Homepage Section"
                  },
                  "custom_image_data_base64": {
                    "description": "(Write-Only) base64 encoded image data",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times content has been favorited, if present",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "use_custom_description": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Homepage Item"
          }
        },
        "description": "### Get information about all homepage items.\n",
        "summary": "Get All Homepage Items",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "homepage_section_id",
            "description": "Filter to a specific homepage section",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_homepage_items",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/queries/slug/{slug}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Share Url",
                  "readOnly": true
                },
                "visible_ui_sections": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visible UI Sections"
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Limit"
                },
                "fill_fields": {
                  "description": "Fill Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query Timezone"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Url",
                  "readOnly": true
                },
                "view": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Explore Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "filter_expression": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter Expression"
                },
                "filters": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Filters",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "has_table_calculations": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has Table Calculations",
                  "readOnly": true
                },
                "row_total": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Raw Total"
                },
                "filter_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "total": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Total"
                },
                "expanded_share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Share Url",
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Model"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated."
                },
                "sorts": {
                  "description": "Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subtotals": {
                  "description": "Fields on which to run subtotals",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug",
                  "readOnly": true
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime",
                  "format": "double"
                },
                "fields": {
                  "description": "Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "stable",
              "required": [
                "model",
                "view"
              ]
            },
            "description": "Query"
          }
        },
        "description": "### Get the query for a given query slug.\n\nThis returns the query for the 'slug' in a query share URL.\n\nThe 'slug' is a randomly chosen short string that is used as an alternative to the query's id value\nfor use in URLs etc. This method exists as a convenience to help you use the API to 'find' queries that\nhave been created using the Looker UI.\n\nYou can use the Looker explore page to build a query and then choose the 'Share' option to\nshow the share url for the query. Share urls generally look something like 'https://looker.yourcompany/x/vwGSbfc'.\nThe trailing 'vwGSbfc' is the share slug. You can pass that string to this api method to get details about the query.\nThose details include the 'id' that you can use to run the query. Or, you can copy the query body\n(perhaps with your own modification) and use that as the basis to make/run new queries.\n\nThis will also work with slugs from Looker explore urls like\n'https://looker.yourcompany/explore/ecommerce/orders?qid=aogBgL6o3cKK1jN3RoZl5s'. In this case\n'aogBgL6o3cKK1jN3RoZl5s' is the slug.\n",
        "summary": "Get Query for Slug",
        "parameters": [
          {
            "name": "slug",
            "description": "Slug of query",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "query_for_slug",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/session_config": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "session_minutes": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of minutes for user sessions.  Must be between 5 and 43200",
                  "format": "int64"
                },
                "allow_persistent_sessions": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow users to have persistent sessions when they login"
                },
                "use_inactivity_based_logout": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enforce session logout for sessions that are inactive for 15 minutes."
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "unlimited_sessions_per_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time)."
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Session Config"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update session config.\n",
        "summary": "Update Session Config",
        "parameters": [
          {
            "name": "body",
            "description": "Session Config",
            "schema": {
              "properties": {
                "session_minutes": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of minutes for user sessions.  Must be between 5 and 43200",
                  "format": "int64"
                },
                "allow_persistent_sessions": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow users to have persistent sessions when they login"
                },
                "use_inactivity_based_logout": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enforce session logout for sessions that are inactive for 15 minutes."
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "unlimited_sessions_per_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time)."
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_session_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "session_minutes": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of minutes for user sessions.  Must be between 5 and 43200",
                  "format": "int64"
                },
                "allow_persistent_sessions": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow users to have persistent sessions when they login"
                },
                "use_inactivity_based_logout": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enforce session logout for sessions that are inactive for 15 minutes."
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "unlimited_sessions_per_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time)."
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Session Config"
          }
        },
        "description": "### Get session config.\n",
        "summary": "Get Session Config",
        "x-looker-activity-type": "non_query",
        "operationId": "session_config",
        "tags": [
          "Auth"
        ],
        "x-looker-status": "beta"
      }
    },
    "/render_tasks/looks/{look_id}/{result_format}": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "status_detail": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional information about the current status",
                  "readOnly": true
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of lookml dashboard to render",
                  "readOnly": true
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled",
                  "readOnly": true
                },
                "query_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed running queries",
                  "readOnly": true,
                  "format": "double"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Id of this render task",
                  "readOnly": true
                },
                "finalized_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was completed",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output width in pixels",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Output format: pdf, png, or jpg",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The user account permissions in which the render task will execute",
                  "readOnly": true,
                  "format": "int64"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was created",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output height in pixels. Flowed layouts may ignore this value.",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of dashboard to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Total seconds elapsed for render task",
                  "readOnly": true,
                  "format": "double"
                },
                "render_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed rendering data",
                  "readOnly": true,
                  "format": "double"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Render Task"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new task to render a look to an image.\n\nReturns a render task object.\nTo check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).\nOnce the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).\n\n",
        "summary": "Create Look Render Task",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of look to render",
            "required": true,
            "name": "look_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "result_format",
            "description": "Output type: png, or jpg",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "format": "int64",
            "description": "Output width in pixels",
            "required": true,
            "name": "width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Output height in pixels",
            "required": true,
            "name": "height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_look_render_task",
        "tags": [
          "RenderTask"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/themes/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "settings": {
                    "$ref": "#/definitions/ThemeSettings",
                    "description": "Hash of name/value pairs for theme settings. These names get validated.",
                    "x-looker-nullable": false
                  },
                  "end_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for when this theme expires. Null=never",
                    "format": "date-time"
                  },
                  "name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of theme. Can only be alphanumeric and underscores."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "begin_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for when this theme becomes active. Null=always",
                    "format": "date-time"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Themes"
          }
        },
        "description": "### Search all themes for matching criteria.\n\nReturns an **array of theme objects** that match the specified search criteria.\n\n| Search Parameters | Description\n| :-------------------: | :------ |\n| `begin_at` only | Find themes active at or after `begin_at`\n| `end_at` only | Find themes active at or before `end_at`\n| both set | Find themes with an active inclusive period between `begin_at` and `end_at`\n\nNote: Range matching requires boolean AND logic.\nWhen using `begin_at` and `end_at` together, do not use `filter_or`=TRUE\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n\nGet a **single theme** by id with [Theme](#!/Theme/theme)\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Search Themes",
        "parameters": [
          {
            "format": "int64",
            "description": "Match theme id.",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "name",
            "description": "Match theme name.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "date-time",
            "description": "Timestamp for activation.",
            "required": false,
            "name": "begin_at",
            "type": "string",
            "in": "query"
          },
          {
            "format": "date-time",
            "description": "Timestamp for expiration.",
            "required": false,
            "name": "end_at",
            "type": "string",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to return (used with `offset`).",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning any (used with `limit`).",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_themes",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/homepage_items/{homepage_item_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "use_custom_url": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual description for display",
                  "readOnly": true
                },
                "custom_description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom description entered by the user, if present"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML Dashboard to base this item on"
                },
                "custom_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom title entered by the user, if present"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content favorite id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "custom_image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom image_url entered by the user, if present",
                  "readOnly": true
                },
                "order": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "An arbitrary integer representing the sort order within the section",
                  "format": "int64"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual url for display",
                  "readOnly": true
                },
                "use_custom_image": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
                },
                "section_fetch_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds it took to fetch the section this item is in",
                  "readOnly": true,
                  "format": "float"
                },
                "custom_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom url entered by the user, if present"
                },
                "content_created_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user who created the content this item is based on",
                  "readOnly": true
                },
                "use_custom_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
                },
                "content_updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last time the content that this item is based on was updated",
                  "readOnly": true
                },
                "location": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The container folder name of the content",
                  "readOnly": true
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been viewed, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content metadata id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual image_url for display",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Dashboard to base this item on",
                  "format": "int64"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual title for display",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Look to base this item on",
                  "format": "int64"
                },
                "homepage_section_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Associated Homepage Section"
                },
                "custom_image_data_base64": {
                  "description": "(Write-Only) base64 encoded image data",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been favorited, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "use_custom_description": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage Item"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a homepage item definition.\n",
        "summary": "Update Homepage Item",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage item",
            "required": true,
            "name": "homepage_item_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Homepage Item",
            "schema": {
              "properties": {
                "use_custom_url": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual description for display",
                  "readOnly": true
                },
                "custom_description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom description entered by the user, if present"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML Dashboard to base this item on"
                },
                "custom_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom title entered by the user, if present"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content favorite id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "custom_image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom image_url entered by the user, if present",
                  "readOnly": true
                },
                "order": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "An arbitrary integer representing the sort order within the section",
                  "format": "int64"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual url for display",
                  "readOnly": true
                },
                "use_custom_image": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
                },
                "section_fetch_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds it took to fetch the section this item is in",
                  "readOnly": true,
                  "format": "float"
                },
                "custom_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom url entered by the user, if present"
                },
                "content_created_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user who created the content this item is based on",
                  "readOnly": true
                },
                "use_custom_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
                },
                "content_updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last time the content that this item is based on was updated",
                  "readOnly": true
                },
                "location": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The container folder name of the content",
                  "readOnly": true
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been viewed, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content metadata id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual image_url for display",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Dashboard to base this item on",
                  "format": "int64"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual title for display",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Look to base this item on",
                  "format": "int64"
                },
                "homepage_section_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Associated Homepage Section"
                },
                "custom_image_data_base64": {
                  "description": "(Write-Only) base64 encoded image data",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been favorited, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "use_custom_description": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_homepage_item",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a homepage item.\n",
        "summary": "Delete Homepage Item",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage_item",
            "required": true,
            "name": "homepage_item_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_homepage_item",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "use_custom_url": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual description for display",
                  "readOnly": true
                },
                "custom_description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom description entered by the user, if present"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LookML Dashboard to base this item on"
                },
                "custom_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom title entered by the user, if present"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "content_favorite_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content favorite id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "custom_image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom image_url entered by the user, if present",
                  "readOnly": true
                },
                "order": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "An arbitrary integer representing the sort order within the section",
                  "format": "int64"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual url for display",
                  "readOnly": true
                },
                "use_custom_image": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
                },
                "section_fetch_time": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds it took to fetch the section this item is in",
                  "readOnly": true,
                  "format": "float"
                },
                "custom_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom url entered by the user, if present"
                },
                "content_created_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user who created the content this item is based on",
                  "readOnly": true
                },
                "use_custom_title": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
                },
                "content_updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last time the content that this item is based on was updated",
                  "readOnly": true
                },
                "location": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The container folder name of the content",
                  "readOnly": true
                },
                "view_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been viewed, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Content metadata id associated with the item this content is based on",
                  "readOnly": true,
                  "format": "int64"
                },
                "image_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual image_url for display",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Dashboard to base this item on",
                  "format": "int64"
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The actual title for display",
                  "readOnly": true
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Look to base this item on",
                  "format": "int64"
                },
                "homepage_section_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Associated Homepage Section"
                },
                "custom_image_data_base64": {
                  "description": "(Write-Only) base64 encoded image data",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "favorite_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of times content has been favorited, if present",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "use_custom_description": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage Item"
          }
        },
        "description": "### Get information about a homepage item.\n",
        "summary": "Get Homepage Item",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage item",
            "required": true,
            "name": "homepage_item_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "homepage_item",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/model_sets/{model_set_id}": {
      "patch": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "models": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of ModelSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "New state for specified model set."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          }
        },
        "description": "### Update information about the model set with a specific id.\n",
        "summary": "Update Model Set",
        "parameters": [
          {
            "format": "int64",
            "description": "id of model set",
            "required": true,
            "name": "model_set_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "ModelSet",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "models": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of ModelSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_model_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Model set succssfully deleted."
          }
        },
        "description": "### Delete the model set with a specific id.\n",
        "summary": "Delete Model Set",
        "parameters": [
          {
            "format": "int64",
            "description": "id of model set",
            "required": true,
            "name": "model_set_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_model_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "models": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of ModelSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Specified model set."
          }
        },
        "description": "### Get information about the model set with a specific id.\n",
        "summary": "Get Model Set",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of model set",
            "required": true,
            "name": "model_set_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "model_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/groups": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "include_by_default": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "New users are added to this group by default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "External Id group if embed group",
                  "readOnly": true
                },
                "user_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of users included in this group",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of group"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "contains_current_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Currently logged in user is group member",
                  "readOnly": true
                },
                "can_add_to_content_metadata": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group can be used in content access controls"
                },
                "externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group membership controlled outside of Looker",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Group"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Creates a new group (admin only).\n",
        "summary": "Create Group",
        "parameters": [
          {
            "name": "body",
            "description": "Group",
            "schema": {
              "properties": {
                "include_by_default": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "New users are added to this group by default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "External Id group if embed group",
                  "readOnly": true
                },
                "user_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of users included in this group",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of group"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "contains_current_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Currently logged in user is group member",
                  "readOnly": true
                },
                "can_add_to_content_metadata": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group can be used in content access controls"
                },
                "externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group membership controlled outside of Looker",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_group",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "include_by_default": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "New users are added to this group by default",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "external_group_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "External Id group if embed group",
                    "readOnly": true
                  },
                  "user_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of users included in this group",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of group"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "contains_current_user": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Currently logged in user is group member",
                    "readOnly": true
                  },
                  "can_add_to_content_metadata": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group can be used in content access controls"
                  },
                  "externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group membership controlled outside of Looker",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Group"
          }
        },
        "description": "### Get information about all groups.\n",
        "summary": "Get All Groups",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "collectionFormat": "csv",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Optional of ids to get specific groups.",
            "required": false,
            "name": "ids",
            "type": "array",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Id of content metadata to which groups must have access.",
            "required": false,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "can_add_to_content_metadata",
            "description": "Select only groups that either can/cannot be given access to content.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_groups",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/versions": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "looker_release_version": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Current Looker release version number",
                  "readOnly": true
                },
                "current_version": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/ApiVersionElement",
                  "description": "Current version for this Looker instance",
                  "readOnly": true
                },
                "supported_versions": {
                  "description": "Array of versions supported by this Looker instance",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ApiVersionElement"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "ApiVersion"
          }
        },
        "description": "### Get information about all API versions supported by this Looker instance.\n",
        "summary": "Get ApiVersion",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "versions",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "none",
        "x-looker-status": "stable"
      }
    },
    "/projects/{project_id}": {
      "patch": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Server Error"
          },
          "200": {
            "schema": {
              "properties": {
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "folders_enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, folders are enabled for this project"
                },
                "validation_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project Id",
                  "readOnly": true
                },
                "git_service_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the git service provider"
                },
                "git_password_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for password in per-user HTTPS authentication."
                },
                "git_username_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for username in per-user HTTPS authentication."
                },
                "allow_warnings": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
                },
                "uses_git": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is configured with a git repository",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is an example project and cannot be modified",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project display name"
                },
                "deploy_secret": {
                  "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "git_remote_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git remote repository url",
                  "format": "uri"
                },
                "pull_request_mode": {
                  "x-looker-values": [
                    "off",
                    "links",
                    "recommended",
                    "required"
                  ],
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
                },
                "unset_deploy_secret": {
                  "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "x-looker-write-only": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Update Project Configuration\n\nApply changes to a project's configuration.\n\n\n#### Configuring Git for a Project\n\nTo set up a Looker project with a remote git repository, follow these steps:\n\n1. Call `update_session` to select the 'dev' workspace.\n1. Call `create_git_deploy_key` to create a new deploy key for the project\n1. Copy the deploy key text into the remote git repository's ssh key configuration\n1. Call `update_project` to set project's `git_remote_url` ()and `git_service_name`, if necessary).\n\nWhen you modify a project's `git_remote_url`, Looker connects to the remote repository to fetch\nmetadata. The remote git repository MUST be configured with the Looker-generated deploy\nkey for this project prior to setting the project's `git_remote_url`.\n\nTo set up a Looker project with a git repository residing on the Looker server (a 'bare' git repo):\n1. Call `update_session` to select the 'dev' workspace.\n1. Call `update_project` setting `git_remote_url` to nil and `git_service_name` to \"bare\".\n\n",
        "summary": "Update Project",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Project",
            "schema": {
              "properties": {
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "folders_enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, folders are enabled for this project"
                },
                "validation_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project Id",
                  "readOnly": true
                },
                "git_service_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the git service provider"
                },
                "git_password_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for password in per-user HTTPS authentication."
                },
                "git_username_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for username in per-user HTTPS authentication."
                },
                "allow_warnings": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
                },
                "uses_git": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is configured with a git repository",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is an example project and cannot be modified",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project display name"
                },
                "deploy_secret": {
                  "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "git_remote_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git remote repository url",
                  "format": "uri"
                },
                "pull_request_mode": {
                  "x-looker-values": [
                    "off",
                    "links",
                    "recommended",
                    "required"
                  ],
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
                },
                "unset_deploy_secret": {
                  "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "x-looker-write-only": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_project",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "folders_enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true, folders are enabled for this project"
                },
                "validation_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project Id",
                  "readOnly": true
                },
                "git_service_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of the git service provider"
                },
                "git_password_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for password in per-user HTTPS authentication."
                },
                "git_username_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User attribute name for username in per-user HTTPS authentication."
                },
                "allow_warnings": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
                },
                "uses_git": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is configured with a git repository",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_example": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true the project is an example project and cannot be modified",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Project display name"
                },
                "deploy_secret": {
                  "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "git_remote_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git remote repository url",
                  "format": "uri"
                },
                "pull_request_mode": {
                  "x-looker-values": [
                    "off",
                    "links",
                    "recommended",
                    "required"
                  ],
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
                },
                "unset_deploy_secret": {
                  "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "x-looker-write-only": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Project"
          }
        },
        "description": "### Get A Project\n\nReturns the project with the given project id\n",
        "summary": "Get Project",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "project",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboards/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "query_timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone in which the Dashboard will run by default."
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Content Metadata Slug"
                  },
                  "lookml_link_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
                  },
                  "refresh_interval": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "show_filters_bar": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time the dashboard was last accessed",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "tile_background_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Tile background color"
                  },
                  "tile_text_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Tile text color"
                  },
                  "text_tile_text_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color of text on text tiles"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "show_title": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Show title"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Dashboard was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "description": "Filters",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardFilter"
                    },
                    "readOnly": true
                  },
                  "title_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title color"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that 'soft' deleted the dashboard.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboard_elements": {
                    "description": "Elements",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardElement"
                    },
                    "readOnly": true
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Space"
                  },
                  "load_configuration": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "configuration option that governs how dashboard loading will happen."
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a dashboard is 'soft' deleted."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Dashboard Title"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Dashboard was 'soft' deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "refresh_interval_to_i": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Refresh Interval in milliseconds",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Hidden"
                  },
                  "background_color": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Background color"
                  },
                  "readonly": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Read-only",
                    "readOnly": true
                  },
                  "edit_uri": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "dashboard_layouts": {
                    "description": "Layouts",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardLayout"
                    },
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "dashboards"
          }
        },
        "description": "### Search Dashboards\n\nReturns an **array of dashboard objects** that match the specified search criteria.\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n\nThe parameters `limit`, and `offset` are recommended for fetching results in page-size chunks.\n\nGet a **single dashboard** by id with [dashboard()](#!/Dashboard/dashboard)\n",
        "summary": "Search Dashboards",
        "parameters": [
          {
            "format": "int64",
            "description": "Match dashboard id.",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "slug",
            "description": "Match dashboard slug.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "title",
            "description": "Match Dashboard title.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "description",
            "description": "Match Dashboard description.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Filter on a content favorite id.",
            "required": false,
            "name": "content_favorite_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "space_id",
            "description": "Filter on a particular space.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "description": "Filter on dashboards deleted status.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "user_id",
            "description": "Filter on dashboards created by a particular user.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "view_count",
            "description": "Filter on a particular value of view_count",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Filter on a content favorite id.",
            "required": false,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to return. (used with offset and takes priority over page and per_page)",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning any. (used with limit and takes priority over page and per_page)",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "One or more fields to sort by. Sortable fields: [:title, :user_id, :id, :created_at, :space_id, :description, :view_count, :favorite_count, :slug, :content_favorite_id, :content_metadata_id, :deleted, :deleted_at, :last_viewed_at]",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_dashboards",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/sql_queries/{slug}/run/{result_format}": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "SQL Runner Query"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "parameters": [
          {
            "name": "slug",
            "description": "slug of query",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "result_format",
            "description": "Format of result, options are: [\"json\", \"json_detail\", \"json_fe\", \"csv\", \"html\", \"md\", \"txt\", \"xlsx\", \"gsxml\"]",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "download",
            "description": "Defaults to false. If set to true, the HTTP response will have content-disposition and other headers set to make the HTTP response behave as a downloadable attachment instead of as inline content.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "description": "Execute a SQL Runner query in a given result_format.",
        "summary": "Run SQL Runner Query",
        "produces": [
          "text",
          "application/json",
          "image/png",
          "image/jpg"
        ],
        "operationId": "run_sql_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/integrations/{integration_id}/form": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "state": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/DataActionUserState",
                  "description": "User state",
                  "readOnly": true
                },
                "fields": {
                  "description": "Array of form fields.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DataActionFormField"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Data Action Form"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "Returns the Integration form for presentation to the user.",
        "summary": "Fetch Remote Integration Form",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Integration",
            "required": true,
            "name": "integration_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "fetch_integration_form",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/session": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "workspace_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The id of active workspace for this session"
                },
                "sudo_user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The id of the actual user in the case when this session represents one user sudo'ing as another",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Session"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update API Session\n\n#### API Session Workspace\n\nYou can use this endpoint to change the active workspace for the current API session.\n\nOnly one workspace can be active in a session. The active workspace can be changed\nany number of times in a session.\n\nThe default workspace for API sessions is the \"production\" workspace.\n\nAll Looker APIs that use projects or lookml models (such as running queries) will\nuse the version of project and model files defined by this workspace for the lifetime of the\ncurrent API session or until the session workspace is changed again.\n\nAn API session has the same lifetime as the access_token used to authenticate API requests. Each successful\nAPI login generates a new access_token and a new API session.\n\nIf your Looker API client application needs to work in a dev workspace across multiple\nAPI sessions, be sure to select the dev workspace after each login.\n",
        "summary": "Update Session",
        "parameters": [
          {
            "name": "body",
            "description": "Session",
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "workspace_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The id of active workspace for this session"
                },
                "sudo_user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The id of the actual user in the case when this session represents one user sudo'ing as another",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_session",
        "tags": [
          "Session"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "workspace_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The id of active workspace for this session"
                },
                "sudo_user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The id of the actual user in the case when this session represents one user sudo'ing as another",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Session"
          }
        },
        "description": "### Get API Session\n\nReturns information about the current API session, such as which workspace is selected for the session.\n",
        "summary": "Get Session",
        "x-looker-activity-type": "non_query",
        "operationId": "session",
        "tags": [
          "Session"
        ],
        "x-looker-status": "beta"
      }
    },
    "/lookml_models/{lookml_model_name}/explores/{explore_name}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "group_label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Label used to group explores in the navigation menus",
                  "readOnly": true
                },
                "source_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Primary source_file file",
                  "readOnly": true
                },
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description",
                  "readOnly": true
                },
                "null_sort_treatment": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "How nulls are sorted, possible values are \"low\", \"high\", \"first\" and \"last\"",
                  "readOnly": true
                },
                "connection_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Connection name",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Fully qualified name model plus explore name",
                  "readOnly": true
                },
                "tags": {
                  "description": "An array of arbitrary string tags provided in the model for this explore.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "can_explain": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can Explain",
                  "readOnly": true
                },
                "model_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of model",
                  "readOnly": true
                },
                "project_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of project",
                  "readOnly": true
                },
                "can_subtotal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can use subtotals",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Explore name",
                  "readOnly": true
                },
                "scopes": {
                  "description": "Scopes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "access_filters": {
                  "description": "Access filters",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreAccessFilter"
                  },
                  "readOnly": true
                },
                "label": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Label",
                  "readOnly": true
                },
                "joins": {
                  "description": "Views joined into this explore",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreJoins"
                  },
                  "readOnly": true
                },
                "supports_cost_estimate": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Cost estimates supported",
                  "readOnly": true
                },
                "fields": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LookmlModelExploreFieldset",
                  "description": "Fields",
                  "readOnly": true
                },
                "can_pivot_in_db": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can pivot in the DB",
                  "readOnly": true
                },
                "files": {
                  "description": "List of model source files",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "access_filter_fields": {
                  "type": "array",
                  "description": "(DEPRECATED) Array of access filter field names",
                  "readOnly": true,
                  "x-looker-nullable": true,
                  "x-looker-deprecated": true,
                  "items": {
                    "type": "string"
                  }
                },
                "errors": {
                  "description": "Errors",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreError"
                  },
                  "readOnly": true
                },
                "can_total": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can Total",
                  "readOnly": true
                },
                "sets": {
                  "description": "Sets",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreSet"
                  },
                  "readOnly": true
                },
                "view_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of view",
                  "readOnly": true
                },
                "always_filter": {
                  "description": "Always filter",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreAlwaysFilter"
                  },
                  "readOnly": true
                },
                "conditionally_filter": {
                  "description": "Conditionally filter",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreConditionallyFilter"
                  },
                  "readOnly": true
                },
                "can_save": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Can Save",
                  "readOnly": true
                },
                "hidden": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is hidden",
                  "readOnly": true
                },
                "supported_measure_types": {
                  "description": "An array of items describing which custom measure types are supported for creating a custom measure 'baed_on' each possible dimension type.",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreSupportedMeasureType"
                  },
                  "readOnly": true
                },
                "sql_table_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A sql_table_name expression that defines what sql table the view/explore maps onto. Example: \"prod_orders2 AS orders\" in a view named orders.",
                  "readOnly": true
                },
                "aliases": {
                  "description": "Aliases",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookmlModelExploreAlias"
                  },
                  "readOnly": true
                },
                "has_timezone_support": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has timezone support",
                  "readOnly": true
                },
                "index_fields": {
                  "description": "Array of index fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "LookML Model Explore"
          }
        },
        "description": "### Get information about a lookml model explore.\n",
        "summary": "Get LookML Model Explore",
        "parameters": [
          {
            "name": "lookml_model_name",
            "description": "Name of lookml model.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "explore_name",
            "description": "Name of explore.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "lookml_model_explore",
        "tags": [
          "LookmlModel"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/color_collections/standard": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "categoricalPalettes": {
                    "description": "Array of categorical palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DiscretePalette"
                    }
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "divergingPalettes": {
                    "description": "Array of diverging palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousPalette"
                    }
                  },
                  "label": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Label of color collection"
                  },
                  "sequentialPalettes": {
                    "description": "Array of discrete palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousPalette"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "ColorCollections"
          }
        },
        "description": "### Get an array of all existing **Standard** Color Collections\nGet a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)\n\nGet all **custom** color collections with [ColorCollection](#!/ColorCollection/color_collections_custom)\n\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Get all Standard Color Collections",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "color_collections_standard",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_ldap": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### LDAP login information for the specified user.",
        "summary": "Delete LDAP Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_ldap",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Unique ID for this user",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "ldap_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Distinguished name for this user (as-of the last login)",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "LDAP Credential"
          }
        },
        "description": "### LDAP login information for the specified user.",
        "summary": "Get LDAP Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_ldap",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/themes/theme_or_default": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Theme"
          }
        },
        "description": "### Get the named theme if it's active. Otherwise, return the default theme\n\nThe optional `ts` parameter can specify a different timestamp than \"now.\"\nNote: API users with `show` ability can call this function\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Get Theme or Default",
        "parameters": [
          {
            "name": "name",
            "description": "Name of theme",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "format": "date-time",
            "description": "Timestamp representing the target datetime for the active period. Defaults to 'now'",
            "required": false,
            "name": "ts",
            "type": "string",
            "in": "query"
          }
        ],
        "operationId": "theme_or_default",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/themes": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Theme"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a theme\n\nCreates a new theme object, returning the theme details, including the created id.\n\nIf `settings` are not specified, the default theme settings will be copied into the new theme.\n\nThe theme `name` can only contain alphanumeric characters or underscores. Theme names should not contain any confidential information, such as customer names.\n\n**Update** an existing theme with [Update Theme](#!/Theme/update_theme)\n\n**Permanently delete** an existing theme with [Delete Theme](#!/Theme/delete_theme)\n\nFor more information, see [Creating and Applying Themes](https://looker.com/docs/r/admin/themes?version=6.20).\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Create Theme",
        "parameters": [
          {
            "name": "body",
            "description": "Theme",
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/ThemeSettings",
                  "description": "Hash of name/value pairs for theme settings. These names get validated.",
                  "x-looker-nullable": false
                },
                "end_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme expires. Null=never",
                  "format": "date-time"
                },
                "name": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Name of theme. Can only be alphanumeric and underscores."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "begin_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for when this theme becomes active. Null=always",
                  "format": "date-time"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_theme",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "settings": {
                    "$ref": "#/definitions/ThemeSettings",
                    "description": "Hash of name/value pairs for theme settings. These names get validated.",
                    "x-looker-nullable": false
                  },
                  "end_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for when this theme expires. Null=never",
                    "format": "date-time"
                  },
                  "name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of theme. Can only be alphanumeric and underscores."
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "begin_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for when this theme becomes active. Null=always",
                    "format": "date-time"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Themes"
          }
        },
        "description": "### Get an array of all existing themes\n\nGet a **single theme** by id with [Theme](#!/Theme/theme)\n\nThis method returns an array of all existing themes. The active time for the theme is not considered.\n\n**Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or support@looker.com to update your license for this feature.\n\n",
        "summary": "Get All Themes",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_themes",
        "tags": [
          "Theme"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/render_tasks/lookml_dashboards/{dashboard_id}/{result_format}": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "status_detail": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional information about the current status",
                  "readOnly": true
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of lookml dashboard to render",
                  "readOnly": true
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled",
                  "readOnly": true
                },
                "query_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed running queries",
                  "readOnly": true,
                  "format": "double"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Id of this render task",
                  "readOnly": true
                },
                "finalized_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was completed",
                  "readOnly": true
                },
                "width": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output width in pixels",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Output format: pdf, png, or jpg",
                  "readOnly": true
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "The user account permissions in which the render task will execute",
                  "readOnly": true,
                  "format": "int64"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date/Time render task was created",
                  "readOnly": true
                },
                "height": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Output height in pixels. Flowed layouts may ignore this value.",
                  "readOnly": true,
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format",
                  "readOnly": true
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of dashboard to render",
                  "readOnly": true,
                  "format": "int64"
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Total seconds elapsed for render task",
                  "readOnly": true,
                  "format": "double"
                },
                "render_runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Number of seconds elapsed rendering data",
                  "readOnly": true,
                  "format": "double"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Render Task"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new task to render a lookml dashboard to a document or image.\n\nReturns a render task object.\nTo check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).\nOnce the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).\n\n",
        "summary": "Create Lookml Dashboard Render Task",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of lookml dashboard to render",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "result_format",
            "description": "Output type: pdf, png, or jpg",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Dashboard render task parameters",
            "schema": {
              "properties": {
                "dashboard_filters": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter values to apply to the dashboard queries, in URL query format"
                },
                "dashboard_style": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dashboard layout style: single_column or tiled"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "format": "int64",
            "description": "Output width in pixels",
            "required": true,
            "name": "width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Output height in pixels",
            "required": true,
            "name": "height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "pdf_paper_size",
            "description": "Paper size for pdf",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "pdf_landscape",
            "description": "Whether to render pdf in landscape",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_lookml_dashboard_render_task",
        "tags": [
          "RenderTask"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/git/deploy_key": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Project"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "description": "### Create Git Deploy Key\n\nCreate a public/private key pair for authenticating ssh git requests from Looker to a remote git repository\nfor a particular Looker project.\n\nReturns the public key of the generated ssh key pair.\n\nCopy this public key to your remote git repository's ssh keys configuration so that the remote git service can\nvalidate and accept git requests from the Looker server.\n",
        "summary": "Create Deploy Key",
        "produces": [
          "text/plain"
        ],
        "operationId": "create_git_deploy_key",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "The text of the public key portion of the deploy_key"
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "description": "### Git Deploy Key\n\nReturns the ssh public key previously created for a project's git repository.\n",
        "summary": "Git Deploy Key",
        "produces": [
          "text/plain"
        ],
        "operationId": "git_deploy_key",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/groups/{group_id}/groups/{deleting_group_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "description": "Group successfully deleted"
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Removes a group from a group.\n",
        "summary": "Deletes a Group from Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of group to delete",
            "required": true,
            "name": "deleting_group_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_group_from_group",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/credential/{credential_type}/{credential_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Specified user."
          }
        },
        "description": "### Get information about the user with a credential of given type with specific id.\n\nThis is used to do things like find users by their embed external_user_id. Or, find the user with\na given api3 client_id, etc. The 'credential_type' matchs the 'type' name of the various credential\ntypes. It must be one of the values listed in the table below. The 'credential_id' is your unique Id\nfor the user and is specific to each type of credential.\n\nAn example using the Ruby sdk might look like:\n\n`sdk.user_for_credential('embed', 'customer-4959425')`\n\nThis table shows the supported 'Credential Type' strings. The right column is for reference; it shows\nwhich field in the given credential type is actually searched when finding a user with the supplied\n'credential_id'.\n\n| Credential Types | Id Field Matched |\n| ---------------- | ---------------- |\n| email            | email            |\n| google           | google_user_id   |\n| saml             | saml_user_id     |\n| oidc             | oidc_user_id     |\n| ldap             | ldap_id          |\n| api              | token            |\n| api3             | client_id        |\n| embed            | external_user_id |\n| looker_openid    | email            |\n\nNOTE: The 'api' credential type was only used with the legacy Looker query API and is no longer supported. The credential type for API you are currently looking at is 'api3'.\n\n",
        "summary": "Get User by Credential Id",
        "parameters": [
          {
            "name": "credential_type",
            "description": "Type name of credential",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "credential_id",
            "description": "Id of credential",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_for_credential",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/queries": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Share Url",
                  "readOnly": true
                },
                "visible_ui_sections": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visible UI Sections"
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Limit"
                },
                "fill_fields": {
                  "description": "Fill Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query Timezone"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Url",
                  "readOnly": true
                },
                "view": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Explore Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "filter_expression": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter Expression"
                },
                "filters": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Filters",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "has_table_calculations": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has Table Calculations",
                  "readOnly": true
                },
                "row_total": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Raw Total"
                },
                "filter_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "total": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Total"
                },
                "expanded_share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Share Url",
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Model"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated."
                },
                "sorts": {
                  "description": "Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subtotals": {
                  "description": "Fields on which to run subtotals",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug",
                  "readOnly": true
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime",
                  "format": "double"
                },
                "fields": {
                  "description": "Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "stable",
              "required": [
                "model",
                "view"
              ]
            },
            "description": "Query"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a query.\n\nThis allows you to create a new query that you can later run. Looker queries are immutable once created\nand are not deleted. If you create a query that is exactly like an existing query then the existing query\nwill be returned and no new query will be created. Whether a new query is created or not, you can use\nthe 'id' in the returned query with the 'run' method.\n\nThe query parameters are passed as json in the body of the request.\n\n",
        "summary": "Create Query",
        "parameters": [
          {
            "name": "body",
            "description": "Query",
            "schema": {
              "properties": {
                "share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Share Url",
                  "readOnly": true
                },
                "visible_ui_sections": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Visible UI Sections"
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Limit"
                },
                "fill_fields": {
                  "description": "Fill Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "query_timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query Timezone"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Url",
                  "readOnly": true
                },
                "view": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Explore Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "filter_expression": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Filter Expression"
                },
                "filters": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Filters",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "has_table_calculations": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has Table Calculations",
                  "readOnly": true
                },
                "row_total": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Raw Total"
                },
                "filter_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "total": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "Total"
                },
                "expanded_share_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Expanded Share Url",
                  "readOnly": true
                },
                "model": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Model"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.",
                  "additionalProperties": {
                    "type": "string",
                    "format": "any"
                  }
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated."
                },
                "sorts": {
                  "description": "Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subtotals": {
                  "description": "Fields on which to run subtotals",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug",
                  "readOnly": true
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime",
                  "format": "double"
                },
                "fields": {
                  "description": "Fields",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "stable",
              "required": [
                "model",
                "view"
              ]
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "stable"
      }
    },
    "/content_favorite/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "look": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookBasic",
                    "description": "Associated Look",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Metadata Id associated with this ContentFavorite",
                    "format": "int64"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a dashboard",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id which owns this ContentFavorite",
                    "format": "int64"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a look",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboard": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/DashboardBase",
                    "description": "Associated Dashboard",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Favorite Content"
          }
        },
        "description": "### Search Favorite Content\n\nIf multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n",
        "summary": "Search Favorite Contents",
        "parameters": [
          {
            "format": "int64",
            "description": "Match content favorite id(s)",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Match user id(s)",
            "required": false,
            "name": "user_id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Match content metadata id(s)",
            "required": false,
            "name": "content_metadata_id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Match dashboard id(s)",
            "required": false,
            "name": "dashboard_id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Match look id(s)",
            "required": false,
            "name": "look_id",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to return. (used with offset)",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning any. (used with limit)",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_content_favorites",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/scheduled_plans/lookml_dashboard/{lookml_dashboard_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserPublic",
                    "description": "User who owns this ScheduledPlan",
                    "readOnly": true
                  },
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the ScheduledPlan is enabled"
                  },
                  "require_no_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if the dashboard look does not return results"
                  },
                  "require_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if running the dashboard or look returns results"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a dashboard",
                    "format": "int64"
                  },
                  "lookml_dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of a LookML dashboard"
                  },
                  "crontab": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Vixie-Style crontab specification when to run"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "run_once": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the plan in question should only be run once (usually for testing)"
                  },
                  "include_links": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether links back to Looker should be included in this ScheduledPlan"
                  },
                  "embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this schedule is in an embed context or not"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was created",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "x-looker-deprecated": true,
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "(DEPRECATED) Alias for filters_string field"
                  },
                  "require_change": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if data have changed since the last run"
                  },
                  "color_theme": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color scheme of the dashboard if applicable"
                  },
                  "pdf_landscape": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the paper should be landscape"
                  },
                  "long_tables": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not to expand table vis to full length"
                  },
                  "next_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan will next run (null if running once)",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan was last run",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was last updated",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "run_as_recipient": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                  },
                  "send_all_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Will run an unlimited query and send all results."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title",
                    "readOnly": true
                  },
                  "pdf_paper_size": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The size of paper a PDF should be rendered for"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query id"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id which owns this ScheduledPlan",
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a look",
                    "format": "int64"
                  },
                  "timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                  },
                  "filters_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query string to run look or dashboard with"
                  },
                  "datagroup": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                  },
                  "scheduled_plan_destination": {
                    "description": "Scheduled plan destinations",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ScheduledPlanDestination"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Scheduled Plan"
          }
        },
        "description": "### Get Scheduled Plans for a LookML Dashboard\n\nReturns all scheduled plans for a LookML Dashboard which belong to the caller or given user.\n\nIf no user_id is provided, this function returns the scheduled plans owned by the caller.\n\n\nTo list all schedules for all users, pass `all_users=true`.\n\n\nThe caller must have `see_schedules` permission to see other users' scheduled plans.\n\n\n",
        "summary": "Scheduled Plans for LookML Dashboard",
        "parameters": [
          {
            "format": "int64",
            "description": "LookML Dashboard Id",
            "required": true,
            "name": "lookml_dashboard_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "User Id (default is requesting user if not specified)",
            "required": false,
            "name": "user_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "all_users",
            "description": "Return scheduled plans belonging to all users for the dashboard",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "scheduled_plans_for_lookml_dashboard",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/spaces/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed shared space",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed users space",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root shared space",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root user space",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is a user's personal space",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is descendant of a user's personal space",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is an embed space",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "spaces"
          }
        },
        "description": "### Search Spaces\n\n  Returns an **array of space objects** that match the given search criteria.\n\n  If multiple search params are given and `filter_or` is FALSE or not specified,\nsearch params are combined in a logical AND operation.\nOnly rows that match *all* search param criteria will be returned.\n\nIf `filter_or` is TRUE, multiple search params are combined in a logical OR operation.\nResults will include rows that match **any** of the search criteria.\n\nString search params use case-insensitive matching.\nString search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.\nexample=\"dan%\" will match \"danger\" and \"Danzig\" but not \"David\"\nexample=\"D_m%\" will match \"Damage\" and \"dump\"\n\nInteger search params can accept a single value or a comma separated list of values. The multiple\nvalues will be combined under a logical OR operation - results will match at least one of\nthe given values.\n\nMost search params can accept \"IS NULL\" and \"NOT NULL\" as special expressions to match\nor exclude (respectively) rows where the column is null.\n\nBoolean search params accept only \"true\" and \"false\" as values.\n\n\n  The parameters `limit`, and `offset` are recommended for fetching results in page-size chunks.\n\n  Get a **single space** by id with [Space](#!/Space/space)\n",
        "summary": "Search Spaces",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Requested page.",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Results per page.",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to return. (used with offset and takes priority over page and per_page)",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Number of results to skip before returning any. (used with limit and takes priority over page and per_page)",
            "required": false,
            "name": "offset",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "name",
            "description": "Match Space title.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Match Space id",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "parent_id",
            "description": "Filter on a children of a particular space.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "creator_id",
            "description": "Filter on spaces created by a particular user.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_spaces",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/scheduled_plans/dashboard/{dashboard_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserPublic",
                    "description": "User who owns this ScheduledPlan",
                    "readOnly": true
                  },
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the ScheduledPlan is enabled"
                  },
                  "require_no_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if the dashboard look does not return results"
                  },
                  "require_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if running the dashboard or look returns results"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a dashboard",
                    "format": "int64"
                  },
                  "lookml_dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of a LookML dashboard"
                  },
                  "crontab": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Vixie-Style crontab specification when to run"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "run_once": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the plan in question should only be run once (usually for testing)"
                  },
                  "include_links": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether links back to Looker should be included in this ScheduledPlan"
                  },
                  "embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this schedule is in an embed context or not"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was created",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "dashboard_filters": {
                    "x-looker-deprecated": true,
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "(DEPRECATED) Alias for filters_string field"
                  },
                  "require_change": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Delivery should occur if data have changed since the last run"
                  },
                  "color_theme": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Color scheme of the dashboard if applicable"
                  },
                  "pdf_landscape": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the paper should be landscape"
                  },
                  "long_tables": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not to expand table vis to full length"
                  },
                  "next_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan will next run (null if running once)",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "last_run_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "When the ScheduledPlan was last run",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Date and time when ScheduledPlan was last updated",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "run_as_recipient": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                  },
                  "send_all_results": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Will run an unlimited query and send all results."
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title",
                    "readOnly": true
                  },
                  "pdf_paper_size": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The size of paper a PDF should be rendered for"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query id"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id which owns this ScheduledPlan",
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of a look",
                    "format": "int64"
                  },
                  "timezone": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                  },
                  "filters_string": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Query string to run look or dashboard with"
                  },
                  "datagroup": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                  },
                  "scheduled_plan_destination": {
                    "description": "Scheduled plan destinations",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ScheduledPlanDestination"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Scheduled Plan"
          }
        },
        "description": "### Get Scheduled Plans for a Dashboard\n\nReturns all scheduled plans for a dashboard which belong to the caller or given user.\n\nIf no user_id is provided, this function returns the scheduled plans owned by the caller.\n\n\nTo list all schedules for all users, pass `all_users=true`.\n\n\nThe caller must have `see_schedules` permission to see other users' scheduled plans.\n\n\n",
        "summary": "Scheduled Plans for Dashboard",
        "parameters": [
          {
            "format": "int64",
            "description": "Dashboard Id",
            "required": true,
            "name": "dashboard_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "User Id (default is requesting user if not specified)",
            "required": false,
            "name": "user_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "all_users",
            "description": "Return scheduled plans belonging to all users for the dashboard",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "scheduled_plans_for_dashboard",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/reset_to_remote": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Project"
          },
          "204": {
            "description": "Returns 204 if project was successfully reset, otherwise 400 with an error message"
          }
        },
        "description": "### Reset a project development branch to the revision of the project that is on the remote.\n\n**DANGER** this will delete any changes that have not been pushed to a remote repository.\n",
        "summary": "Reset To Remote",
        "parameters": [
          {
            "name": "project_id",
            "description": "Id of project",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "reset_project_to_remote",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_api3/{credentials_api3_id}": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### API 3 login information for the specified user. This is for the newer API keys that can be added for any user.",
        "summary": "Delete API 3 Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "id of API 3 Credential",
            "required": true,
            "name": "credentials_api3_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_api3",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "API key client_id",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "description": "API 3 Credential"
          }
        },
        "description": "### API 3 login information for the specified user. This is for the newer API keys that can be added for any user.",
        "summary": "Get API 3 Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "format": "int64",
            "description": "Id of API 3 Credential",
            "required": true,
            "name": "credentials_api3_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_api3",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/user_attributes/{user_attribute_id}/group_values": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user_attribute_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of user attribute",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Value of user attribute for group",
                    "readOnly": true
                  },
                  "rank": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Precedence for resolving value for user",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "value_is_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id of this group-attribute relation",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "group_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of group",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Array of group values."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Define values for a user attribute across a set of groups, in priority order.\n\nThis function defines all values for a user attribute defined by user groups. This is a global setting, potentially affecting\nall users in the system. This function replaces any existing group value definitions for the indicated user attribute.\n\nThe value of a user attribute for a given user is determined by searching the following locations, in this order:\n\n1. the user's account settings\n2. the groups that the user is a member of\n3. the default value of the user attribute, if any\n\nThe user may be a member of multiple groups which define different values for that user attribute. The order of items in the group_values parameter\ndetermines which group takes priority for that user. Lowest array index wins.\n\nAn alternate method to indicate the selection precedence of group-values is to assign numbers to the 'rank' property of each\ngroup-value object in the array. Lowest 'rank' value wins. If you use this technique, you must assign a\nrank value to every group-value object in the array.\n\n  To set a user attribute value for a single user, see [Set User Attribute User Value](#!/User/set_user_attribute_user_value).\nTo set a user attribute value for all members of a group, see [Set User Attribute Group Value](#!/Group/update_user_attribute_group_value).\n",
        "summary": "Set User Attribute Group Values",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Array of group values.",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user_attribute_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of user attribute",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Value of user attribute for group",
                    "readOnly": true
                  },
                  "rank": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Precedence for resolving value for user",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "value_is_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id of this group-attribute relation",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "group_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of group",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "set_user_attribute_group_values",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "user_attribute_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of user attribute",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "value": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Value of user attribute for group",
                    "readOnly": true
                  },
                  "rank": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Precedence for resolving value for user",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "value_is_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id of this group-attribute relation",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "group_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of group",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "All group values for attribute."
          }
        },
        "description": "### Returns all values of a user attribute defined by user groups, in precedence order.\n\nA user may be a member of multiple groups which define different values for a given user attribute.\nThe order of group-values in the response determines precedence for selecting which group-value applies\nto a given user.  For more information, see [Set User Attribute Group Values](#!/UserAttribute/set_user_attribute_group_values).\n\nResults will only include groups that the caller's user account has permission to see.\n",
        "summary": "Get User Attribute Group Values",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user attribute",
            "required": true,
            "name": "user_attribute_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_user_attribute_group_values",
        "tags": [
          "UserAttribute"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/ldap_config/test_user_info": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/LDAPUser",
                  "description": "User details from LDAP server for auth tests",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to ldap config",
                  "readOnly": true,
                  "format": "uri"
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Test status code: always 'success' or 'error'",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short human readable test about the result",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "issues": {
                  "description": "Array of issues/considerations about the result",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPConfigTestIssue"
                  },
                  "readOnly": true
                },
                "trace": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A more detailed trace of incremental results during auth tests",
                  "readOnly": true
                },
                "details": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Additional details for error cases",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Result info."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Test the user authentication settings for an LDAP configuration without authenticating the user.\n\nThis test will let you easily test the mapping for user properties and roles for any user without      needing to authenticate as that user.\n\nThis test accepts a full LDAP configuration along with a username and attempts to find the full info      for the user from the LDAP server without actually authenticating the user. So, user password is not      required.The configuration is validated before attempting to contact the server.\n\n**test_ldap_user** is required.\n\nThe active LDAP settings are not modified.\n\n",
        "summary": "Test LDAP User Info",
        "parameters": [
          {
            "name": "body",
            "description": "LDAP Config",
            "schema": {
              "properties": {
                "force_no_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable LDAP authentication for the server"
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
                },
                "user_bind_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP node used as the base for user searches"
                },
                "has_auth_password": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from LDAP"
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "auth_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Distinguished name of LDAP account used to access the LDAP server"
                },
                "connection_tls": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use Transport Layer Security"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeRead"
                  },
                  "readOnly": true
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "user_id_attribute_names": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
                },
                "auth_password": {
                  "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "connection_port": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP host port"
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "test_ldap_password": {
                  "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "merge_new_users_by_email": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "user_objectclass": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Name of user record objectclass used for finding user during login id"
                },
                "test_ldap_user": {
                  "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "user_attribute_map_ldap_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate unique record id"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPUserAttributeWrite"
                  }
                },
                "groups_member_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "connection_tls_no_verify": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Do not verify peer when using TLS"
                },
                "groups_user_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "groups_base_dn": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Base dn for finding groups in LDAP searches"
                },
                "user_custom_filter": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LDAPGroupWrite"
                  }
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "groups_objectclasses": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
                },
                "connection_host": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "LDAP server hostname"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "test_ldap_config_user_info",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/color_collections": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "ColorCollection"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Create a custom color collection with the specified information\n\nCreates a new custom color collection object, returning the details, including the created id.\n\n**Update** an existing color collection with [Update Color Collection](#!/ColorCollection/update_color_collection)\n\n**Permanently delete** an existing custom color collection with [Delete Color Collection](#!/ColorCollection/delete_color_collection)\n\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Create ColorCollection",
        "parameters": [
          {
            "name": "body",
            "description": "ColorCollection",
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_color_collection",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "categoricalPalettes": {
                    "description": "Array of categorical palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DiscretePalette"
                    }
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "divergingPalettes": {
                    "description": "Array of diverging palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousPalette"
                    }
                  },
                  "label": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Label of color collection"
                  },
                  "sequentialPalettes": {
                    "description": "Array of discrete palette definitions",
                    "x-looker-nullable": false,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousPalette"
                    }
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "ColorCollections"
          }
        },
        "description": "### Get an array of all existing Color Collections\nGet a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)\n\nGet all **standard** color collections with [ColorCollection](#!/ColorCollection/color_collections_standard)\n\nGet all **custom** color collections with [ColorCollection](#!/ColorCollection/color_collections_custom)\n\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Get all Color Collections",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_color_collections",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/query_tasks": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "result_source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Source of the results of the query.",
                  "readOnly": true
                },
                "rebuild_pdts": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Rebuild PDTS used in query."
                },
                "force_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use production models to run query (even is user is in dev mode)."
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of dashboard associated with query."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "path_prefix": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Prefix to use for drill links."
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "cache_only": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Retrieve any results from cache even if the results have expired."
                },
                "cache_key": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "cache key used to cache query.",
                  "readOnly": true
                },
                "generate_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "whether or not to generate links in the query response."
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query",
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The data format of the query results.",
                  "readOnly": true
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Status of query task."
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look associated with query.",
                  "format": "int64"
                },
                "cache": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to use the cache"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime of prior queries.",
                  "readOnly": true,
                  "format": "float"
                },
                "source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Source of query task."
                },
                "server_table_calcs": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to run table calculations on the server"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "query_task"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Run a saved query asynchronously.\n\nRuns a previously created query asynchronously. Returns a Query Task ID\nwhich can be used to fetch the results from the Query Tasks results endpoint.\n",
        "summary": "Run Query Async",
        "parameters": [
          {
            "name": "body",
            "description": "Query parameters",
            "schema": {
              "properties": {
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query to run",
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Desired result format"
                },
                "deferred": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Create the task but defer execution"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look associated with query.",
                  "format": "int64"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of dashboard associated with query."
                },
                "source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Source of query task"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta",
              "required": [
                "query_id",
                "result_format"
              ]
            },
            "in": "body",
            "required": true
          },
          {
            "format": "int64",
            "description": "Row limit (may override the limit in the saved query).",
            "required": false,
            "name": "limit",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "apply_formatting",
            "description": "Apply model-specified formatting to each result.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "apply_vis",
            "description": "Apply visualization options to results.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache",
            "description": "Get results from cache if available.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Render width for image formats.",
            "required": false,
            "name": "image_width",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Render height for image formats.",
            "required": false,
            "name": "image_height",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "generate_drill_links",
            "description": "Generate drill links (only applicable to 'json_detail' format.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "force_production",
            "description": "Force use of production models even if the user is in development mode.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "cache_only",
            "description": "Retrieve any results from cache even if the results have expired.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "path_prefix",
            "description": "Prefix to use for drill links (url encoded).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "rebuild_pdts",
            "description": "Rebuild PDTS used in query.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "server_table_calcs",
            "description": "Perform table calculations on query results",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_query_task",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/spaces/{space_id}/children/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed shared space",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root embed users space",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root shared space",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is the root user space",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is a user's personal space",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is descendant of a user's personal space",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Space is an embed space",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Spaces"
          }
        },
        "description": "### Search the children of a space",
        "summary": "Search Space Children",
        "parameters": [
          {
            "name": "space_id",
            "description": "Id of space",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "name",
            "description": "Match Space name.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "space_children_search",
        "tags": [
          "Space"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/whitelabel_configuration": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "logo_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Customer logo image. Expected base64 encoded data (write-only)"
                },
                "logo_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Logo image url (read-only)",
                  "readOnly": true
                },
                "show_email_sub_options": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing email subscription options."
                },
                "allow_looker_mentions": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle mentions of Looker in emails"
                },
                "favicon_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Favicon image url (read-only)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "favicon_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom favicon image. Expected base64 encoded data (write-only)"
                },
                "default_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default page title"
                },
                "show_docs": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing docs"
                },
                "show_help_menu": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing help menus"
                },
                "allow_looker_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle links to Looker in emails"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Whitelabel configuration"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the whitelabel configuration\n",
        "summary": "Update Whitelabel configuration",
        "parameters": [
          {
            "name": "body",
            "description": "Whitelabel configuration",
            "schema": {
              "properties": {
                "logo_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Customer logo image. Expected base64 encoded data (write-only)"
                },
                "logo_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Logo image url (read-only)",
                  "readOnly": true
                },
                "show_email_sub_options": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing email subscription options."
                },
                "allow_looker_mentions": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle mentions of Looker in emails"
                },
                "favicon_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Favicon image url (read-only)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "favicon_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom favicon image. Expected base64 encoded data (write-only)"
                },
                "default_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default page title"
                },
                "show_docs": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing docs"
                },
                "show_help_menu": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing help menus"
                },
                "allow_looker_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle links to Looker in emails"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_whitelabel_configuration",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "logo_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Customer logo image. Expected base64 encoded data (write-only)"
                },
                "logo_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Logo image url (read-only)",
                  "readOnly": true
                },
                "show_email_sub_options": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing email subscription options."
                },
                "allow_looker_mentions": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle mentions of Looker in emails"
                },
                "favicon_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Favicon image url (read-only)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "favicon_file": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Custom favicon image. Expected base64 encoded data (write-only)"
                },
                "default_title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Default page title"
                },
                "show_docs": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing docs"
                },
                "show_help_menu": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle showing help menus"
                },
                "allow_looker_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Boolean to toggle links to Looker in emails"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Whitelabel configuration"
          }
        },
        "description": "### This feature is enabled only by special license.\n### Gets the whitelabel configuration, which includes hiding documentation links, custom favicon uploading, etc.\n",
        "summary": "Get Whitelabel configuration",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "whitelabel_configuration",
        "tags": [
          "Config"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/integration_hubs": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "URL of the hub."
                },
                "official": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this hub is a first-party integration hub operated by Looker.",
                  "readOnly": true
                },
                "legal_agreement_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The legal agreement text for this integration hub.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "has_authorization_token": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the authorization_token is set for the hub.",
                  "readOnly": true
                },
                "legal_agreement_signed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "legal_agreement_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal terms for the integration hub are required before use.",
                  "readOnly": true
                },
                "authorization_token": {
                  "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of the hub.",
                  "readOnly": true
                },
                "fetch_error_message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Integration Hub"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a new Integration Hub.\n",
        "summary": "Create Integration Hub",
        "parameters": [
          {
            "name": "body",
            "description": "Integration Hub",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "URL of the hub."
                },
                "official": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this hub is a first-party integration hub operated by Looker.",
                  "readOnly": true
                },
                "legal_agreement_text": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The legal agreement text for this integration hub.",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "has_authorization_token": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the authorization_token is set for the hub.",
                  "readOnly": true
                },
                "legal_agreement_signed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "ID of the hub.",
                  "readOnly": true,
                  "format": "int64"
                },
                "legal_agreement_required": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the legal terms for the integration hub are required before use.",
                  "readOnly": true
                },
                "authorization_token": {
                  "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of the hub.",
                  "readOnly": true
                },
                "fetch_error_message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_integration_hub",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "url": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "URL of the hub."
                  },
                  "official": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this hub is a first-party integration hub operated by Looker.",
                    "readOnly": true
                  },
                  "legal_agreement_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "The legal agreement text for this integration hub.",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "has_authorization_token": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the authorization_token is set for the hub.",
                    "readOnly": true
                  },
                  "legal_agreement_signed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "ID of the hub.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "legal_agreement_required": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether the legal terms for the integration hub are required before use.",
                    "readOnly": true
                  },
                  "authorization_token": {
                    "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
                    "x-looker-nullable": true,
                    "type": "string",
                    "x-looker-write-only": true
                  },
                  "label": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Label of the hub.",
                    "readOnly": true
                  },
                  "fetch_error_message": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Integration Hub"
          }
        },
        "description": "### Get information about all Integration Hubs.\n",
        "summary": "Get All Integration Hubs",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_integration_hubs",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/color_collections/{collection_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "ColorCollection"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Update a custom color collection by id.\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Update Custom Color collection",
        "parameters": [
          {
            "name": "collection_id",
            "description": "Id of Custom Color Collection",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "ColorCollection",
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_color_collection",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Delete a custom color collection by id\n\nThis operation permanently deletes the identified **Custom** color collection.\n\n**Standard** color collections cannot be deleted\n\nBecause multiple color collections can have the same label, they must be deleted by ID, not name.\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Delete ColorCollection",
        "parameters": [
          {
            "name": "collection_id",
            "description": "Id of Color Collection",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_color_collection",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "categoricalPalettes": {
                  "description": "Array of categorical palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DiscretePalette"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "divergingPalettes": {
                  "description": "Array of diverging palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                },
                "label": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Label of color collection"
                },
                "sequentialPalettes": {
                  "description": "Array of discrete palette definitions",
                  "x-looker-nullable": false,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContinuousPalette"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "ColorCollection"
          }
        },
        "description": "### Get a Color Collection by ID\n\nUse this to retrieve a specific Color Collection.\nGet a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)\n\nGet all **standard** color collections with [ColorCollection](#!/ColorCollection/color_collections_standard)\n\nGet all **custom** color collections with [ColorCollection](#!/ColorCollection/color_collections_custom)\n\n**Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.\n\n",
        "summary": "Get Color Collection by ID",
        "parameters": [
          {
            "name": "collection_id",
            "description": "Id of Color Collection",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "color_collection",
        "tags": [
          "ColorCollection"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/users/{user_id}/credentials_google": {
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Google authentication login information for the specified user.",
        "summary": "Delete Google Auth Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user_credentials_google",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "domain": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google domain",
                  "readOnly": true
                },
                "google_user_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Google's Unique ID for this user",
                  "readOnly": true
                },
                "logged_in_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for most recent login using credential",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Google Auth Credential"
          }
        },
        "description": "### Google authentication login information for the specified user.",
        "summary": "Get Google Auth Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user_credentials_google",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "New state for specified user."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update information about the user with a specific id.\n",
        "summary": "Update User",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "User",
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_user",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "User successfully deleted."
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Delete the user with a specific id.\n\n**DANGER** this will delete the user and all looks and other information owned by the user.\n",
        "summary": "Delete User",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_user",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "First name"
                },
                "credentials_api3": {
                  "description": "API 3 credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsApi3"
                  },
                  "readOnly": true
                },
                "presumed_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker",
                  "readOnly": true
                },
                "credentials_saml": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsSaml",
                  "description": "Saml auth credentials",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "group_ids": {
                  "description": "Array of ids of the groups for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                },
                "locale": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                },
                "verified_looker_employee": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                  "readOnly": true
                },
                "credentials_email": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsEmail",
                  "description": "Email/Password login credentials",
                  "readOnly": true
                },
                "roles_externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                  "readOnly": true
                },
                "credentials_oidc": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsOIDC",
                  "description": "OpenID Connect auth credentials",
                  "readOnly": true
                },
                "display_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Full name for display (available only if both first_name and last_name are set)",
                  "readOnly": true
                },
                "avatar_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "URL for the avatar image (may be generic)",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_totp": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsTotp",
                  "description": "Two-factor credentials",
                  "readOnly": true
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Account has been disabled"
                },
                "email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "EMail address",
                  "readOnly": true
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "credentials_ldap": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLDAP",
                  "description": "LDAP credentials",
                  "readOnly": true
                },
                "last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Last name"
                },
                "sessions": {
                  "description": "Active sessions",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Session"
                  },
                  "readOnly": true
                },
                "ui_state": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "home_space_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "ID string for user's home space"
                },
                "models_dir_validated": {
                  "x-looker-nullable": true,
                  "type": "boolean",
                  "description": "User's dev workspace has been checked for presence of applicable production projects"
                },
                "embed_group_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                  "readOnly": true,
                  "format": "int64"
                },
                "looker_versions": {
                  "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "credentials_google": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsGoogle",
                  "description": "Google auth credentials",
                  "readOnly": true
                },
                "personal_space_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "ID of user's personal space",
                  "readOnly": true,
                  "format": "int64"
                },
                "credentials_embed": {
                  "description": "Embed credentials",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsEmbed"
                  },
                  "readOnly": true
                },
                "credentials_looker_openid": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/CredentialsLookerOpenid",
                  "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "role_ids": {
                  "description": "Array of ids of the roles for this user",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Specified user."
          }
        },
        "description": "### Get information about the user with a specific id.\n\nIf the caller is an admin or the caller is the user being specified, then full user information will\nbe returned. Otherwise, a minimal 'public' variant of the user information will be returned. This contains\nThe user name and avatar url, but no sensitive information.\n",
        "summary": "Get User by Id",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "user",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/homepage_sections/{homepage_section_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was deleted.",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "homepage_items": {
                  "description": "Items in the homepage section",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageItem"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was last updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "is_header": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this a header section (has no items)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "detail_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A URL pointing to a page showing further information about the content in the section.",
                  "readOnly": true
                },
                "homepage_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id reference to parent homepage",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of row"
                },
                "item_order": {
                  "description": "ids of the homepage items in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage section"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a homepage section definition.\n",
        "summary": "Update Homepage section",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage section",
            "required": true,
            "name": "homepage_section_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Homepage section",
            "schema": {
              "properties": {
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was deleted.",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "homepage_items": {
                  "description": "Items in the homepage section",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageItem"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was last updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "is_header": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this a header section (has no items)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "detail_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A URL pointing to a page showing further information about the content in the section.",
                  "readOnly": true
                },
                "homepage_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id reference to parent homepage",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of row"
                },
                "item_order": {
                  "description": "ids of the homepage items in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_homepage_section",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a homepage section.\n",
        "summary": "Delete Homepage section",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage_section",
            "required": true,
            "name": "homepage_section_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_homepage_section",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was deleted.",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "homepage_items": {
                  "description": "Items in the homepage section",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageItem"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Time at which this section was last updated.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "is_header": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Is this a header section (has no items)",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "detail_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A URL pointing to a page showing further information about the content in the section.",
                  "readOnly": true
                },
                "homepage_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id reference to parent homepage",
                  "format": "int64"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of row"
                },
                "item_order": {
                  "description": "ids of the homepage items in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage section"
          }
        },
        "description": "### Get information about a homepage section.\n",
        "summary": "Get Homepage section",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage section",
            "required": true,
            "name": "homepage_section_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "homepage_section",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/integrations/{integration_id}/test": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "success": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not the test was successful",
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "A message representing the results of the test.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Test Result"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "Tests the integration to make sure all the settings are working.",
        "summary": "Test integration",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of Integration",
            "required": true,
            "name": "integration_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "test_integration",
        "tags": [
          "Integration"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/legacy_features": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "disallowed_as_of_version": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Looker version where this feature became a legacy feature",
                    "readOnly": true
                  },
                  "enabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this feature is currently enabled",
                    "readOnly": true
                  },
                  "enabled_locally": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this feature has been enabled by a user"
                  },
                  "approximate_disable_date": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Approximate date that this feature will be automatically disabled.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "end_of_life_version": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Future Looker version where this feature will be removed",
                    "readOnly": true
                  },
                  "approximate_end_of_life_date": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Approximate date that this feature will be removed.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description",
                    "readOnly": true
                  },
                  "disable_on_upgrade_to_version": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Looker version where this feature will be automatically disabled",
                    "readOnly": true
                  },
                  "documentation_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for documentation about this feature",
                    "readOnly": true
                  },
                  "has_disabled_on_upgrade": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether this legacy feature may have been automatically disabled when upgrading to the current version.",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Legacy Feature"
          }
        },
        "description": "### Get all legacy features.\n",
        "summary": "Get All Legacy Features",
        "x-looker-activity-type": "non_query",
        "operationId": "all_legacy_features",
        "tags": [
          "Config"
        ],
        "x-looker-status": "stable"
      }
    },
    "/users/search/names/{pattern}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "first_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "First name"
                  },
                  "credentials_api3": {
                    "description": "API 3 credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsApi3"
                    },
                    "readOnly": true
                  },
                  "presumed_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker",
                    "readOnly": true
                  },
                  "credentials_saml": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsSaml",
                    "description": "Saml auth credentials",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "group_ids": {
                    "description": "Array of ids of the groups for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  },
                  "locale": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
                  },
                  "verified_looker_employee": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
                    "readOnly": true
                  },
                  "credentials_email": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsEmail",
                    "description": "Email/Password login credentials",
                    "readOnly": true
                  },
                  "roles_externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
                    "readOnly": true
                  },
                  "credentials_oidc": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsOIDC",
                    "description": "OpenID Connect auth credentials",
                    "readOnly": true
                  },
                  "display_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Full name for display (available only if both first_name and last_name are set)",
                    "readOnly": true
                  },
                  "avatar_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "URL for the avatar image (may be generic)",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_totp": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsTotp",
                    "description": "Two-factor credentials",
                    "readOnly": true
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Account has been disabled"
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "EMail address",
                    "readOnly": true
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "credentials_ldap": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLDAP",
                    "description": "LDAP credentials",
                    "readOnly": true
                  },
                  "last_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Last name"
                  },
                  "sessions": {
                    "description": "Active sessions",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Session"
                    },
                    "readOnly": true
                  },
                  "ui_state": {
                    "x-looker-nullable": true,
                    "type": "object",
                    "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "home_space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID string for user's home space"
                  },
                  "models_dir_validated": {
                    "x-looker-nullable": true,
                    "type": "boolean",
                    "description": "User's dev workspace has been checked for presence of applicable production projects"
                  },
                  "embed_group_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "looker_versions": {
                    "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "credentials_google": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsGoogle",
                    "description": "Google auth credentials",
                    "readOnly": true
                  },
                  "personal_space_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of user's personal space",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_embed": {
                    "description": "Embed credentials",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CredentialsEmbed"
                    },
                    "readOnly": true
                  },
                  "credentials_looker_openid": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/CredentialsLookerOpenid",
                    "description": "LookerOpenID credentials. Used for login by Looker Analysts",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "role_ids": {
                    "description": "Array of ids of the roles for this user",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Matching users."
          }
        },
        "description": "### Search for user accounts by name\n\nReturns all user accounts where `first_name` OR `last_name` OR `email` field values match a pattern.\nThe pattern can contain `%` and `_` wildcards as in SQL LIKE expressions.\n\nAny additional search params will be combined into a logical AND expression.\n",
        "summary": "Search User Names",
        "parameters": [
          {
            "name": "pattern",
            "description": "Pattern to match",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Include only these fields in the response",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Return only page N of paginated results",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Return N rows of data per page",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Match User Id",
            "required": false,
            "name": "id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "first_name",
            "description": "Match First name",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "last_name",
            "description": "Match Last name",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "verified_looker_employee",
            "description": "Match Verified Looker employee",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "email",
            "description": "Match Email Address",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "is_disabled",
            "description": "Include or exclude disabled accounts in the results",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_users_names",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/merge_queries/{merge_query_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "total": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Total"
                },
                "result_maker_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Unique to get results",
                  "readOnly": true,
                  "format": "int64"
                },
                "source_queries": {
                  "description": "Source Queries defining the results to be merged.",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MergeQuerySourceQuery"
                  }
                },
                "column_limit": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Column Limit"
                },
                "dynamic_fields": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Dynamic Fields"
                },
                "pivots": {
                  "description": "Pivots",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "vis_config": {
                  "x-looker-nullable": true,
                  "type": "object",
                  "description": "Visualization Config",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "sorts": {
                  "description": "Sorts",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Merge Query"
          }
        },
        "description": "### Get Merge Query\n\nReturns a merge query object given its id.\n",
        "summary": "Get Merge Query",
        "parameters": [
          {
            "name": "merge_query_id",
            "description": "Merge Query Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "merge_query",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/permission_sets/{permission_set_id}": {
      "patch": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "permissions": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of PermissionSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Permission Set"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          }
        },
        "description": "### Update information about the permission set with a specific id.\n",
        "summary": "Update Permission Set",
        "parameters": [
          {
            "format": "int64",
            "description": "id of permission set",
            "required": true,
            "name": "permission_set_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Permission Set",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "permissions": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of PermissionSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_permission_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Can't Be Modified"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete the permission set with a specific id.\n",
        "summary": "Delete Permission Set",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of permission set",
            "required": true,
            "name": "permission_set_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_permission_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "permissions": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of PermissionSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Permission Set"
          }
        },
        "description": "### Get information about the permission set with a specific id.\n",
        "summary": "Get Permission Set",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of permission set",
            "required": true,
            "name": "permission_set_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "permission_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/permission_sets": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "permissions": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of PermissionSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Permission Set"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a permission set with the specified information. Permission sets are used by Roles.\n",
        "summary": "Create Permission Set",
        "parameters": [
          {
            "name": "body",
            "description": "Permission Set",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "permissions": {
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "built_in": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of PermissionSet"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "all_access": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_permission_set",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "permissions": {
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "built_in": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of PermissionSet"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "all_access": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Permission Set"
          }
        },
        "description": "### Get information about all permission sets.\n",
        "summary": "Get All Permission Sets",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_permission_sets",
        "tags": [
          "Role"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/sessions": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "city": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "City component of user location (derived from IP address)",
                    "readOnly": true
                  },
                  "browser": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's browser type",
                    "readOnly": true
                  },
                  "sudo_user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Actual user in the case when this session represents one user sudo'ing as another",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "credentials_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type of credentials used for logging in this session",
                    "readOnly": true
                  },
                  "state": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "State component of user location (derived from IP address)",
                    "readOnly": true
                  },
                  "extended_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time when this session was last extended by the user",
                    "readOnly": true
                  },
                  "operating_system": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's Operating System",
                    "readOnly": true
                  },
                  "country": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Country component of user location (derived from IP address)",
                    "readOnly": true
                  },
                  "ip_address": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "IP address of user when this session was initiated",
                    "readOnly": true
                  },
                  "expires_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time when this session will expire",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "extended_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times this session was extended",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time when this session was initiated",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Web Login Session"
          }
        },
        "description": "### Web login session for the specified user.",
        "summary": "Get All Web Login Sessions",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_user_sessions",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/saml_config": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "idp_audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Certificate (provided by IdP)"
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from Saml"
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Url (provided by IdP)"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a Saml config test",
                  "readOnly": true
                },
                "allowed_clock_drift": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
                  "format": "int64"
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable Saml authentication for the server"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeWrite"
                  }
                },
                "bypass_login_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "groups_member_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Issuer (provided by IdP)"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "New state for SAML Configuration."
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update the SAML configuration.\n\nConfiguring SAML impacts authentication for all users. This configuration should be done carefully.\n\nOnly Looker administrators can read and update the SAML configuration.\n\nSAML is enabled or disabled for Looker using the **enabled** field.\n\nIt is **highly** recommended that any SAML setting changes be tested using the APIs below before being set globally.\n",
        "summary": "Update SAML Configuration",
        "parameters": [
          {
            "name": "body",
            "description": "SAML Config",
            "schema": {
              "properties": {
                "idp_audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Certificate (provided by IdP)"
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from Saml"
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Url (provided by IdP)"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a Saml config test",
                  "readOnly": true
                },
                "allowed_clock_drift": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
                  "format": "int64"
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable Saml authentication for the server"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeWrite"
                  }
                },
                "bypass_login_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "groups_member_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Issuer (provided by IdP)"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_saml_config",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "idp_audience": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
                },
                "modified_by": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "User id of user who last modified this config",
                  "readOnly": true
                },
                "default_new_user_roles": {
                  "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "readOnly": true
                },
                "auth_requires_role": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
                },
                "user_attribute_map_email": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate email address field"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "idp_cert": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Certificate (provided by IdP)"
                },
                "set_roles_from_groups": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Set user roles in Looker based on groups from Saml"
                },
                "idp_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Url (provided by IdP)"
                },
                "user_attribute_map_first_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate first name"
                },
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "groups_finder_type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
                },
                "new_user_migration_types": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
                },
                "test_slug": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Slug to identify configurations that are created in order to run a Saml config test",
                  "readOnly": true
                },
                "allowed_clock_drift": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
                  "format": "int64"
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Enable/Disable Saml authentication for the server"
                },
                "groups_with_role_ids": {
                  "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupWrite"
                  }
                },
                "modified_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When this config was last modified",
                  "readOnly": true
                },
                "user_attribute_map_last_name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate last name"
                },
                "user_attributes_with_ids": {
                  "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeWrite"
                  }
                },
                "bypass_login_page": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
                },
                "groups": {
                  "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlGroupRead"
                  },
                  "readOnly": true
                },
                "default_new_user_group_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "default_new_user_role_ids": {
                  "x-looker-write-only": true,
                  "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "groups_member_value": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
                },
                "default_new_user_groups": {
                  "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  },
                  "readOnly": true
                },
                "alternate_email_login_allowed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
                },
                "user_attributes": {
                  "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamlUserAttributeRead"
                  },
                  "readOnly": true
                },
                "groups_attribute": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
                },
                "idp_issuer": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Identity Provider Issuer (provided by IdP)"
                }
              },
              "x-looker-status": "stable"
            },
            "description": "SAML Configuration."
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          }
        },
        "description": "### Get the SAML configuration.\n\nLooker can be optionally configured to authenticate users against a SAML authentication server.\nSAML setup requires coordination with an administrator of that server.\n\nOnly Looker administrators can read and update the SAML configuration.\n\nConfiguring SAML impacts authentication for all users. This configuration should be done carefully.\n\nLooker maintains a single SAML configuation. It can be read and updated.       Updates only succeed if the new state will be valid (in the sense that all required fields are populated);       it is up to you to ensure that the configuration is appropriate and correct).\n\nSAML is enabled or disabled for Looker using the **enabled** field.\n",
        "summary": "Get SAML Configuration",
        "x-looker-activity-type": "non_query",
        "operationId": "saml_config",
        "tags": [
          "Auth"
        ],
        "x-looker-status": "stable"
      }
    },
    "/users/{user_id}/credentials_api3": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "API key client_id",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "description": "API 3 Credential"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### API 3 login information for the specified user. This is for the newer API keys that can be added for any user.",
        "summary": "Create API 3 Credential",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "API 3 Credential",
            "schema": {
              "properties": {
                "url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Link to get this item",
                  "readOnly": true,
                  "format": "uri"
                },
                "is_disabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Has this credential been disabled?",
                  "readOnly": true
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timestamp for the creation of this credential",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "type": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Short name for the type of this kind of credential",
                  "readOnly": true
                },
                "client_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "API key client_id",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "create_user_credentials_api3",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Link to get this item",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "is_disabled": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Has this credential been disabled?",
                    "readOnly": true
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Timestamp for the creation of this credential",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Short name for the type of this kind of credential",
                    "readOnly": true
                  },
                  "client_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "API key client_id",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "API 3 Credential"
          }
        },
        "description": "### API 3 login information for the specified user. This is for the newer API keys that can be added for any user.",
        "summary": "Get All API 3 Credentials",
        "parameters": [
          {
            "format": "int64",
            "description": "id of user",
            "required": true,
            "name": "user_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_user_credentials_api3s",
        "tags": [
          "User"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/content_metadata": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of Parent Content",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "content_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Content Type (\"dashboard\", \"look\", or \"space\")",
                    "readOnly": true
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of associated look when content_type is \"look\"",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name or title of underlying content",
                    "readOnly": true
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of associated dashboard when content_type is \"dashboard\"",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Content Slug",
                    "readOnly": true
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of associated space when content_type is \"space\"",
                    "readOnly": true
                  },
                  "inherits": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether content inherits its access levels from parent"
                  },
                  "inheriting_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of Inherited Content",
                    "readOnly": true,
                    "format": "int64"
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "Content Metadata"
          }
        },
        "description": "### Get information about all content metadata in a space.\n",
        "summary": "Get All Content Metadatas",
        "parameters": [
          {
            "format": "int64",
            "description": "Parent space of content.",
            "required": true,
            "name": "parent_id",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_content_metadatas",
        "tags": [
          "Content"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/groups/{group_id}/groups": {
      "post": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "include_by_default": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "New users are added to this group by default",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "external_group_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "External Id group if embed group",
                  "readOnly": true
                },
                "user_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Number of users included in this group",
                  "readOnly": true,
                  "format": "int64"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of group"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "contains_current_user": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Currently logged in user is group member",
                  "readOnly": true
                },
                "can_add_to_content_metadata": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group can be used in content access controls"
                },
                "externally_managed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Group membership controlled outside of Looker",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable"
            },
            "description": "Added group."
          },
          "403": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Permission Denied"
          }
        },
        "description": "### Adds a new group to a group.\n",
        "summary": "Add a Group to Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Group id to add",
            "schema": {
              "properties": {
                "group_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of group",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "stable"
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "add_group_group",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "include_by_default": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "New users are added to this group by default",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "external_group_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "External Id group if embed group",
                    "readOnly": true
                  },
                  "user_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of users included in this group",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Name of group"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "contains_current_user": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Currently logged in user is group member",
                    "readOnly": true
                  },
                  "can_add_to_content_metadata": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group can be used in content access controls"
                  },
                  "externally_managed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Group membership controlled outside of Looker",
                    "readOnly": true
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "All groups in group."
          }
        },
        "description": "### Get information about all the groups in a group\n",
        "summary": "Get All Groups in Group",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of group",
            "required": true,
            "name": "group_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_group_groups",
        "tags": [
          "Group"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "stable"
      }
    },
    "/internal_help_resources_enabled": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "If true and internal help resources content is not blank then the link for internal help resources will be show in the help menu and the content displayed within Looker"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Internal Help Resources"
          }
        },
        "description": "### Get and set the options for internal help resources\n",
        "summary": "Get Internal Help Resources",
        "x-looker-activity-type": "non_query",
        "operationId": "internal_help_resources",
        "tags": [
          "Config"
        ],
        "x-looker-status": "beta"
      }
    },
    "/folders/{folder_id}/looks": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "public": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Is Public"
                  },
                  "public_slug": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Slug",
                    "readOnly": true
                  },
                  "image_embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Image Embed Url",
                    "readOnly": true
                  },
                  "description": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Description"
                  },
                  "user": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/UserIdOnly",
                    "description": "User",
                    "readOnly": true
                  },
                  "is_run_on_load": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "auto-run query when Look viewed"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "integer",
                    "description": "Unique Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "space": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/SpaceBase",
                    "description": "Space of this Look",
                    "readOnly": true
                  },
                  "content_favorite_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Content Favorite Id",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_accessed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was last accessed by any user",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "deleted": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether or not a look is 'soft' deleted."
                  },
                  "url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Url",
                    "readOnly": true
                  },
                  "google_spreadsheet_formula": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Google Spreadsheet Formula",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "created_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was created.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "last_updater_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that last updated the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "deleter_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of User that deleted the look.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "model": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookModel",
                    "description": "Model",
                    "readOnly": true
                  },
                  "excel_file_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Excel File Url",
                    "readOnly": true
                  },
                  "public_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Public Url",
                    "readOnly": true
                  },
                  "updated_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was updated.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "space_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Space Id"
                  },
                  "query": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/Query",
                    "description": "Query",
                    "readOnly": true
                  },
                  "last_viewed_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time last viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Look Title"
                  },
                  "short_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Short Url",
                    "readOnly": true
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Query Id",
                    "format": "int64"
                  },
                  "deleted_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time that the Look was deleted.",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "view_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times viewed in the Looker web UI",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "embed_url": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embed Url",
                    "readOnly": true
                  },
                  "favorite_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of times favorited",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id",
                    "format": "int64"
                  }
                },
                "x-looker-status": "stable"
              }
            },
            "description": "Looks"
          }
        },
        "description": "### Get the looks in a folder",
        "summary": "Get Folder Looks",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder_looks",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders": {
      "post": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed shared folder",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed users folder",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root shared folder",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root user folder",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is a user's personal folder",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is descendant of a user's personal folder",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is an embed folder",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "description": "Folder"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Create a folder with specified information.\n\nCaller must have permission to edit the parent folder and to create folders, otherwise the request\nreturns 404 Not Found.\n",
        "summary": "Create Folder",
        "parameters": [
          {
            "name": "body",
            "description": "Folder",
            "schema": {
              "properties": {
                "is_embed_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed shared folder",
                  "readOnly": true
                },
                "is_embed_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root embed users folder",
                  "readOnly": true
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of content metadata",
                  "readOnly": true,
                  "format": "int64"
                },
                "external_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                  "readOnly": true
                },
                "is_shared_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root shared folder",
                  "readOnly": true
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "is_users_root": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is the root user folder",
                  "readOnly": true
                },
                "creator_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id of Creator",
                  "readOnly": true,
                  "format": "int64"
                },
                "dashboards": {
                  "description": "Dashboards",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardBase"
                  },
                  "readOnly": true
                },
                "looks": {
                  "description": "Looks",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LookWithDashboards"
                  },
                  "readOnly": true
                },
                "child_count": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Children Count",
                  "readOnly": true,
                  "format": "int64"
                },
                "is_personal": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is a user's personal folder",
                  "readOnly": true
                },
                "is_personal_descendant": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is descendant of a user's personal folder",
                  "readOnly": true
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Unique Name"
                },
                "is_embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Folder is an embed folder",
                  "readOnly": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "parent_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of Parent"
                }
              },
              "x-looker-status": "beta",
              "required": [
                "name",
                "parent_id"
              ]
            },
            "in": "body",
            "required": false
          }
        ],
        "operationId": "create_folder",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed shared folder",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed users folder",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root shared folder",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root user folder",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is a user's personal folder",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is descendant of a user's personal folder",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is an embed folder",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Folder"
          }
        },
        "description": "### Get information about all folders.",
        "summary": "Get All Folders",
        "parameters": [
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "all_folders",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/query_tasks/{query_task_id}": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "result_source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Source of the results of the query.",
                  "readOnly": true
                },
                "rebuild_pdts": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Rebuild PDTS used in query."
                },
                "force_production": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Use production models to run query (even is user is in dev mode)."
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of dashboard associated with query."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "path_prefix": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Prefix to use for drill links."
                },
                "query": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/Query",
                  "description": "Query",
                  "readOnly": true
                },
                "cache_only": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Retrieve any results from cache even if the results have expired."
                },
                "cache_key": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "cache key used to cache query.",
                  "readOnly": true
                },
                "generate_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "whether or not to generate links in the query response."
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of query",
                  "format": "int64"
                },
                "result_format": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The data format of the query results.",
                  "readOnly": true
                },
                "status": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Status of query task."
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of look associated with query.",
                  "format": "int64"
                },
                "cache": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to use the cache"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "runtime": {
                  "x-looker-nullable": true,
                  "type": "number",
                  "description": "Runtime of prior queries.",
                  "readOnly": true,
                  "format": "float"
                },
                "source": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Source of query task."
                },
                "server_table_calcs": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to run table calculations on the server"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "query_task"
          }
        },
        "description": "Returns information about a Query Task.\n\nQuery Tasks are generated by running queries asynchronously. They are represented by a GUID returned\nfrom one of the async query endpoints.\n",
        "summary": "Get Async Query Info",
        "parameters": [
          {
            "name": "query_task_id",
            "description": "ID of the Query Task",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "query_task",
        "tags": [
          "Query"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{root_project_id}/credential/{credential_id}": {
      "put": {
        "responses": {
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          },
          "200": {
            "schema": {
              "properties": {
                "root_project_id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Root project Id",
                  "readOnly": true
                },
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "remote_url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Git remote repository url",
                  "readOnly": true,
                  "format": "uri"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "ssh_public_key": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public deploy key for SSH authentication."
                },
                "is_configured": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the credentials have been configured for the Git Repository.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Repository Credential"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Resource Already Exists"
          }
        },
        "description": "### Configure Repository Credential for a remote dependency\n\nAdmin required.\n\n`root_project_id` is required.\n`credential_id` is required.\n\n",
        "summary": "Create Repository Credential",
        "parameters": [
          {
            "name": "root_project_id",
            "description": "Root Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "credential_id",
            "description": "Credential Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "Remote Project Information",
            "schema": {
              "properties": {
                "root_project_id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Root project Id",
                  "readOnly": true
                },
                "git_password": {
                  "description": "(Write-Only) Git password for HTTPS authentication.",
                  "x-looker-nullable": true,
                  "type": "string",
                  "x-looker-write-only": true
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "remote_url": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Git remote repository url",
                  "readOnly": true,
                  "format": "uri"
                },
                "git_username": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Git username for HTTPS authentication."
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "ssh_public_key": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Public deploy key for SSH authentication."
                },
                "is_configured": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the credentials have been configured for the Git Repository.",
                  "readOnly": true
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_repository_credential",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Repository Credential for a remote dependency\n\nAdmin required.\n\n`root_project_id` is required.\n`credential_id` is required.\n",
        "summary": "Delete Repository Credential",
        "parameters": [
          {
            "name": "root_project_id",
            "description": "Root Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "credential_id",
            "description": "Credential Id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "delete_repository_credential",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/dashboards/{dashboard_id}/dashboard_elements": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "note_state": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note State"
                  },
                  "title_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile title"
                  },
                  "lookml_link_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "LookML link ID",
                    "readOnly": true
                  },
                  "refresh_interval": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Refresh Interval"
                  },
                  "merge_result_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "ID of merge result"
                  },
                  "alert_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Count of Alerts associated to a dashboard element",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "body_text_as_html": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile body text as Html",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "look": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/LookWithQuery",
                    "description": "Look",
                    "readOnly": true
                  },
                  "note_text_as_html": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note Text as Html",
                    "readOnly": true
                  },
                  "edit_uri": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                    "readOnly": true,
                    "format": "uri"
                  },
                  "result_maker": {
                    "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                    "description": "Data about the result maker.",
                    "x-looker-nullable": true
                  },
                  "result_maker_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "ID of the ResultMakerLookup entry.",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "title_hidden": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Whether title is hidden"
                  },
                  "body_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile body text"
                  },
                  "dashboard_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Dashboard"
                  },
                  "query": {
                    "x-looker-nullable": true,
                    "$ref": "#/definitions/Query",
                    "description": "Query",
                    "readOnly": true
                  },
                  "subtitle_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Text tile subtitle text"
                  },
                  "title": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Title of dashboard element"
                  },
                  "query_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id Of Query",
                    "format": "int64"
                  },
                  "refresh_interval_to_i": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Refresh Interval as integer",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "look_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id Of Look"
                  },
                  "note_display": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note Display"
                  },
                  "type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Type"
                  },
                  "note_text": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Note Text"
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "DashboardElement"
          }
        },
        "description": "### Get information about all the dashboard elements on a dashboard with a specific id.",
        "summary": "Get All DashboardElements",
        "parameters": [
          {
            "name": "dashboard_id",
            "description": "Id of dashboard",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "dashboard_dashboard_elements",
        "tags": [
          "Dashboard"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/folders/{folder_id}/children/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "is_embed_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed shared folder",
                    "readOnly": true
                  },
                  "is_embed_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root embed users folder",
                    "readOnly": true
                  },
                  "content_metadata_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Id of content metadata",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "external_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
                    "readOnly": true
                  },
                  "is_shared_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root shared folder",
                    "readOnly": true
                  },
                  "id": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Unique Id",
                    "readOnly": true
                  },
                  "is_users_root": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is the root user folder",
                    "readOnly": true
                  },
                  "creator_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User Id of Creator",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "dashboards": {
                    "description": "Dashboards",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DashboardBase"
                    },
                    "readOnly": true
                  },
                  "looks": {
                    "description": "Looks",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/LookWithDashboards"
                    },
                    "readOnly": true
                  },
                  "child_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Children Count",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "is_personal": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is a user's personal folder",
                    "readOnly": true
                  },
                  "is_personal_descendant": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is descendant of a user's personal folder",
                    "readOnly": true
                  },
                  "name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Unique Name"
                  },
                  "is_embed": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "Folder is an embed folder",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "parent_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Id of Parent"
                  }
                },
                "x-looker-status": "beta",
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            },
            "description": "Folders"
          }
        },
        "description": "### Search the children of a folder",
        "summary": "Search Folder Children",
        "parameters": [
          {
            "name": "folder_id",
            "description": "Id of folder",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "name",
            "description": "Match folder name.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "folder_children_search",
        "tags": [
          "Folder"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/user_login_lockouts/search": {
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "full_name": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "User's name",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "user_id": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "User ID",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "remote_id": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Remote ID of user if using LDAP",
                    "readOnly": true
                  },
                  "lockout_at": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Time when lockout was triggered",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "auth_type": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Authentication method for login failures",
                    "readOnly": true
                  },
                  "fail_count": {
                    "x-looker-nullable": true,
                    "type": "integer",
                    "description": "Number of failures that triggered the lockout",
                    "readOnly": true,
                    "format": "int64"
                  },
                  "ip": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "IP address of most recent failed attempt",
                    "readOnly": true
                  },
                  "key": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Hash of user's client id",
                    "readOnly": true
                  },
                  "email": {
                    "x-looker-nullable": true,
                    "type": "string",
                    "description": "Email address associated with the user's account",
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "User Login Lockout"
          }
        },
        "description": "### Search currently locked-out users.\n",
        "summary": "Search User Login Lockouts",
        "parameters": [
          {
            "name": "fields",
            "description": "Include only these fields in the response",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "format": "int64",
            "description": "Return only page N of paginated results",
            "required": false,
            "name": "page",
            "type": "integer",
            "in": "query"
          },
          {
            "format": "int64",
            "description": "Return N rows of data per page",
            "required": false,
            "name": "per_page",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sorts",
            "description": "Fields to sort by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "auth_type",
            "description": "Auth type user is locked out for (email, ldap, totp, api)",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "full_name",
            "description": "Match name",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "email",
            "description": "Match email",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "remote_id",
            "description": "Match remote LDAP ID",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "filter_or",
            "description": "Combine given search criteria in a boolean OR expression",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "search_user_login_lockouts",
        "tags": [
          "Auth"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/homepages/{homepage_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of homepage"
                },
                "homepage_sections": {
                  "description": "Sections of the homepage",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageSection"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of last homepage update",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "primary_homepage": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the homepage is the primary homepage or not",
                  "readOnly": true
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of homepage"
                },
                "section_order": {
                  "description": "ids of the homepage sections in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage deletion",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage creatopm",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated content_metadata record",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of homepage creator",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a homepage definition.\n",
        "summary": "Update Homepage",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage",
            "required": true,
            "name": "homepage_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Homepage",
            "schema": {
              "properties": {
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of homepage"
                },
                "homepage_sections": {
                  "description": "Sections of the homepage",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageSection"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of last homepage update",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "primary_homepage": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the homepage is the primary homepage or not",
                  "readOnly": true
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of homepage"
                },
                "section_order": {
                  "description": "ids of the homepage sections in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage deletion",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage creatopm",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated content_metadata record",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of homepage creator",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "update_homepage",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a homepage.\n",
        "summary": "Delete Homepage",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage",
            "required": true,
            "name": "homepage_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_homepage",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "description": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Description of homepage"
                },
                "homepage_sections": {
                  "description": "Sections of the homepage",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/HomepageSection"
                  },
                  "readOnly": true
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of last homepage update",
                  "readOnly": true,
                  "format": "date-time"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "string",
                  "description": "Unique Id",
                  "readOnly": true
                },
                "primary_homepage": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the homepage is the primary homepage or not",
                  "readOnly": true
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title of homepage"
                },
                "section_order": {
                  "description": "ids of the homepage sections in the order they should be displayed",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "deleted_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage deletion",
                  "format": "date-time"
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date of homepage creatopm",
                  "readOnly": true,
                  "format": "date-time"
                },
                "content_metadata_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of associated content_metadata record",
                  "readOnly": true,
                  "format": "int64"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User id of homepage creator",
                  "readOnly": true,
                  "format": "int64"
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Homepage"
          }
        },
        "description": "### Get information about a homepage.\n",
        "summary": "Get Homepage",
        "parameters": [
          {
            "format": "int64",
            "description": "Id of homepage",
            "required": true,
            "name": "homepage_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "homepage",
        "tags": [
          "Homepage"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    },
    "/scheduled_plans/{scheduled_plan_id}": {
      "patch": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Scheduled Plan"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Update a Scheduled Plan\n\nAdmins can update other users' Scheduled Plans.\n\nNote: Any scheduled plan destinations specified in an update will **replace** all scheduled plan destinations\ncurrently defined for the scheduled plan.\n\nFor Example: If a scheduled plan has destinations A, B, and C, and you call update on this scheduled plan\nspecifying only B in the destinations, then destinations A and C will be deleted by the update.\n\nScheduled plan destinations must specify the data format to produce and send to the destination\n\nScheduled Plan Destination formats:\n\n| format | Description\n| :-----------: | :--- |\n| json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.\n| json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query\n| inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.\n| csv | Comma separated values with a header\n| txt | Tab separated values with a header\n| html | Simple html\n| xlsx | MS Excel spreadsheet\n| wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document\n| assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document\n| wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image\n||\n\nValid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.\n\n\n",
        "summary": "Update Scheduled Plan",
        "parameters": [
          {
            "format": "int64",
            "description": "Scheduled Plan Id",
            "required": true,
            "name": "scheduled_plan_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "body",
            "description": "Scheduled Plan",
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "in": "body",
            "required": true
          }
        ],
        "operationId": "update_scheduled_plan",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      },
      "delete": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "204": {
            "schema": {
              "type": "string"
            },
            "description": "Successfully deleted."
          }
        },
        "description": "### Delete a Scheduled Plan\n\nNormal users can only delete their own scheduled plans.\nAdmins can delete other users' scheduled plans.\nThis delete cannot be undone.\n",
        "summary": "Delete Scheduled Plan",
        "parameters": [
          {
            "format": "int64",
            "description": "Scheduled Plan Id",
            "required": true,
            "name": "scheduled_plan_id",
            "type": "integer",
            "in": "path"
          }
        ],
        "operationId": "delete_scheduled_plan",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      },
      "get": {
        "responses": {
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "200": {
            "schema": {
              "properties": {
                "user": {
                  "x-looker-nullable": true,
                  "$ref": "#/definitions/UserPublic",
                  "description": "User who owns this ScheduledPlan",
                  "readOnly": true
                },
                "enabled": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the ScheduledPlan is enabled"
                },
                "require_no_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if the dashboard look does not return results"
                },
                "require_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if running the dashboard or look returns results"
                },
                "dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a dashboard",
                  "format": "int64"
                },
                "lookml_dashboard_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Id of a LookML dashboard"
                },
                "crontab": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Vixie-Style crontab specification when to run"
                },
                "id": {
                  "x-looker-nullable": false,
                  "type": "integer",
                  "description": "Unique Id",
                  "readOnly": true,
                  "format": "int64"
                },
                "run_once": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the plan in question should only be run once (usually for testing)"
                },
                "include_links": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether links back to Looker should be included in this ScheduledPlan"
                },
                "embed": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether this schedule is in an embed context or not"
                },
                "name": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name"
                },
                "can": {
                  "x-looker-nullable": false,
                  "type": "object",
                  "description": "Operations the current user is able to perform on this object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "created_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was created",
                  "readOnly": true,
                  "format": "date-time"
                },
                "dashboard_filters": {
                  "x-looker-deprecated": true,
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "(DEPRECATED) Alias for filters_string field"
                },
                "require_change": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Delivery should occur if data have changed since the last run"
                },
                "color_theme": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Color scheme of the dashboard if applicable"
                },
                "pdf_landscape": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether the paper should be landscape"
                },
                "long_tables": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether or not to expand table vis to full length"
                },
                "next_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan will next run (null if running once)",
                  "readOnly": true,
                  "format": "date-time"
                },
                "last_run_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "When the ScheduledPlan was last run",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Date and time when ScheduledPlan was last updated",
                  "readOnly": true,
                  "format": "date-time"
                },
                "run_as_recipient": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
                },
                "send_all_results": {
                  "x-looker-nullable": false,
                  "type": "boolean",
                  "description": "Will run an unlimited query and send all results."
                },
                "title": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Title",
                  "readOnly": true
                },
                "pdf_paper_size": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "The size of paper a PDF should be rendered for"
                },
                "query_id": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query id"
                },
                "user_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "User Id which owns this ScheduledPlan",
                  "format": "int64"
                },
                "look_id": {
                  "x-looker-nullable": true,
                  "type": "integer",
                  "description": "Id of a look",
                  "format": "int64"
                },
                "timezone": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
                },
                "filters_string": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Query string to run look or dashboard with"
                },
                "datagroup": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
                },
                "scheduled_plan_destination": {
                  "description": "Scheduled plan destinations",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ScheduledPlanDestination"
                  }
                }
              },
              "x-looker-status": "beta"
            },
            "description": "Scheduled Plan"
          }
        },
        "description": "### Get Information About a Scheduled Plan\n\nAdmins can fetch information about other users' Scheduled Plans.\n",
        "summary": "Get Scheduled Plan",
        "parameters": [
          {
            "format": "int64",
            "description": "Scheduled Plan Id",
            "required": true,
            "name": "scheduled_plan_id",
            "type": "integer",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Requested fields.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "scheduled_plan",
        "tags": [
          "ScheduledPlan"
        ],
        "x-looker-activity-type": "db_query",
        "x-looker-status": "beta"
      }
    },
    "/projects/{project_id}/lookml_tests/run": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "model_name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of model containing this test.",
                    "readOnly": true
                  },
                  "can": {
                    "x-looker-nullable": false,
                    "type": "object",
                    "description": "Operations the current user is able to perform on this object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "test_name": {
                    "x-looker-nullable": false,
                    "type": "string",
                    "description": "Name of this test.",
                    "readOnly": true
                  },
                  "success": {
                    "x-looker-nullable": false,
                    "type": "boolean",
                    "description": "True if this test passsed without errors.",
                    "readOnly": true
                  },
                  "warnings": {
                    "description": "A list of any warnings encountered by the test.",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ProjectError"
                    },
                    "readOnly": true
                  },
                  "errors": {
                    "description": "A list of any errors encountered by the test.",
                    "x-looker-nullable": true,
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ProjectError"
                    },
                    "readOnly": true
                  }
                },
                "x-looker-status": "beta"
              }
            },
            "description": "LookML Test Results"
          },
          "400": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "properties": {
                "documentation_url": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Documentation link",
                  "readOnly": true,
                  "format": "uri"
                },
                "errors": {
                  "description": "Error detail array",
                  "x-looker-nullable": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidationErrorDetail"
                  },
                  "readOnly": true
                },
                "message": {
                  "x-looker-nullable": true,
                  "type": "string",
                  "description": "Error details",
                  "readOnly": true
                }
              },
              "x-looker-status": "stable",
              "required": [
                "message",
                "documentation_url"
              ]
            },
            "description": "Validation Error"
          }
        },
        "description": "### Run LookML Tests\n\nRuns all tests in the project, optionally filtered by file, test, and/or model.\n",
        "summary": "Run LookML Test",
        "parameters": [
          {
            "name": "project_id",
            "description": "Project Id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "file_id",
            "description": "File Name",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "test",
            "description": "Test Name",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "model",
            "description": "Model Name",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "operationId": "run_lookml_test",
        "tags": [
          "Project"
        ],
        "x-looker-activity-type": "non_query",
        "x-looker-status": "beta"
      }
    }
  },
  "info": {
    "version": "3.1.0",
    "description": "### Authorization\n\nThe Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can\ncreate API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **/login** endpoint to\nobtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests.\nFor details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)\n\n### Client SDKs\n\nThe Looker API is a RESTful system that should be usable by any programming language capable of making\nHTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger\nJSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available\nas an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)\n\n### Try It Out!\n\nThe 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging\nin with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation\npage to interactively explore API features and responses.\n\nNote! With great power comes great responsibility: The \"Try It Out!\" button makes API calls to your live Looker\ninstance. Be especially careful with destructive API operations such as `delete_user` or similar.\nThere is no \"undo\" for API operations.\n\n### Versioning\n\nFuture releases of Looker will expand this API release-by-release to securely expose more and more of the core\npower of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without\nwarning (but we will try to avoid doing that). Stable (non-beta) API endpoints should not receive breaking\nchanges in future releases.\nFor more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning)\n\n### In This Release\n\nThis **API 3.1** is in active development. This is where support for new Looker features will\nappear as non-breaking additions - new functions, new optional parameters on existing functions, or new optional\nproperties in existing types. Additive changes should not impact your existing application code that calls the\nLooker API. Your existing application code will not be aware of any new Looker API functionality\nuntil you choose to upgrade your app to use a newer Looker API client SDK release.\n\nThe following are a few examples of noteworthy items that have changed between API 3.0 and API 3.1.\nFor more comprehensive coverage of API changes, please see the release notes for your Looker release.\n\n### Examples of new things added in API 3.1 (compared to API 3.0):\n\n* [Dashboard construction](#!/3.1/Dashboard/) APIs\n* [Themes](#!/3.1/Theme/) and [custom color collections](#!/3.1/ColorCollection) APIs\n* Create and run [SQL Runner](#!/3.1/Query/run_sql_query) queries\n* Create and run [merged results](#!/3.1/Query/create_merge_query) queries\n* Create and modify [dashboard filters](#!/3.1/Dashboard/create_dashboard_filter)\n* Create and modify [password requirements](#!/3.1/Auth/password_config)\n\n### Deprecated in API 3.0\n\nThe following functions and properties have been deprecated in API 3.0.  They continue to exist and work in API 3.0\nfor the next several Looker releases but they have not been carried forward to API 3.1:\n\n* Dashboard Prefetch functions\n* User access_filter functions\n* User API 1.0 credentials functions\n* Space.is_root and Space.is_user_root properties. Use Space.is_shared_root and Space.is_users_root instead.\n\n### Semantic changes in API 3.1:\n\n* [all_looks()](#!/3.1/Look/all_looks) no longer includes soft-deleted looks, matching [all_dashboards()](#!/3.1/Dashboard/all_dashboards) behavior.\nYou can find soft-deleted looks using [search_looks()](#!/3.1/Look/search_looks) with the `deleted` param set to True.\n* [all_spaces()](#!/3.1/Space/all_spaces) no longer includes duplicate items\n* [search_users()](#!/3.1/User/search_users) no longer accepts Y,y,1,0,N,n for Boolean params, only \"true\" and \"false\".\n* For greater client and network compatibility, [render_task_results](#!/3.1/RenderTask/render_task_results) now returns\nHTTP status **202 Accepted** instead of HTTP status **102 Processing**\n* [all_running_queries()](#!/3.1/Query/all_running_queries) and [kill_query](#!/3.1/Query/kill_query) functions have moved into the [Query](#!/3.1/Query/) function group.\n\n\nIf you have application code which relies on the old behavior of the APIs above, you may\ncontinue using the API 3.0 functions in this Looker release. We strongly suggest you\nupdate your code to use API 3.1 analogs as soon as possible.\n\n",
    "x-looker-release-version": "6.20.19",
    "license": {
      "name": "EULA",
      "url": "https://bytecode.looker.com/eula"
    },
    "contact": {
      "name": "Looker Team",
      "url": "https://looker.com",
      "email": "support@looker.com"
    },
    "title": "Looker API 3.1 Reference"
  },
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "ApiAuth",
      "description": "API Authentication"
    },
    {
      "name": "Auth",
      "description": "Manage User Authentication Configuration"
    },
    {
      "name": "ColorCollection",
      "description": "Manage Color Collections"
    },
    {
      "name": "Config",
      "description": "Manage General Configuration"
    },
    {
      "name": "Connection",
      "description": "Manage Database Connections"
    },
    {
      "name": "Content",
      "description": "Manage Content"
    },
    {
      "name": "Dashboard",
      "description": "Manage Dashboards"
    },
    {
      "name": "DataAction",
      "description": "Run Data Actions"
    },
    {
      "name": "Datagroup",
      "description": "Manage Datagroups"
    },
    {
      "name": "Folder",
      "description": "Manage Folders"
    },
    {
      "name": "Group",
      "description": "Manage Groups"
    },
    {
      "name": "Homepage",
      "description": "Manage Homepage"
    },
    {
      "name": "Integration",
      "description": "Manage Integrations"
    },
    {
      "name": "Look",
      "description": "Run and Manage Looks"
    },
    {
      "name": "LookmlModel",
      "description": "Manage LookML Models"
    },
    {
      "name": "Project",
      "description": "Manage Projects"
    },
    {
      "name": "Query",
      "description": "Run and Manage Queries"
    },
    {
      "name": "RenderTask",
      "description": "Manage Render Tasks"
    },
    {
      "name": "Role",
      "description": "Manage Roles"
    },
    {
      "name": "ScheduledPlan",
      "description": "Manage Scheduled Plans"
    },
    {
      "name": "Session",
      "description": "Session Information"
    },
    {
      "name": "Space",
      "description": "Manage Spaces"
    },
    {
      "name": "Theme",
      "description": "Manage Themes"
    },
    {
      "name": "User",
      "description": "Manage Users"
    },
    {
      "name": "UserAttribute",
      "description": "Manage User Attributes"
    },
    {
      "name": "Workspace",
      "description": "Manage Workspaces"
    }
  ],
  "swagger": "2.0",
  "definitions": {
    "QueryTask": {
      "properties": {
        "result_source": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Source of the results of the query.",
          "readOnly": true
        },
        "rebuild_pdts": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Rebuild PDTS used in query."
        },
        "force_production": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Use production models to run query (even is user is in dev mode)."
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of dashboard associated with query."
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "path_prefix": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Prefix to use for drill links."
        },
        "query": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/Query",
          "description": "Query",
          "readOnly": true
        },
        "cache_only": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Retrieve any results from cache even if the results have expired."
        },
        "cache_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "cache key used to cache query.",
          "readOnly": true
        },
        "generate_links": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "whether or not to generate links in the query response."
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of query",
          "format": "int64"
        },
        "result_format": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The data format of the query results.",
          "readOnly": true
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Status of query task."
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of look associated with query.",
          "format": "int64"
        },
        "cache": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not to use the cache"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Runtime of prior queries.",
          "readOnly": true,
          "format": "float"
        },
        "source": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Source of query task."
        },
        "server_table_calcs": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not to run table calculations on the server"
        }
      },
      "x-looker-status": "beta"
    },
    "ApiSession": {
      "properties": {
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "workspace_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The id of active workspace for this session"
        },
        "sudo_user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The id of the actual user in the case when this session represents one user sudo'ing as another",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "CreateQueryTask": {
      "properties": {
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of query to run",
          "format": "int64"
        },
        "result_format": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Desired result format"
        },
        "deferred": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Create the task but defer execution"
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of look associated with query.",
          "format": "int64"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of dashboard associated with query."
        },
        "source": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Source of query task"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "beta",
      "required": [
        "query_id",
        "result_format"
      ]
    },
    "IntegrationTestResult": {
      "properties": {
        "success": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the test was successful",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A message representing the results of the test.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "SamlMetadataParseResult": {
      "properties": {
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "idp_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identify Provider Url",
          "readOnly": true
        },
        "idp_cert": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identify Provider Certificate",
          "readOnly": true
        },
        "idp_issuer": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identify Provider Issuer",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "InternalHelpResourcesContent": {
      "properties": {
        "menu_item_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text to display in the help menu item which will display the internal help resources"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "markdown_content": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Content to be displayed in the internal help resources page/modal"
        }
      },
      "x-looker-status": "beta"
    },
    "ProjectFile": {
      "properties": {
        "extension": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The extension of the file: .view.lkml, .model.lkml, etc",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "editable": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "State of editability for the file.",
          "readOnly": true
        },
        "path": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Path, file name, and extension of the file relative to the project root directory",
          "readOnly": true
        },
        "git_status": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/GitStatus",
          "description": "Status of the file according to git",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "An opaque token uniquely identifying a file within a project. Avoid parsing or decomposing the text of this token. This token is stable within a Looker release but may change between Looker releases",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "File type: model, view, etc",
          "readOnly": true
        },
        "mime_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "File mime type",
          "readOnly": true
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Display name",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "SamlGroupRead": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group in Saml",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to saml config",
          "readOnly": true,
          "format": "uri"
        },
        "roles": {
          "description": "Looker Roles",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "permission_set_id": {
                "description": "(Write-Only) Id of permission set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "permission_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/PermissionSet",
                "description": "(Read only) Permission set",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "model_set_id": {
                "description": "(Write-Only) Id of model set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "users_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get list of users with this role",
                "readOnly": true,
                "format": "uri"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of Role"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "model_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ModelSet",
                "description": "(Read only) Model set",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ProjectValidationCache": {
      "properties": {
        "models_not_validated": {
          "description": "A list of models which were not fully validated",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Model name",
                "readOnly": true
              },
              "project_file_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Project file",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "stale": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true, the cached project validation results are no longer accurate because the project has changed since the cached results were calculated",
          "readOnly": true
        },
        "project_digest": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A hash value computed from the project's current state",
          "readOnly": true
        },
        "errors": {
          "description": "A list of project errors",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "line_number": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Line number in the file of this error",
                "readOnly": true,
                "format": "int64"
              },
              "sanitized_message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A version of the error message that does not contain potentially sensitive information. Suitable for situations in which messages are stored or sent to consumers outside of Looker, such as external logs. Sanitized messages will display \"(?)\" where sensitive information would appear in the corresponding non-sanitized message",
                "readOnly": true
              },
              "code": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A stable token that uniquely identifies this class of error, ignoring parameter values. Error message text may vary due to parameters or localization, but error codes do not. For example, a \"File not found\" error will have the same error code regardless of the filename in question or the user's display language",
                "readOnly": true
              },
              "file_path": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the file containing this error",
                "readOnly": true
              },
              "explore": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The explore associated with this error",
                "readOnly": true
              },
              "help_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A link to Looker documentation about this error",
                "readOnly": true
              },
              "kind": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error classification: syntax, deprecation, model_configuration, etc",
                "readOnly": true
              },
              "params": {
                "x-looker-nullable": true,
                "type": "object",
                "description": "Error parameters",
                "readOnly": true,
                "additionalProperties": {
                  "type": "string"
                }
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error message which may contain information such as dashboard or model names that may be considered sensitive in some use cases. Avoid storing or sending this message outside of Looker",
                "readOnly": true
              },
              "severity": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Severity: fatal, error, warning, info, success",
                "readOnly": true
              },
              "model_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The model associated with this error",
                "readOnly": true
              },
              "field_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The field associated with this error",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "computation_time": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Duration of project validation in seconds",
          "readOnly": true,
          "format": "float"
        }
      },
      "x-looker-status": "beta"
    },
    "ProjectValidation": {
      "properties": {
        "models_not_validated": {
          "description": "A list of models which were not fully validated",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Model name",
                "readOnly": true
              },
              "project_file_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Project file",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "project_digest": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A hash value computed from the project's current state",
          "readOnly": true
        },
        "errors": {
          "description": "A list of project errors",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "line_number": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Line number in the file of this error",
                "readOnly": true,
                "format": "int64"
              },
              "sanitized_message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A version of the error message that does not contain potentially sensitive information. Suitable for situations in which messages are stored or sent to consumers outside of Looker, such as external logs. Sanitized messages will display \"(?)\" where sensitive information would appear in the corresponding non-sanitized message",
                "readOnly": true
              },
              "code": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A stable token that uniquely identifies this class of error, ignoring parameter values. Error message text may vary due to parameters or localization, but error codes do not. For example, a \"File not found\" error will have the same error code regardless of the filename in question or the user's display language",
                "readOnly": true
              },
              "file_path": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the file containing this error",
                "readOnly": true
              },
              "explore": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The explore associated with this error",
                "readOnly": true
              },
              "help_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A link to Looker documentation about this error",
                "readOnly": true
              },
              "kind": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error classification: syntax, deprecation, model_configuration, etc",
                "readOnly": true
              },
              "params": {
                "x-looker-nullable": true,
                "type": "object",
                "description": "Error parameters",
                "readOnly": true,
                "additionalProperties": {
                  "type": "string"
                }
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error message which may contain information such as dashboard or model names that may be considered sensitive in some use cases. Avoid storing or sending this message outside of Looker",
                "readOnly": true
              },
              "severity": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Severity: fatal, error, warning, info, success",
                "readOnly": true
              },
              "model_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The model associated with this error",
                "readOnly": true
              },
              "field_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The field associated with this error",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "computation_time": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Duration of project validation in seconds",
          "readOnly": true,
          "format": "float"
        }
      },
      "x-looker-status": "beta"
    },
    "ColorStop": {
      "properties": {
        "offset": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Offset in continuous palette (0 to 100)",
          "format": "int64"
        },
        "color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "CSS color string"
        }
      },
      "x-looker-status": "beta"
    },
    "Group": {
      "properties": {
        "include_by_default": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "New users are added to this group by default",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "external_group_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "External Id group if embed group",
          "readOnly": true
        },
        "user_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of users included in this group",
          "readOnly": true,
          "format": "int64"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "contains_current_user": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Currently logged in user is group member",
          "readOnly": true
        },
        "can_add_to_content_metadata": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Group can be used in content access controls"
        },
        "externally_managed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Group membership controlled outside of Looker",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "CredentialsSaml": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "saml_user_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Saml IdP's Unique ID for this user",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlTestResult": {
      "properties": {
        "model_name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of model containing this test.",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "test_name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of this test.",
          "readOnly": true
        },
        "success": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "True if this test passsed without errors.",
          "readOnly": true
        },
        "warnings": {
          "description": "A list of any warnings encountered by the test.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "line_number": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Line number in the file of this error",
                "readOnly": true,
                "format": "int64"
              },
              "sanitized_message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A version of the error message that does not contain potentially sensitive information. Suitable for situations in which messages are stored or sent to consumers outside of Looker, such as external logs. Sanitized messages will display \"(?)\" where sensitive information would appear in the corresponding non-sanitized message",
                "readOnly": true
              },
              "code": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A stable token that uniquely identifies this class of error, ignoring parameter values. Error message text may vary due to parameters or localization, but error codes do not. For example, a \"File not found\" error will have the same error code regardless of the filename in question or the user's display language",
                "readOnly": true
              },
              "file_path": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the file containing this error",
                "readOnly": true
              },
              "explore": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The explore associated with this error",
                "readOnly": true
              },
              "help_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A link to Looker documentation about this error",
                "readOnly": true
              },
              "kind": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error classification: syntax, deprecation, model_configuration, etc",
                "readOnly": true
              },
              "params": {
                "x-looker-nullable": true,
                "type": "object",
                "description": "Error parameters",
                "readOnly": true,
                "additionalProperties": {
                  "type": "string"
                }
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error message which may contain information such as dashboard or model names that may be considered sensitive in some use cases. Avoid storing or sending this message outside of Looker",
                "readOnly": true
              },
              "severity": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Severity: fatal, error, warning, info, success",
                "readOnly": true
              },
              "model_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The model associated with this error",
                "readOnly": true
              },
              "field_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The field associated with this error",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "errors": {
          "description": "A list of any errors encountered by the test.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "line_number": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Line number in the file of this error",
                "readOnly": true,
                "format": "int64"
              },
              "sanitized_message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A version of the error message that does not contain potentially sensitive information. Suitable for situations in which messages are stored or sent to consumers outside of Looker, such as external logs. Sanitized messages will display \"(?)\" where sensitive information would appear in the corresponding non-sanitized message",
                "readOnly": true
              },
              "code": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A stable token that uniquely identifies this class of error, ignoring parameter values. Error message text may vary due to parameters or localization, but error codes do not. For example, a \"File not found\" error will have the same error code regardless of the filename in question or the user's display language",
                "readOnly": true
              },
              "file_path": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the file containing this error",
                "readOnly": true
              },
              "explore": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The explore associated with this error",
                "readOnly": true
              },
              "help_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A link to Looker documentation about this error",
                "readOnly": true
              },
              "kind": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error classification: syntax, deprecation, model_configuration, etc",
                "readOnly": true
              },
              "params": {
                "x-looker-nullable": true,
                "type": "object",
                "description": "Error parameters",
                "readOnly": true,
                "additionalProperties": {
                  "type": "string"
                }
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error message which may contain information such as dashboard or model names that may be considered sensitive in some use cases. Avoid storing or sending this message outside of Looker",
                "readOnly": true
              },
              "severity": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Severity: fatal, error, warning, info, success",
                "readOnly": true
              },
              "model_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The model associated with this error",
                "readOnly": true
              },
              "field_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The field associated with this error",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "SamlConfig": {
      "properties": {
        "idp_audience": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP."
        },
        "modified_by": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User id of user who last modified this config",
          "readOnly": true
        },
        "default_new_user_roles": {
          "description": "(Read-only) Roles that will be applied to new users the first time they login via Saml",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "permission_set_id": {
                "description": "(Write-Only) Id of permission set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "permission_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/PermissionSet",
                "description": "(Read only) Permission set",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "model_set_id": {
                "description": "(Write-Only) Id of model set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "users_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get list of users with this role",
                "readOnly": true,
                "format": "uri"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of Role"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "model_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ModelSet",
                "description": "(Read only) Model set",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "auth_requires_role": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Users will not be allowed to login at all unless a role for them is found in Saml if set to true"
        },
        "user_attribute_map_email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate email address field"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "idp_cert": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identity Provider Certificate (provided by IdP)"
        },
        "set_roles_from_groups": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Set user roles in Looker based on groups from Saml"
        },
        "idp_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identity Provider Url (provided by IdP)"
        },
        "user_attribute_map_first_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate first name"
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "groups_finder_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']"
        },
        "new_user_migration_types": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
        },
        "test_slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Slug to identify configurations that are created in order to run a Saml config test",
          "readOnly": true
        },
        "allowed_clock_drift": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Count of seconds of clock drift to allow when validating timestamps of assertions.",
          "format": "int64"
        },
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Enable/Disable Saml authentication for the server"
        },
        "groups_with_role_ids": {
          "description": "(Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group in Saml"
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to saml config",
                "readOnly": true,
                "format": "uri"
              },
              "role_ids": {
                "description": "Looker Role Ids",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "x-looker-status": "stable"
          }
        },
        "modified_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When this config was last modified",
          "readOnly": true
        },
        "user_attribute_map_last_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate last name"
        },
        "user_attributes_with_ids": {
          "description": "(Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of User Attribute in Saml"
              },
              "user_attribute_ids": {
                "description": "Looker User Attribute Ids",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to saml config",
                "readOnly": true,
                "format": "uri"
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Required to be in Saml assertion for login to be allowed to succeed"
              }
            },
            "x-looker-status": "stable"
          }
        },
        "bypass_login_page": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Bypass the login page when user authentication is required. Redirect to IdP immediately instead."
        },
        "groups": {
          "description": "(Read-only) Array of mappings between Saml Groups and Looker Roles",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group in Saml",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to saml config",
                "readOnly": true,
                "format": "uri"
              },
              "roles": {
                "description": "Looker Roles",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Role"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "default_new_user_group_ids": {
          "x-looker-write-only": true,
          "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "default_new_user_role_ids": {
          "x-looker-write-only": true,
          "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "groups_member_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'"
        },
        "default_new_user_groups": {
          "description": "(Read-only) Groups that will be applied to new users the first time they login via Saml",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "include_by_default": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "New users are added to this group by default",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "external_group_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "External Id group if embed group",
                "readOnly": true
              },
              "user_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of users included in this group",
                "readOnly": true,
                "format": "int64"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "contains_current_user": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Currently logged in user is group member",
                "readOnly": true
              },
              "can_add_to_content_metadata": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Group can be used in content access controls"
              },
              "externally_managed": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Group membership controlled outside of Looker",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "alternate_email_login_allowed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
        },
        "user_attributes": {
          "description": "(Read-only) Array of mappings between Saml User Attributes and Looker User Attributes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of User Attribute in Saml",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to saml config",
                "readOnly": true,
                "format": "uri"
              },
              "user_attributes": {
                "description": "Looker User Attributes",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UserAttribute"
                },
                "readOnly": true
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Required to be in Saml assertion for login to be allowed to succeed",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "groups_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
        },
        "idp_issuer": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identity Provider Issuer (provided by IdP)"
        }
      },
      "x-looker-status": "stable"
    },
    "ApiVersion": {
      "properties": {
        "looker_release_version": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Current Looker release version number",
          "readOnly": true
        },
        "current_version": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ApiVersionElement",
          "description": "Current version for this Looker instance",
          "readOnly": true
        },
        "supported_versions": {
          "description": "Array of versions supported by this Looker instance",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "version": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Version number as it appears in '/api/xxx/' urls",
                "readOnly": true
              },
              "swagger_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Url for swagger.json for this version",
                "readOnly": true,
                "format": "uri"
              },
              "status": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Status of this version",
                "readOnly": true
              },
              "full_version": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Full version number including minor version",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "OIDCUserAttributeRead": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of User Attribute in OIDC",
          "readOnly": true
        },
        "user_attributes": {
          "description": "Looker User Attributes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "user_can_view": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Non-admin users can see the values of their attributes and use them in filters"
              },
              "is_system": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Attribute is a system default",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "hidden_value_domain_whitelist": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
              },
              "user_can_edit": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Users can change the value of this attribute for themselves"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of user attribute"
              },
              "value_is_hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If true, users will not be able to view values of this attribute"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
              },
              "default_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Default value for when no value is set on the user"
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Human-friendly label for user attribute"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Required to be in OIDC assertion for login to be allowed to succeed",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreField": {
      "properties": {
        "is_timeframe": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field is of a type that represents a time value.",
          "readOnly": true
        },
        "can_time_filter": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field can be time filtered.",
          "readOnly": true
        },
        "primary_key": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the field represents a primary key.",
          "readOnly": true
        },
        "lookml_link": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A URL linking to the definition of this field in the LookML IDE.",
          "readOnly": true
        },
        "field_group_variant": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context.",
          "readOnly": true
        },
        "view": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The name of the view this field belongs to.",
          "readOnly": true
        },
        "project_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of the project this field is defined in.",
          "readOnly": true
        },
        "default_filter_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The default value that this field uses when filtering. Null if there is no default value.",
          "readOnly": true
        },
        "category": {
          "x-looker-values": [
            "parameter",
            "filter",
            "measure",
            "dimension"
          ],
          "x-looker-nullable": true,
          "type": "string",
          "description": "Field category Valid values are: \"parameter\", \"filter\", \"measure\", \"dimension\".",
          "readOnly": true
        },
        "can_filter": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether it's possible to filter on this field.",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Fully-qualified name of the field.",
          "readOnly": true
        },
        "tags": {
          "description": "An array of arbitrary string tags provided in the model for this field.",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "suggest_dimension": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The name of the dimension to base suggest queries from.",
          "readOnly": true
        },
        "label_short": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The human-readable label of the field, without the view label.",
          "readOnly": true
        },
        "source_file_path": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The fully-qualified path of the project file this field is defined in.",
          "readOnly": true
        },
        "suggestable": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not suggestions are possible for this field.",
          "readOnly": true
        },
        "user_attribute_filter_types": {
          "items": {
            "type": "string"
          },
          "description": "An array of user attribute types that are allowed to be used in filters on this field. Valid values are: \"advanced_filter_string\", \"advanced_filter_number\", \"advanced_filter_datetime\", \"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\".",
          "readOnly": true,
          "x-looker-values": [
            "advanced_filter_string",
            "advanced_filter_number",
            "advanced_filter_datetime",
            "string",
            "number",
            "datetime",
            "yesno",
            "zipcode"
          ],
          "x-looker-nullable": false,
          "type": "array"
        },
        "is_fiscal": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field represents a fiscal time value.",
          "readOnly": true
        },
        "week_start_day": {
          "x-looker-values": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "x-looker-nullable": false,
          "type": "string",
          "description": "The name of the starting day of the week. Valid values are: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".",
          "readOnly": true
        },
        "error": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "An error message indicating a problem with the definition of this field. If there are no errors, this will be null.",
          "readOnly": true
        },
        "scope": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The LookML scope this field belongs to. The scope is typically the field's view.",
          "readOnly": true
        },
        "permanent": {
          "x-looker-nullable": true,
          "type": "boolean",
          "description": "Whether this field can be removed from a query.",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The LookML type of the field.",
          "readOnly": true
        },
        "sql_case": {
          "description": "An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL Case label value",
                "readOnly": true
              },
              "condition": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL Case condition expression",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "map_layer": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookmlModelExploreFieldMapLayer",
          "description": "If applicable, a map layer this field is associated with.",
          "readOnly": true
        },
        "source_file": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The path portion of source_file_path.",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "strict_value_format": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If yes, the field will not be localized with the user attribute number_format. Defaults to no",
          "readOnly": true
        },
        "hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field should be hidden from the user interface.",
          "readOnly": true
        },
        "dynamic": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field was specified in \"dynamic_fields\" and is not part of the model.",
          "readOnly": true
        },
        "align": {
          "x-looker-values": [
            "left",
            "right"
          ],
          "x-looker-nullable": false,
          "type": "string",
          "description": "The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: \"left\", \"right\".",
          "readOnly": true
        },
        "field_group_label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI.",
          "readOnly": true
        },
        "time_interval": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookmlModelExploreFieldTimeInterval",
          "description": "Details on the time interval this field represents, if it is_timeframe.",
          "readOnly": true
        },
        "view_label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The human-readable label of the view the field belongs to.",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Fully-qualified human-readable label of the field.",
          "readOnly": true
        },
        "label_from_parameter": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of the parameter that will provide a parameterized label for this field, if available in the current context.",
          "readOnly": true
        },
        "fill_style": {
          "x-looker-values": [
            "enumeration",
            "range"
          ],
          "x-looker-nullable": true,
          "type": "string",
          "description": "The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: \"enumeration\", \"range\".",
          "readOnly": true
        },
        "parameter": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field is a parameter.",
          "readOnly": true
        },
        "is_numeric": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field is of a type that represents a numeric value.",
          "readOnly": true
        },
        "enumerations": {
          "description": "An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "value": {
                "x-looker-polymorphic-types": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number",
                    "format": "float"
                  }
                ],
                "description": "Value",
                "readOnly": true,
                "format": "any",
                "x-looker-nullable": true,
                "type": "string"
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Label",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "sortable": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field can be sorted.",
          "readOnly": true
        },
        "value_format": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "If specified, the LookML value format string for formatting values of this field.",
          "readOnly": true
        },
        "has_allowed_values": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field has a set of allowed_values specified in LookML.",
          "readOnly": true
        },
        "suggestions": {
          "description": "If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requires_refresh_on_sort": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort.",
          "readOnly": true
        },
        "is_filter": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field is a filter.",
          "readOnly": true
        },
        "sql": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
          "readOnly": true
        },
        "suggest_explore": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The name of the explore to base suggest queries from.",
          "readOnly": true
        },
        "measure": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this field is a measure.",
          "readOnly": true
        },
        "fiscal_month_offset": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to.",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "ContentMeta": {
      "properties": {
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "parent_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of Parent Content",
          "readOnly": true,
          "format": "int64"
        },
        "content_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Content Type (\"dashboard\", \"look\", or \"space\")",
          "readOnly": true
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of associated look when content_type is \"look\"",
          "readOnly": true,
          "format": "int64"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name or title of underlying content",
          "readOnly": true
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of associated dashboard when content_type is \"dashboard\"",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Content Slug",
          "readOnly": true
        },
        "space_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of associated space when content_type is \"space\"",
          "readOnly": true
        },
        "inherits": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether content inherits its access levels from parent"
        },
        "inheriting_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of Inherited Content",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "ResultMakerWithIdVisConfigAndDynamicFields": {
      "properties": {
        "total": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Total of the constituent Look, Query, or Merge Query",
          "readOnly": true
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "ID of query if this is a query.",
          "readOnly": true,
          "format": "int64"
        },
        "dynamic_fields": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "JSON string of dynamic field information.",
          "readOnly": true
        },
        "vis_config": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Vis config of the constituent Query, or Merge Query.",
          "readOnly": true,
          "format": "any"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id.",
          "readOnly": true,
          "format": "int64"
        },
        "query": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/Query",
          "description": "Query",
          "readOnly": true
        },
        "filterables": {
          "description": "array of items that can be filtered and information about them.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the filterable thing (Query or Merged Results).",
                "readOnly": true
              },
              "listen": {
                "description": "array of dashboard_filter_name: and field: objects.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ResultMakerFilterablesListen"
                },
                "readOnly": true
              },
              "view": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The view this filterable comes from (used for field suggestions).",
                "readOnly": true
              },
              "model": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The model this filterable comes from (used for field suggestions).",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "merge_result_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "ID of merge result if this is a merge_result.",
          "readOnly": true
        },
        "sorts": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Sorts of the constituent Look, Query, or Merge Query",
          "readOnly": true,
          "format": "any"
        }
      },
      "x-looker-status": "beta"
    },
    "ContentValidation": {
      "properties": {
        "content_with_errors": {
          "description": "A list of content errors",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "look": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ContentValidationLook",
                "readOnly": true
              },
              "dashboard_element": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ContentValidationDashboardElement",
                "readOnly": true
              },
              "dashboard": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ContentValidationDashboard",
                "readOnly": true
              },
              "dashboard_filter": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ContentValidationDashboardFilter",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "An id unique to this piece of content for this validation run",
                "readOnly": true
              },
              "errors": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A list of errors found for this piece of content",
                "readOnly": true,
                "format": "any"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "total_looks_validated": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The number of looks validated",
          "readOnly": true,
          "format": "int64"
        },
        "total_dashboard_elements_validated": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The number of dashboard elements validated",
          "readOnly": true,
          "format": "int64"
        },
        "total_explores_validated": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The number of explores used across all content validated",
          "readOnly": true,
          "format": "int64"
        },
        "computation_time": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Duration of content validation in seconds",
          "readOnly": true,
          "format": "float"
        }
      },
      "x-looker-status": "beta"
    },
    "GitBranch": {
      "properties": {
        "ref": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``."
        },
        "is_remote": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not a remote ref exists for the branch",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "personal": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not this branch is a personal branch - readonly for all developers except the owner",
          "readOnly": true
        },
        "behind_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of commits the local branch is behind the remote",
          "readOnly": true,
          "format": "int64"
        },
        "remote_ref": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The resolved ref of this branch remote.",
          "readOnly": true
        },
        "is_production": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not this is the production branch",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The short name on the local. Updating `name` results in `git checkout <new_name>`"
        },
        "error": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of error",
          "readOnly": true
        },
        "readonly": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not this branch is readonly",
          "readOnly": true
        },
        "remote": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of the remote",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Message describing an error if present",
          "readOnly": true
        },
        "remote_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The short name on the remote",
          "readOnly": true
        },
        "owner_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the owner of a personal branch",
          "readOnly": true
        },
        "ahead_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of commits the local branch is ahead of the remote",
          "readOnly": true,
          "format": "int64"
        },
        "is_local": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not a local ref exists for the branch",
          "readOnly": true
        },
        "commit_at": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "UNIX timestamp at which this branch was last committed.",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "Homepage": {
      "properties": {
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description of homepage"
        },
        "homepage_sections": {
          "description": "Sections of the homepage",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "deleted_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time at which this section was deleted.",
                "format": "date-time"
              },
              "created_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time at which this section was created.",
                "readOnly": true,
                "format": "date-time"
              },
              "homepage_items": {
                "description": "Items in the homepage section",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/HomepageItem"
                },
                "readOnly": true
              },
              "updated_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time at which this section was last updated.",
                "readOnly": true,
                "format": "date-time"
              },
              "is_header": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is this a header section (has no items)",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "detail_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A URL pointing to a page showing further information about the content in the section.",
                "readOnly": true
              },
              "homepage_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id reference to parent homepage",
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of row"
              },
              "item_order": {
                "description": "ids of the homepage items in the order they should be displayed",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date of last homepage update",
          "readOnly": true,
          "format": "date-time"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "primary_homepage": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the homepage is the primary homepage or not",
          "readOnly": true
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title of homepage"
        },
        "section_order": {
          "description": "ids of the homepage sections in the order they should be displayed",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "deleted_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date of homepage deletion",
          "format": "date-time"
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date of homepage creatopm",
          "readOnly": true,
          "format": "date-time"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of associated content_metadata record",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User id of homepage creator",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "IntegrationHub": {
      "properties": {
        "url": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "URL of the hub."
        },
        "official": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this hub is a first-party integration hub operated by Looker.",
          "readOnly": true
        },
        "legal_agreement_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The legal agreement text for this integration hub.",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "has_authorization_token": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the authorization_token is set for the hub.",
          "readOnly": true
        },
        "legal_agreement_signed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true.",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "ID of the hub.",
          "readOnly": true,
          "format": "int64"
        },
        "legal_agreement_required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the legal terms for the integration hub are required before use.",
          "readOnly": true
        },
        "authorization_token": {
          "description": "(Write-Only) An authorization key that will be sent to the integration hub on every request.",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Label of the hub.",
          "readOnly": true
        },
        "fetch_error_message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "ThemeSettings": {
      "properties": {
        "warn_button_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Warning button color"
        },
        "font_family": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Primary font family"
        },
        "base_font_size": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Base font size for scaling fonts"
        },
        "color_collection_id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Optional. ID of color collection to use with the theme. Use an empty string for none."
        },
        "show_filters_bar": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Toggle to show filters. Defaults to true."
        },
        "text_tile_text_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Text color for text tiles"
        },
        "title_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Color for titles"
        },
        "font_source": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Source specification for font"
        },
        "tile_background_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Background color for tiles"
        },
        "show_title": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Toggle to show the title. Defaults to true."
        },
        "info_button_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Info button color"
        },
        "tile_text_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Text color for tiles"
        },
        "background_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Default background color"
        },
        "primary_button_color": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Primary button color"
        },
        "font_color": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default font color"
        }
      },
      "x-looker-status": "beta"
    },
    "LocalizationSettings": {
      "properties": {
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "default_locale": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default locale for localization",
          "readOnly": true
        },
        "localization_level": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Localization level - strict or permissive",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "DataActionRequest": {
      "properties": {
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "form_values": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "User input for any form values the data action might use.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "action": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "The JSON describing the data action. This JSON should be considered opaque and should be passed through unmodified from the query result it came from.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "DashboardElement": {
      "properties": {
        "note_state": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note State"
        },
        "title_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile title"
        },
        "lookml_link_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LookML link ID",
          "readOnly": true
        },
        "refresh_interval": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Refresh Interval"
        },
        "merge_result_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "ID of merge result"
        },
        "alert_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Count of Alerts associated to a dashboard element",
          "readOnly": true,
          "format": "int64"
        },
        "body_text_as_html": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile body text as Html",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "look": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookWithQuery",
          "description": "Look",
          "readOnly": true
        },
        "note_text_as_html": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note Text as Html",
          "readOnly": true
        },
        "edit_uri": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
          "readOnly": true,
          "format": "uri"
        },
        "result_maker": {
          "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
          "description": "Data about the result maker.",
          "x-looker-nullable": true
        },
        "result_maker_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "ID of the ResultMakerLookup entry.",
          "readOnly": true,
          "format": "int64"
        },
        "title_hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether title is hidden"
        },
        "body_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile body text"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard"
        },
        "query": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/Query",
          "description": "Query",
          "readOnly": true
        },
        "subtitle_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile subtitle text"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title of dashboard element"
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id Of Query",
          "format": "int64"
        },
        "refresh_interval_to_i": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Refresh Interval as integer",
          "readOnly": true,
          "format": "int64"
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id Of Look"
        },
        "note_display": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note Display"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type"
        },
        "note_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note Text"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "Session": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "city": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "City component of user location (derived from IP address)",
          "readOnly": true
        },
        "browser": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User's browser type",
          "readOnly": true
        },
        "sudo_user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Actual user in the case when this session represents one user sudo'ing as another",
          "readOnly": true,
          "format": "int64"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "credentials_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of credentials used for logging in this session",
          "readOnly": true
        },
        "state": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "State component of user location (derived from IP address)",
          "readOnly": true
        },
        "extended_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time when this session was last extended by the user",
          "readOnly": true
        },
        "operating_system": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User's Operating System",
          "readOnly": true
        },
        "country": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Country component of user location (derived from IP address)",
          "readOnly": true
        },
        "ip_address": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "IP address of user when this session was initiated",
          "readOnly": true
        },
        "expires_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time when this session will expire",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "extended_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times this session was extended",
          "readOnly": true,
          "format": "int64"
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time when this session was initiated",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "GitConnectionTest": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "A short string, uniquely naming this test",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Human readable string describing the test",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "UserPublic": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "first_name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "First Name",
          "readOnly": true
        },
        "last_name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Last Name",
          "readOnly": true
        },
        "display_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Full name for display (available only if both first_name and last_name are set)",
          "readOnly": true
        },
        "avatar_url": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "URL for the avatar image (may be generic)",
          "readOnly": true,
          "format": "uri"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreFieldset": {
      "properties": {
        "filters": {
          "description": "Array of filters",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "is_timeframe": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a time value.",
                "readOnly": true
              },
              "can_time_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be time filtered.",
                "readOnly": true
              },
              "primary_key": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the field represents a primary key.",
                "readOnly": true
              },
              "lookml_link": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A URL linking to the definition of this field in the LookML IDE.",
                "readOnly": true
              },
              "field_group_variant": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context.",
                "readOnly": true
              },
              "view": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the view this field belongs to.",
                "readOnly": true
              },
              "project_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the project this field is defined in.",
                "readOnly": true
              },
              "default_filter_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The default value that this field uses when filtering. Null if there is no default value.",
                "readOnly": true
              },
              "category": {
                "x-looker-values": [
                  "parameter",
                  "filter",
                  "measure",
                  "dimension"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field category Valid values are: \"parameter\", \"filter\", \"measure\", \"dimension\".",
                "readOnly": true
              },
              "can_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether it's possible to filter on this field.",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified name of the field.",
                "readOnly": true
              },
              "tags": {
                "description": "An array of arbitrary string tags provided in the model for this field.",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "suggest_dimension": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the dimension to base suggest queries from.",
                "readOnly": true
              },
              "label_short": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the field, without the view label.",
                "readOnly": true
              },
              "source_file_path": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The fully-qualified path of the project file this field is defined in.",
                "readOnly": true
              },
              "suggestable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not suggestions are possible for this field.",
                "readOnly": true
              },
              "user_attribute_filter_types": {
                "items": {
                  "type": "string"
                },
                "description": "An array of user attribute types that are allowed to be used in filters on this field. Valid values are: \"advanced_filter_string\", \"advanced_filter_number\", \"advanced_filter_datetime\", \"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\".",
                "readOnly": true,
                "x-looker-values": [
                  "advanced_filter_string",
                  "advanced_filter_number",
                  "advanced_filter_datetime",
                  "string",
                  "number",
                  "datetime",
                  "yesno",
                  "zipcode"
                ],
                "x-looker-nullable": false,
                "type": "array"
              },
              "is_fiscal": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field represents a fiscal time value.",
                "readOnly": true
              },
              "week_start_day": {
                "x-looker-values": [
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the starting day of the week. Valid values are: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".",
                "readOnly": true
              },
              "error": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "An error message indicating a problem with the definition of this field. If there are no errors, this will be null.",
                "readOnly": true
              },
              "scope": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML scope this field belongs to. The scope is typically the field's view.",
                "readOnly": true
              },
              "permanent": {
                "x-looker-nullable": true,
                "type": "boolean",
                "description": "Whether this field can be removed from a query.",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML type of the field.",
                "readOnly": true
              },
              "sql_case": {
                "description": "An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldSqlCase"
                },
                "readOnly": true
              },
              "map_layer": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldMapLayer",
                "description": "If applicable, a map layer this field is associated with.",
                "readOnly": true
              },
              "source_file": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The path portion of source_file_path.",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "strict_value_format": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If yes, the field will not be localized with the user attribute number_format. Defaults to no",
                "readOnly": true
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field should be hidden from the user interface.",
                "readOnly": true
              },
              "dynamic": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field was specified in \"dynamic_fields\" and is not part of the model.",
                "readOnly": true
              },
              "align": {
                "x-looker-values": [
                  "left",
                  "right"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: \"left\", \"right\".",
                "readOnly": true
              },
              "field_group_label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI.",
                "readOnly": true
              },
              "time_interval": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldTimeInterval",
                "description": "Details on the time interval this field represents, if it is_timeframe.",
                "readOnly": true
              },
              "view_label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the view the field belongs to.",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified human-readable label of the field.",
                "readOnly": true
              },
              "label_from_parameter": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the parameter that will provide a parameterized label for this field, if available in the current context.",
                "readOnly": true
              },
              "fill_style": {
                "x-looker-values": [
                  "enumeration",
                  "range"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: \"enumeration\", \"range\".",
                "readOnly": true
              },
              "parameter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a parameter.",
                "readOnly": true
              },
              "is_numeric": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a numeric value.",
                "readOnly": true
              },
              "enumerations": {
                "description": "An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldEnumeration"
                },
                "readOnly": true
              },
              "sortable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be sorted.",
                "readOnly": true
              },
              "value_format": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "If specified, the LookML value format string for formatting values of this field.",
                "readOnly": true
              },
              "has_allowed_values": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field has a set of allowed_values specified in LookML.",
                "readOnly": true
              },
              "suggestions": {
                "description": "If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "requires_refresh_on_sort": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort.",
                "readOnly": true
              },
              "is_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a filter.",
                "readOnly": true
              },
              "sql": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "readOnly": true
              },
              "suggest_explore": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the explore to base suggest queries from.",
                "readOnly": true
              },
              "measure": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a measure.",
                "readOnly": true
              },
              "fiscal_month_offset": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to.",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "parameters": {
          "description": "Array of parameters",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "is_timeframe": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a time value.",
                "readOnly": true
              },
              "can_time_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be time filtered.",
                "readOnly": true
              },
              "primary_key": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the field represents a primary key.",
                "readOnly": true
              },
              "lookml_link": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A URL linking to the definition of this field in the LookML IDE.",
                "readOnly": true
              },
              "field_group_variant": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context.",
                "readOnly": true
              },
              "view": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the view this field belongs to.",
                "readOnly": true
              },
              "project_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the project this field is defined in.",
                "readOnly": true
              },
              "default_filter_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The default value that this field uses when filtering. Null if there is no default value.",
                "readOnly": true
              },
              "category": {
                "x-looker-values": [
                  "parameter",
                  "filter",
                  "measure",
                  "dimension"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field category Valid values are: \"parameter\", \"filter\", \"measure\", \"dimension\".",
                "readOnly": true
              },
              "can_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether it's possible to filter on this field.",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified name of the field.",
                "readOnly": true
              },
              "tags": {
                "description": "An array of arbitrary string tags provided in the model for this field.",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "suggest_dimension": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the dimension to base suggest queries from.",
                "readOnly": true
              },
              "label_short": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the field, without the view label.",
                "readOnly": true
              },
              "source_file_path": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The fully-qualified path of the project file this field is defined in.",
                "readOnly": true
              },
              "suggestable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not suggestions are possible for this field.",
                "readOnly": true
              },
              "user_attribute_filter_types": {
                "items": {
                  "type": "string"
                },
                "description": "An array of user attribute types that are allowed to be used in filters on this field. Valid values are: \"advanced_filter_string\", \"advanced_filter_number\", \"advanced_filter_datetime\", \"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\".",
                "readOnly": true,
                "x-looker-values": [
                  "advanced_filter_string",
                  "advanced_filter_number",
                  "advanced_filter_datetime",
                  "string",
                  "number",
                  "datetime",
                  "yesno",
                  "zipcode"
                ],
                "x-looker-nullable": false,
                "type": "array"
              },
              "is_fiscal": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field represents a fiscal time value.",
                "readOnly": true
              },
              "week_start_day": {
                "x-looker-values": [
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the starting day of the week. Valid values are: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".",
                "readOnly": true
              },
              "error": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "An error message indicating a problem with the definition of this field. If there are no errors, this will be null.",
                "readOnly": true
              },
              "scope": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML scope this field belongs to. The scope is typically the field's view.",
                "readOnly": true
              },
              "permanent": {
                "x-looker-nullable": true,
                "type": "boolean",
                "description": "Whether this field can be removed from a query.",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML type of the field.",
                "readOnly": true
              },
              "sql_case": {
                "description": "An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldSqlCase"
                },
                "readOnly": true
              },
              "map_layer": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldMapLayer",
                "description": "If applicable, a map layer this field is associated with.",
                "readOnly": true
              },
              "source_file": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The path portion of source_file_path.",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "strict_value_format": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If yes, the field will not be localized with the user attribute number_format. Defaults to no",
                "readOnly": true
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field should be hidden from the user interface.",
                "readOnly": true
              },
              "dynamic": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field was specified in \"dynamic_fields\" and is not part of the model.",
                "readOnly": true
              },
              "align": {
                "x-looker-values": [
                  "left",
                  "right"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: \"left\", \"right\".",
                "readOnly": true
              },
              "field_group_label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI.",
                "readOnly": true
              },
              "time_interval": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldTimeInterval",
                "description": "Details on the time interval this field represents, if it is_timeframe.",
                "readOnly": true
              },
              "view_label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the view the field belongs to.",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified human-readable label of the field.",
                "readOnly": true
              },
              "label_from_parameter": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the parameter that will provide a parameterized label for this field, if available in the current context.",
                "readOnly": true
              },
              "fill_style": {
                "x-looker-values": [
                  "enumeration",
                  "range"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: \"enumeration\", \"range\".",
                "readOnly": true
              },
              "parameter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a parameter.",
                "readOnly": true
              },
              "is_numeric": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a numeric value.",
                "readOnly": true
              },
              "enumerations": {
                "description": "An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldEnumeration"
                },
                "readOnly": true
              },
              "sortable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be sorted.",
                "readOnly": true
              },
              "value_format": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "If specified, the LookML value format string for formatting values of this field.",
                "readOnly": true
              },
              "has_allowed_values": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field has a set of allowed_values specified in LookML.",
                "readOnly": true
              },
              "suggestions": {
                "description": "If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "requires_refresh_on_sort": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort.",
                "readOnly": true
              },
              "is_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a filter.",
                "readOnly": true
              },
              "sql": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "readOnly": true
              },
              "suggest_explore": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the explore to base suggest queries from.",
                "readOnly": true
              },
              "measure": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a measure.",
                "readOnly": true
              },
              "fiscal_month_offset": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to.",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "measures": {
          "description": "Array of measures",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "is_timeframe": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a time value.",
                "readOnly": true
              },
              "can_time_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be time filtered.",
                "readOnly": true
              },
              "primary_key": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the field represents a primary key.",
                "readOnly": true
              },
              "lookml_link": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A URL linking to the definition of this field in the LookML IDE.",
                "readOnly": true
              },
              "field_group_variant": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context.",
                "readOnly": true
              },
              "view": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the view this field belongs to.",
                "readOnly": true
              },
              "project_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the project this field is defined in.",
                "readOnly": true
              },
              "default_filter_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The default value that this field uses when filtering. Null if there is no default value.",
                "readOnly": true
              },
              "category": {
                "x-looker-values": [
                  "parameter",
                  "filter",
                  "measure",
                  "dimension"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field category Valid values are: \"parameter\", \"filter\", \"measure\", \"dimension\".",
                "readOnly": true
              },
              "can_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether it's possible to filter on this field.",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified name of the field.",
                "readOnly": true
              },
              "tags": {
                "description": "An array of arbitrary string tags provided in the model for this field.",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "suggest_dimension": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the dimension to base suggest queries from.",
                "readOnly": true
              },
              "label_short": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the field, without the view label.",
                "readOnly": true
              },
              "source_file_path": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The fully-qualified path of the project file this field is defined in.",
                "readOnly": true
              },
              "suggestable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not suggestions are possible for this field.",
                "readOnly": true
              },
              "user_attribute_filter_types": {
                "items": {
                  "type": "string"
                },
                "description": "An array of user attribute types that are allowed to be used in filters on this field. Valid values are: \"advanced_filter_string\", \"advanced_filter_number\", \"advanced_filter_datetime\", \"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\".",
                "readOnly": true,
                "x-looker-values": [
                  "advanced_filter_string",
                  "advanced_filter_number",
                  "advanced_filter_datetime",
                  "string",
                  "number",
                  "datetime",
                  "yesno",
                  "zipcode"
                ],
                "x-looker-nullable": false,
                "type": "array"
              },
              "is_fiscal": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field represents a fiscal time value.",
                "readOnly": true
              },
              "week_start_day": {
                "x-looker-values": [
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the starting day of the week. Valid values are: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".",
                "readOnly": true
              },
              "error": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "An error message indicating a problem with the definition of this field. If there are no errors, this will be null.",
                "readOnly": true
              },
              "scope": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML scope this field belongs to. The scope is typically the field's view.",
                "readOnly": true
              },
              "permanent": {
                "x-looker-nullable": true,
                "type": "boolean",
                "description": "Whether this field can be removed from a query.",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML type of the field.",
                "readOnly": true
              },
              "sql_case": {
                "description": "An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldSqlCase"
                },
                "readOnly": true
              },
              "map_layer": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldMapLayer",
                "description": "If applicable, a map layer this field is associated with.",
                "readOnly": true
              },
              "source_file": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The path portion of source_file_path.",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "strict_value_format": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If yes, the field will not be localized with the user attribute number_format. Defaults to no",
                "readOnly": true
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field should be hidden from the user interface.",
                "readOnly": true
              },
              "dynamic": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field was specified in \"dynamic_fields\" and is not part of the model.",
                "readOnly": true
              },
              "align": {
                "x-looker-values": [
                  "left",
                  "right"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: \"left\", \"right\".",
                "readOnly": true
              },
              "field_group_label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI.",
                "readOnly": true
              },
              "time_interval": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldTimeInterval",
                "description": "Details on the time interval this field represents, if it is_timeframe.",
                "readOnly": true
              },
              "view_label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the view the field belongs to.",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified human-readable label of the field.",
                "readOnly": true
              },
              "label_from_parameter": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the parameter that will provide a parameterized label for this field, if available in the current context.",
                "readOnly": true
              },
              "fill_style": {
                "x-looker-values": [
                  "enumeration",
                  "range"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: \"enumeration\", \"range\".",
                "readOnly": true
              },
              "parameter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a parameter.",
                "readOnly": true
              },
              "is_numeric": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a numeric value.",
                "readOnly": true
              },
              "enumerations": {
                "description": "An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldEnumeration"
                },
                "readOnly": true
              },
              "sortable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be sorted.",
                "readOnly": true
              },
              "value_format": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "If specified, the LookML value format string for formatting values of this field.",
                "readOnly": true
              },
              "has_allowed_values": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field has a set of allowed_values specified in LookML.",
                "readOnly": true
              },
              "suggestions": {
                "description": "If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "requires_refresh_on_sort": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort.",
                "readOnly": true
              },
              "is_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a filter.",
                "readOnly": true
              },
              "sql": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "readOnly": true
              },
              "suggest_explore": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the explore to base suggest queries from.",
                "readOnly": true
              },
              "measure": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a measure.",
                "readOnly": true
              },
              "fiscal_month_offset": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to.",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "dimensions": {
          "description": "Array of dimensions",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "is_timeframe": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a time value.",
                "readOnly": true
              },
              "can_time_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be time filtered.",
                "readOnly": true
              },
              "primary_key": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the field represents a primary key.",
                "readOnly": true
              },
              "lookml_link": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A URL linking to the definition of this field in the LookML IDE.",
                "readOnly": true
              },
              "field_group_variant": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context.",
                "readOnly": true
              },
              "view": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the view this field belongs to.",
                "readOnly": true
              },
              "project_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the project this field is defined in.",
                "readOnly": true
              },
              "default_filter_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The default value that this field uses when filtering. Null if there is no default value.",
                "readOnly": true
              },
              "category": {
                "x-looker-values": [
                  "parameter",
                  "filter",
                  "measure",
                  "dimension"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field category Valid values are: \"parameter\", \"filter\", \"measure\", \"dimension\".",
                "readOnly": true
              },
              "can_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether it's possible to filter on this field.",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified name of the field.",
                "readOnly": true
              },
              "tags": {
                "description": "An array of arbitrary string tags provided in the model for this field.",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "suggest_dimension": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the dimension to base suggest queries from.",
                "readOnly": true
              },
              "label_short": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the field, without the view label.",
                "readOnly": true
              },
              "source_file_path": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The fully-qualified path of the project file this field is defined in.",
                "readOnly": true
              },
              "suggestable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not suggestions are possible for this field.",
                "readOnly": true
              },
              "user_attribute_filter_types": {
                "items": {
                  "type": "string"
                },
                "description": "An array of user attribute types that are allowed to be used in filters on this field. Valid values are: \"advanced_filter_string\", \"advanced_filter_number\", \"advanced_filter_datetime\", \"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\".",
                "readOnly": true,
                "x-looker-values": [
                  "advanced_filter_string",
                  "advanced_filter_number",
                  "advanced_filter_datetime",
                  "string",
                  "number",
                  "datetime",
                  "yesno",
                  "zipcode"
                ],
                "x-looker-nullable": false,
                "type": "array"
              },
              "is_fiscal": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field represents a fiscal time value.",
                "readOnly": true
              },
              "week_start_day": {
                "x-looker-values": [
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the starting day of the week. Valid values are: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".",
                "readOnly": true
              },
              "error": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "An error message indicating a problem with the definition of this field. If there are no errors, this will be null.",
                "readOnly": true
              },
              "scope": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML scope this field belongs to. The scope is typically the field's view.",
                "readOnly": true
              },
              "permanent": {
                "x-looker-nullable": true,
                "type": "boolean",
                "description": "Whether this field can be removed from a query.",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The LookML type of the field.",
                "readOnly": true
              },
              "sql_case": {
                "description": "An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldSqlCase"
                },
                "readOnly": true
              },
              "map_layer": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldMapLayer",
                "description": "If applicable, a map layer this field is associated with.",
                "readOnly": true
              },
              "source_file": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The path portion of source_file_path.",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "strict_value_format": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If yes, the field will not be localized with the user attribute number_format. Defaults to no",
                "readOnly": true
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field should be hidden from the user interface.",
                "readOnly": true
              },
              "dynamic": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field was specified in \"dynamic_fields\" and is not part of the model.",
                "readOnly": true
              },
              "align": {
                "x-looker-values": [
                  "left",
                  "right"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: \"left\", \"right\".",
                "readOnly": true
              },
              "field_group_label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI.",
                "readOnly": true
              },
              "time_interval": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookmlModelExploreFieldTimeInterval",
                "description": "Details on the time interval this field represents, if it is_timeframe.",
                "readOnly": true
              },
              "view_label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The human-readable label of the view the field belongs to.",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Fully-qualified human-readable label of the field.",
                "readOnly": true
              },
              "label_from_parameter": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the parameter that will provide a parameterized label for this field, if available in the current context.",
                "readOnly": true
              },
              "fill_style": {
                "x-looker-values": [
                  "enumeration",
                  "range"
                ],
                "x-looker-nullable": true,
                "type": "string",
                "description": "The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: \"enumeration\", \"range\".",
                "readOnly": true
              },
              "parameter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a parameter.",
                "readOnly": true
              },
              "is_numeric": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is of a type that represents a numeric value.",
                "readOnly": true
              },
              "enumerations": {
                "description": "An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LookmlModelExploreFieldEnumeration"
                },
                "readOnly": true
              },
              "sortable": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field can be sorted.",
                "readOnly": true
              },
              "value_format": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "If specified, the LookML value format string for formatting values of this field.",
                "readOnly": true
              },
              "has_allowed_values": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field has a set of allowed_values specified in LookML.",
                "readOnly": true
              },
              "suggestions": {
                "description": "If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "requires_refresh_on_sort": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort.",
                "readOnly": true
              },
              "is_filter": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a filter.",
                "readOnly": true
              },
              "sql": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.",
                "readOnly": true
              },
              "suggest_explore": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "The name of the explore to base suggest queries from.",
                "readOnly": true
              },
              "measure": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether this field is a measure.",
                "readOnly": true
              },
              "fiscal_month_offset": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to.",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ContentValidationSpace": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of this space",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "A unique id",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "DBConnectionTestResult": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of test",
          "readOnly": true
        },
        "connection_string": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "JDBC connection string. (only populated in the 'connect' test)",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Result code of test",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Result message of test",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreFieldSqlCase": {
      "properties": {
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL Case label value",
          "readOnly": true
        },
        "condition": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL Case condition expression",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ModelSet": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "models": {
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "built_in": {
          "x-looker-nullable": false,
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of ModelSet"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "all_access": {
          "x-looker-nullable": false,
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "RenderTask": {
      "properties": {
        "status_detail": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Additional information about the current status",
          "readOnly": true
        },
        "lookml_dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of lookml dashboard to render",
          "readOnly": true
        },
        "dashboard_style": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dashboard layout style: single_column or tiled",
          "readOnly": true
        },
        "query_runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Number of seconds elapsed running queries",
          "readOnly": true,
          "format": "double"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Id of this render task",
          "readOnly": true
        },
        "finalized_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date/Time render task was completed",
          "readOnly": true
        },
        "width": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Output width in pixels",
          "readOnly": true,
          "format": "int64"
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of query to render",
          "readOnly": true,
          "format": "int64"
        },
        "result_format": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Output format: pdf, png, or jpg",
          "readOnly": true
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The user account permissions in which the render task will execute",
          "readOnly": true,
          "format": "int64"
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date/Time render task was created",
          "readOnly": true
        },
        "height": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Output height in pixels. Flowed layouts may ignore this value.",
          "readOnly": true,
          "format": "int64"
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of look to render",
          "readOnly": true,
          "format": "int64"
        },
        "dashboard_filters": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Filter values to apply to the dashboard queries, in URL query format",
          "readOnly": true
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of dashboard to render",
          "readOnly": true,
          "format": "int64"
        },
        "runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Total seconds elapsed for render task",
          "readOnly": true,
          "format": "double"
        },
        "render_runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Number of seconds elapsed rendering data",
          "readOnly": true,
          "format": "double"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "PermissionSet": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "permissions": {
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "built_in": {
          "x-looker-nullable": false,
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of PermissionSet"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "all_access": {
          "x-looker-nullable": false,
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "Permission": {
      "properties": {
        "parent": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dependency parent symbol",
          "readOnly": true
        },
        "permission": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Permission symbol",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreAccessFilter": {
      "properties": {
        "user_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User attribute name",
          "readOnly": true
        },
        "field": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Field to be filtered",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LDAPConfigTestIssue": {
      "properties": {
        "severity": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Severity of the issue. Error or Warning",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Message describing the issue",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreError": {
      "properties": {
        "field_error": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is this a field error",
          "readOnly": true
        },
        "details": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Details",
          "readOnly": true,
          "format": "any"
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error Message",
          "readOnly": true
        },
        "error_pos": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error source location",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ScheduledPlan": {
      "properties": {
        "user": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/UserPublic",
          "description": "User who owns this ScheduledPlan",
          "readOnly": true
        },
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the ScheduledPlan is enabled"
        },
        "require_no_results": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Delivery should occur if the dashboard look does not return results"
        },
        "require_results": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Delivery should occur if running the dashboard or look returns results"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of a dashboard",
          "format": "int64"
        },
        "lookml_dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of a LookML dashboard"
        },
        "crontab": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Vixie-Style crontab specification when to run"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "run_once": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the plan in question should only be run once (usually for testing)"
        },
        "include_links": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether links back to Looker should be included in this ScheduledPlan"
        },
        "embed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this schedule is in an embed context or not"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date and time when ScheduledPlan was created",
          "readOnly": true,
          "format": "date-time"
        },
        "dashboard_filters": {
          "x-looker-deprecated": true,
          "x-looker-nullable": true,
          "type": "string",
          "description": "(DEPRECATED) Alias for filters_string field"
        },
        "require_change": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Delivery should occur if data have changed since the last run"
        },
        "color_theme": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Color scheme of the dashboard if applicable"
        },
        "pdf_landscape": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the paper should be landscape"
        },
        "long_tables": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not to expand table vis to full length"
        },
        "next_run_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When the ScheduledPlan will next run (null if running once)",
          "readOnly": true,
          "format": "date-time"
        },
        "last_run_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When the ScheduledPlan was last run",
          "readOnly": true,
          "format": "date-time"
        },
        "updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date and time when ScheduledPlan was last updated",
          "readOnly": true,
          "format": "date-time"
        },
        "run_as_recipient": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether schedule is ran as recipient (only applicable for email recipients)"
        },
        "send_all_results": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Will run an unlimited query and send all results."
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title",
          "readOnly": true
        },
        "pdf_paper_size": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The size of paper a PDF should be rendered for"
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Query id"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id which owns this ScheduledPlan",
          "format": "int64"
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of a look",
          "format": "int64"
        },
        "timezone": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timezone for interpreting the specified crontab (default is Looker instance timezone)"
        },
        "filters_string": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Query string to run look or dashboard with"
        },
        "datagroup": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)"
        },
        "scheduled_plan_destination": {
          "description": "Scheduled plan destinations",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "format": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The data format to send to the given destination. Supported formats vary by destination, but include: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\""
              },
              "parameters": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "JSON object containing parameters for external scheduling. For Amazon S3, this requires keys and values for access_key_id and region. For SFTP, this requires a key and value for username."
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "looker_recipient": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the recipient is a Looker user on the current instance (only applicable for email recipients)",
                "readOnly": true
              },
              "scheduled_plan_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of a scheduled plan you own",
                "format": "int64"
              },
              "address": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Address for recipient. For email e.g. 'user@example.com'. For webhooks e.g. 'https://domain/path'. For Amazon S3 e.g. 's3://bucket-name/path/'. For SFTP e.g. 'sftp://host-name/path/'. "
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Optional message to be included in scheduled emails"
              },
              "secret_parameters": {
                "description": "(Write-Only) JSON object containing secret parameters for external scheduling. For Amazon S3, this requires a key and value for secret_access_key. For SFTP, this requires a key and value for password.",
                "x-looker-nullable": true,
                "type": "string",
                "x-looker-write-only": true
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of the address ('email', 'webhook', 's3', or 'sftp')"
              },
              "apply_vis": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether visualization options are applied to the results."
              },
              "apply_formatting": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Are values formatted? (containing currency symbols, digit separators, etc."
              }
            },
            "x-looker-status": "beta"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "LookWithQuery": {
      "properties": {
        "public": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Public"
        },
        "public_slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public Slug",
          "readOnly": true
        },
        "image_embed_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Image Embed Url",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description"
        },
        "user": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/UserIdOnly",
          "description": "User",
          "readOnly": true
        },
        "is_run_on_load": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "auto-run query when Look viewed"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/SpaceBase",
          "description": "Space of this Look",
          "readOnly": true
        },
        "content_favorite_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content Favorite Id",
          "readOnly": true,
          "format": "int64"
        },
        "last_accessed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was last accessed by any user",
          "readOnly": true,
          "format": "date-time"
        },
        "deleted": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not a look is 'soft' deleted."
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Url",
          "readOnly": true
        },
        "google_spreadsheet_formula": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Google Spreadsheet Formula",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was created.",
          "readOnly": true,
          "format": "date-time"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "last_updater_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that last updated the look.",
          "readOnly": true,
          "format": "int64"
        },
        "deleter_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that deleted the look.",
          "readOnly": true,
          "format": "int64"
        },
        "model": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookModel",
          "description": "Model",
          "readOnly": true
        },
        "excel_file_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Excel File Url",
          "readOnly": true
        },
        "public_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public Url",
          "readOnly": true
        },
        "updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was updated.",
          "readOnly": true,
          "format": "date-time"
        },
        "space_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Space Id"
        },
        "query": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/Query",
          "description": "Query",
          "readOnly": true
        },
        "last_viewed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time last viewed in the Looker web UI",
          "readOnly": true,
          "format": "date-time"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Look Title"
        },
        "short_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short Url",
          "readOnly": true
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Query Id",
          "format": "int64"
        },
        "deleted_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was deleted.",
          "readOnly": true,
          "format": "date-time"
        },
        "view_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times viewed in the Looker web UI",
          "readOnly": true,
          "format": "int64"
        },
        "embed_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embed Url",
          "readOnly": true
        },
        "favorite_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times favorited",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id",
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreFieldMapLayer": {
      "properties": {
        "url": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "URL to the map layer resource.",
          "readOnly": true
        },
        "extents_json_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Specifies the URL to a JSON file that defines the geographic extents of each region available in the map layer. This data is used to automatically center the map on the available data for visualization purposes. The JSON file must be a JSON object where the keys are the mapping value of the feature (as specified by property_key) and the values are arrays of four numbers representing the west longitude, south latitude, east longitude, and north latitude extents of the region. The object must include a key for every possible value of property_key.",
          "readOnly": true
        },
        "property_label_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Which property from the TopoJSON data to use to label the region. When null, property_key should be used.",
          "readOnly": true
        },
        "format": {
          "x-looker-values": [
            "topojson",
            "vector_tile_region"
          ],
          "x-looker-nullable": false,
          "type": "string",
          "description": "Specifies the data format of the region information. Valid values are: \"topojson\", \"vector_tile_region\".",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of the map layer, as defined in LookML.",
          "readOnly": true
        },
        "feature_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Specifies the name of the TopoJSON object that the map layer references. If not specified, use the first object..",
          "readOnly": true
        },
        "max_zoom_level": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The minimum zoom level that the map layer may be displayed at, for visualizations that support zooming.",
          "readOnly": true,
          "format": "int64"
        },
        "property_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Selects which property from the TopoJSON data to plot against. TopoJSON supports arbitrary metadata for each region. When null, the first matching property should be used.",
          "readOnly": true
        },
        "projection": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The preferred geographic projection of the map layer when displayed in a visualization that supports multiple geographic projections.",
          "readOnly": true
        },
        "min_zoom_level": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "The maximum zoom level that the map layer may be displayed at, for visualizations that support zooming.",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "Folder": {
      "properties": {
        "is_embed_shared_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is the root embed shared folder",
          "readOnly": true
        },
        "is_embed_users_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is the root embed users folder",
          "readOnly": true
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "external_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login",
          "readOnly": true
        },
        "is_shared_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is the root shared folder",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "is_users_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is the root user folder",
          "readOnly": true
        },
        "creator_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id of Creator",
          "readOnly": true,
          "format": "int64"
        },
        "dashboards": {
          "description": "Dashboards",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "query_timezone": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Timezone in which the Dashboard will run by default.",
                "readOnly": true
              },
              "model": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookModel",
                "description": "Model",
                "readOnly": true
              },
              "content_metadata_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of content metadata",
                "readOnly": true,
                "format": "int64"
              },
              "refresh_interval": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds.",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "space": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/SpaceBase",
                "description": "Space",
                "readOnly": true
              },
              "content_favorite_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content Favorite Id",
                "readOnly": true,
                "format": "int64"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Dashboard Title",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "readonly": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Read-only",
                "readOnly": true
              },
              "refresh_interval_to_i": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Refresh Interval in milliseconds",
                "readOnly": true,
                "format": "int64"
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Hidden",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "user_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "looks": {
          "description": "Looks",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "public": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Public"
              },
              "public_slug": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Public Slug",
                "readOnly": true
              },
              "image_embed_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Image Embed Url",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description"
              },
              "user": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/UserIdOnly",
                "description": "User",
                "readOnly": true
              },
              "is_run_on_load": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "auto-run query when Look viewed"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "space": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/SpaceBase",
                "description": "Space of this Look",
                "readOnly": true
              },
              "content_favorite_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content Favorite Id",
                "readOnly": true,
                "format": "int64"
              },
              "last_accessed_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was last accessed by any user",
                "readOnly": true,
                "format": "date-time"
              },
              "deleted": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not a look is 'soft' deleted."
              },
              "dashboards": {
                "description": "Dashboards",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DashboardBase"
                },
                "readOnly": true
              },
              "google_spreadsheet_formula": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Google Spreadsheet Formula",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "created_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was created.",
                "readOnly": true,
                "format": "date-time"
              },
              "content_metadata_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of content metadata",
                "readOnly": true,
                "format": "int64"
              },
              "last_updater_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User that last updated the look.",
                "readOnly": true,
                "format": "int64"
              },
              "deleter_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User that deleted the look.",
                "readOnly": true,
                "format": "int64"
              },
              "model": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookModel",
                "description": "Model",
                "readOnly": true
              },
              "excel_file_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Excel File Url",
                "readOnly": true
              },
              "public_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Public Url",
                "readOnly": true
              },
              "updated_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was updated.",
                "readOnly": true,
                "format": "date-time"
              },
              "space_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Space Id"
              },
              "last_viewed_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time last viewed in the Looker web UI",
                "readOnly": true,
                "format": "date-time"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Look Title"
              },
              "short_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Short Url",
                "readOnly": true
              },
              "query_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Query Id",
                "format": "int64"
              },
              "deleted_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was deleted.",
                "readOnly": true,
                "format": "date-time"
              },
              "view_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times viewed in the Looker web UI",
                "readOnly": true,
                "format": "int64"
              },
              "embed_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Embed Url",
                "readOnly": true
              },
              "favorite_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times favorited",
                "readOnly": true,
                "format": "int64"
              },
              "user_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "User Id",
                "format": "int64"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "child_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Children Count",
          "readOnly": true,
          "format": "int64"
        },
        "is_personal": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is a user's personal folder",
          "readOnly": true
        },
        "is_personal_descendant": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is descendant of a user's personal folder",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Unique Name"
        },
        "is_embed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Folder is an embed folder",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "parent_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Parent"
        }
      },
      "x-looker-status": "beta",
      "required": [
        "name",
        "parent_id"
      ]
    },
    "ValidationError": {
      "properties": {
        "documentation_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Documentation link",
          "readOnly": true,
          "format": "uri"
        },
        "errors": {
          "description": "Error detail array",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "documentation_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Documentation link",
                "readOnly": true,
                "format": "uri"
              },
              "field": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field with error",
                "readOnly": true
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error info message",
                "readOnly": true
              },
              "code": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error code",
                "readOnly": true
              }
            },
            "x-looker-status": "stable",
            "required": [
              "documentation_url"
            ]
          },
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error details",
          "readOnly": true
        }
      },
      "x-looker-status": "stable",
      "required": [
        "message",
        "documentation_url"
      ]
    },
    "SamlGroupWrite": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group in Saml"
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to saml config",
          "readOnly": true,
          "format": "uri"
        },
        "role_ids": {
          "description": "Looker Role Ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "LDAPGroupWrite": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group in LDAP"
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to ldap config",
          "readOnly": true,
          "format": "uri"
        },
        "role_ids": {
          "description": "Looker Role Ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "PasswordConfig": {
      "properties": {
        "min_length": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Minimum number of characters required for a new password.  Must be between 7 and 100",
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "require_special": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Require at least one special character"
        },
        "require_numeric": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Require at least one numeric character"
        },
        "require_upperlower": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Require at least one uppercase and one lowercase letter"
        }
      },
      "x-looker-status": "beta"
    },
    "UserLoginLockout": {
      "properties": {
        "full_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User's name",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User ID",
          "readOnly": true,
          "format": "int64"
        },
        "remote_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Remote ID of user if using LDAP",
          "readOnly": true
        },
        "lockout_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time when lockout was triggered",
          "readOnly": true,
          "format": "date-time"
        },
        "auth_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Authentication method for login failures",
          "readOnly": true
        },
        "fail_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of failures that triggered the lockout",
          "readOnly": true,
          "format": "int64"
        },
        "ip": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "IP address of most recent failed attempt",
          "readOnly": true
        },
        "key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Hash of user's client id",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Email address associated with the user's account",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "LookmlModelExploreJoins": {
      "properties": {
        "view_label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label to display in UI selectors",
          "readOnly": true
        },
        "sql_on": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL ON expression describing the join condition",
          "readOnly": true
        },
        "fields": {
          "description": "Fields of the joined view to pull into this explore",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "relationship": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "many_to_one, one_to_one, one_to_many, many_to_many",
          "readOnly": true
        },
        "outer_only": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Specifies whether all queries must use an outer join",
          "readOnly": true
        },
        "sql_table_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL table name to join",
          "readOnly": true
        },
        "foreign_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the dimension in this explore whose value is in the primary key of the joined view",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of this join (and name of the view to join)",
          "readOnly": true
        },
        "required_joins": {
          "description": "Names of joins that must always be included in SQL queries",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "sql_foreign_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL expression that produces a foreign key",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The join type: left_outer, full_outer, inner, or cross",
          "readOnly": true
        },
        "from": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of view to join",
          "readOnly": true
        },
        "dependent_fields": {
          "description": "Fields referenced by the join",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "Dialect": {
      "properties": {
        "supports_inducer": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is supported with the inducer (i.e. generate from sql)",
          "readOnly": true
        },
        "supports_cost_estimate": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the dialect supports query cost estimates",
          "readOnly": true
        },
        "connection_tests": {
          "description": "Array of names of the tests that can be run on a connection using this dialect",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supports_streaming": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Suports streaming results",
          "readOnly": true
        },
        "persistent_table_distkey": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "PDT distkey column",
          "readOnly": true
        },
        "persistent_table_sortkeys": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "PDT sortkey columns",
          "readOnly": true
        },
        "supports_upload_tables": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the dialect supports uploading tables",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "automatically_run_sql_runner_snippets": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Should SQL Runner snippets automatically be run",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The name of the dialect",
          "readOnly": true
        },
        "persistent_table_indexes": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "PDT index columns",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The human-readable label of the connection",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LDAPUserAttributeRead": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of User Attribute in LDAP",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to ldap config",
          "readOnly": true,
          "format": "uri"
        },
        "user_attributes": {
          "description": "Looker User Attributes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "user_can_view": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Non-admin users can see the values of their attributes and use them in filters"
              },
              "is_system": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Attribute is a system default",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "hidden_value_domain_whitelist": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
              },
              "user_can_edit": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Users can change the value of this attribute for themselves"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of user attribute"
              },
              "value_is_hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If true, users will not be able to view values of this attribute"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
              },
              "default_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Default value for when no value is set on the user"
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Human-friendly label for user attribute"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Required to be in LDAP assertion for login to be allowed to succeed",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "OIDCGroupRead": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group in OIDC",
          "readOnly": true
        },
        "roles": {
          "description": "Looker Roles",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "permission_set_id": {
                "description": "(Write-Only) Id of permission set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "permission_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/PermissionSet",
                "description": "(Read only) Permission set",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "model_set_id": {
                "description": "(Write-Only) Id of model set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "users_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get list of users with this role",
                "readOnly": true,
                "format": "uri"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of Role"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "model_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ModelSet",
                "description": "(Read only) Model set",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ColorCollection": {
      "properties": {
        "categoricalPalettes": {
          "description": "Array of categorical palette definitions",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "colors": {
                "description": "Array of colors in the palette",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique identity string",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Type of palette"
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Label for palette"
              }
            },
            "x-looker-status": "beta"
          }
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "divergingPalettes": {
          "description": "Array of diverging palette definitions",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique identity string",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Type of palette"
              },
              "stops": {
                "description": "Array of ColorStops in the palette",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ColorStop"
                }
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Label for palette"
              }
            },
            "x-looker-status": "beta"
          }
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Label of color collection"
        },
        "sequentialPalettes": {
          "description": "Array of discrete palette definitions",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique identity string",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Type of palette"
              },
              "stops": {
                "description": "Array of ColorStops in the palette",
                "x-looker-nullable": false,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ColorStop"
                }
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Label for palette"
              }
            },
            "x-looker-status": "beta"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "SpaceBase": {
      "properties": {
        "is_embed_shared_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root embed shared space",
          "readOnly": true
        },
        "is_embed_users_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root embed users space",
          "readOnly": true
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "external_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
          "readOnly": true
        },
        "is_shared_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root shared space",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "is_users_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root user space",
          "readOnly": true
        },
        "creator_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id of Creator",
          "readOnly": true,
          "format": "int64"
        },
        "child_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Children Count",
          "readOnly": true,
          "format": "int64"
        },
        "is_personal": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is a user's personal space",
          "readOnly": true
        },
        "is_personal_descendant": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is descendant of a user's personal space",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Unique Name",
          "readOnly": true
        },
        "is_embed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is an embed space",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "parent_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Parent"
        }
      },
      "x-looker-status": "beta",
      "required": [
        "parent_id"
      ]
    },
    "ImportedProject": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dependency name",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Url for a remote dependency",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "ref": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Ref for a remote dependency",
          "readOnly": true
        },
        "is_remote": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Flag signifying if a dependency is remote or local",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "DashboardLayout": {
      "properties": {
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "active": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Active"
        },
        "dashboard_title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title extracted from the dashboard this layout represents.",
          "readOnly": true
        },
        "dashboard_layout_components": {
          "description": "Components",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "element_title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Dashboard element title, extracted from the Dashboard Element.",
                "readOnly": true
              },
              "row": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Row",
                "format": "int64"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "dashboard_element_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Id Of Dashboard Element"
              },
              "deleted": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the dashboard layout component is deleted",
                "readOnly": true
              },
              "width": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Width",
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "column": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Column",
                "format": "int64"
              },
              "element_title_hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the dashboard element title is displayed.",
                "readOnly": true
              },
              "height": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Height",
                "format": "int64"
              },
              "vis_type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Visualization type, extracted from a query's vis_config",
                "readOnly": true
              },
              "dashboard_layout_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Id of Dashboard Layout"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type"
        },
        "column_width": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Column Width",
          "format": "int64"
        },
        "deleted": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the dashboard layout is deleted.",
          "readOnly": true
        },
        "width": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Width",
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "LookmlModelExploreSupportedMeasureType": {
      "properties": {
        "dimension_type": {
          "x-looker-nullable": true,
          "type": "string",
          "readOnly": true
        },
        "measure_types": {
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlTest": {
      "properties": {
        "model_name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of model containing this test.",
          "readOnly": true
        },
        "line": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Line number of this test in LookML.",
          "readOnly": true,
          "format": "int64"
        },
        "file": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of the LookML file containing this test.",
          "readOnly": true
        },
        "query_url_params": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The url parameters that can be used to reproduce this test's query on an explore.",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of this test.",
          "readOnly": true
        },
        "explore_name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of the explore this test runs a query against",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "SqlQuery": {
      "properties": {
        "explore_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Explore page URL for this SQL query",
          "readOnly": true
        },
        "last_run_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The most recent time this query was run",
          "readOnly": true
        },
        "run_count": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Number of times this query has been run",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "creator": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/UserPublic",
          "description": "User who created this SQL query",
          "readOnly": true
        },
        "plaintext": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Should this query be rendered as plain text",
          "readOnly": true
        },
        "last_runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Number of seconds this query took to run the most recent time it was run",
          "readOnly": true,
          "format": "float"
        },
        "model_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Model name this query uses",
          "readOnly": true
        },
        "sql": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "SQL query text",
          "readOnly": true
        },
        "slug": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The identifier of the SQL query",
          "readOnly": true
        },
        "connection": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/DBConnectionBase",
          "description": "Connection this query uses",
          "readOnly": true
        },
        "browser_limit": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Maximum number of rows this query will display on the SQL Runner page",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "RepositoryCredential": {
      "properties": {
        "root_project_id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Root project Id",
          "readOnly": true
        },
        "git_password": {
          "description": "(Write-Only) Git password for HTTPS authentication.",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "remote_url": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Git remote repository url",
          "readOnly": true,
          "format": "uri"
        },
        "git_username": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Git username for HTTPS authentication."
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "ssh_public_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public deploy key for SSH authentication."
        },
        "is_configured": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the credentials have been configured for the Git Repository.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "LookWithDashboards": {
      "properties": {
        "public": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Public"
        },
        "public_slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public Slug",
          "readOnly": true
        },
        "image_embed_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Image Embed Url",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description"
        },
        "user": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/UserIdOnly",
          "description": "User",
          "readOnly": true
        },
        "is_run_on_load": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "auto-run query when Look viewed"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/SpaceBase",
          "description": "Space of this Look",
          "readOnly": true
        },
        "content_favorite_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content Favorite Id",
          "readOnly": true,
          "format": "int64"
        },
        "last_accessed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was last accessed by any user",
          "readOnly": true,
          "format": "date-time"
        },
        "deleted": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not a look is 'soft' deleted."
        },
        "dashboards": {
          "description": "Dashboards",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "query_timezone": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Timezone in which the Dashboard will run by default.",
                "readOnly": true
              },
              "model": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookModel",
                "description": "Model",
                "readOnly": true
              },
              "content_metadata_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of content metadata",
                "readOnly": true,
                "format": "int64"
              },
              "refresh_interval": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds.",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "space": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/SpaceBase",
                "description": "Space",
                "readOnly": true
              },
              "content_favorite_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content Favorite Id",
                "readOnly": true,
                "format": "int64"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Dashboard Title",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "readonly": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Read-only",
                "readOnly": true
              },
              "refresh_interval_to_i": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Refresh Interval in milliseconds",
                "readOnly": true,
                "format": "int64"
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Hidden",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "user_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "google_spreadsheet_formula": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Google Spreadsheet Formula",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was created.",
          "readOnly": true,
          "format": "date-time"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "last_updater_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that last updated the look.",
          "readOnly": true,
          "format": "int64"
        },
        "deleter_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that deleted the look.",
          "readOnly": true,
          "format": "int64"
        },
        "model": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookModel",
          "description": "Model",
          "readOnly": true
        },
        "excel_file_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Excel File Url",
          "readOnly": true
        },
        "public_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public Url",
          "readOnly": true
        },
        "updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was updated.",
          "readOnly": true,
          "format": "date-time"
        },
        "space_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Space Id"
        },
        "last_viewed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time last viewed in the Looker web UI",
          "readOnly": true,
          "format": "date-time"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Look Title"
        },
        "short_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short Url",
          "readOnly": true
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Query Id",
          "format": "int64"
        },
        "deleted_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was deleted.",
          "readOnly": true,
          "format": "date-time"
        },
        "view_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times viewed in the Looker web UI",
          "readOnly": true,
          "format": "int64"
        },
        "embed_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embed Url",
          "readOnly": true
        },
        "favorite_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times favorited",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id",
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "Timezone": {
      "properties": {
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timezone",
          "readOnly": true
        },
        "group": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timezone group (e.g Common, Other, etc.)",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description of timezone",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "CredentialsOIDC": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "oidc_user_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "OIDC OP's Unique ID for this user",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LDAPUserAttributeWrite": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of User Attribute in LDAP"
        },
        "user_attribute_ids": {
          "description": "Looker User Attribute Ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to ldap config",
          "readOnly": true,
          "format": "uri"
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Required to be in LDAP assertion for login to be allowed to succeed"
        }
      },
      "x-looker-status": "stable"
    },
    "DataActionForm": {
      "properties": {
        "state": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/DataActionUserState",
          "description": "User state",
          "readOnly": true
        },
        "fields": {
          "description": "Array of form fields.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "options": {
                "description": "If the form type is 'select', a list of options to be selected from.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DataActionFormSelectOption"
                },
                "readOnly": true
              },
              "oauth_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The URL for an oauth link, if type is 'oauth_link'.",
                "readOnly": true
              },
              "default": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Default value of the field.",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description of field",
                "readOnly": true
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the field is required. This is a user-interface hint. A user interface displaying this form should not submit it without a value for this field. The action server must also perform this validation.",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of field.",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Human-readable label",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "CreateDashboardRenderTask": {
      "properties": {
        "dashboard_filters": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Filter values to apply to the dashboard queries, in URL query format"
        },
        "dashboard_style": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dashboard layout style: single_column or tiled"
        }
      },
      "x-looker-status": "beta"
    },
    "OIDCGroupWrite": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group in OIDC"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "role_ids": {
          "description": "Looker Role Ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "IntegrationParam": {
      "properties": {
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The current value of the parameter. Always null if the value is sensitive. When writing, null values will be ignored. Set the value to an empty string to clear it."
        },
        "user_attribute_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When present, the param's value comes from this user attribute instead of the 'value' parameter. Set to null to use the 'value'."
        },
        "has_value": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the parameter has a value set.",
          "readOnly": true
        },
        "sensitive": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the parameter contains sensitive data like API credentials. If unspecified, this defaults to true.",
          "readOnly": true
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the parameter is required to be set to use the destination. If unspecified, this defaults to false.",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the parameter.",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short description of the parameter.",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label of the parameter.",
          "readOnly": true
        },
        "per_user": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "When true, this parameter must be assigned to a user attribute in the admin panel (instead of a constant value), and that value may be updated by the user as part of the integration flow.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "LDAPConfigTestResult": {
      "properties": {
        "user": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LDAPUser",
          "description": "User details from LDAP server for auth tests",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to ldap config",
          "readOnly": true,
          "format": "uri"
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Test status code: always 'success' or 'error'",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short human readable test about the result",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "issues": {
          "description": "Array of issues/considerations about the result",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "severity": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Severity of the issue. Error or Warning",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Message describing the issue",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "trace": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A more detailed trace of incremental results during auth tests",
          "readOnly": true
        },
        "details": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Additional details for error cases",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreFieldTimeInterval": {
      "properties": {
        "name": {
          "x-looker-values": [
            "day",
            "hour",
            "minute",
            "month",
            "year"
          ],
          "x-looker-nullable": false,
          "type": "string",
          "description": "The type of time interval this field represents a grouping of. Valid values are: \"day\", \"hour\", \"minute\", \"month\", \"year\".",
          "readOnly": true
        },
        "count": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "The number of intervals this field represents a grouping of.",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "DBConnection": {
      "properties": {
        "query_timezone": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timezone to use in queries"
        },
        "tmp_db_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of temporary database (if used)"
        },
        "dialect_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "(Read/Write) SQL Dialect name"
        },
        "port": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Port number on server"
        },
        "after_connect_statements": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
        },
        "pdt_context_override": {
          "$ref": "#/definitions/DBConnectionOverride",
          "description": "db_connection_override for this connection in the `pdt` maintenance context",
          "x-looker-nullable": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "last_reap_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Unix timestamp at start of last completed PDT reap process",
          "readOnly": true
        },
        "example": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is this an example connection",
          "readOnly": true
        },
        "maintenance_cron": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Cron string specifying when maintenance such as PDT trigger checks and drops should be performed"
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Creation date for this connection",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of the connection. Also used as the unique identifier"
        },
        "uses_oauth": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the connection uses OAuth for authentication.",
          "readOnly": true
        },
        "ssl": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Use SSL/TLS when connecting to server"
        },
        "pool_timeout": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Pool Timeout",
          "format": "int64"
        },
        "user_db_credentials": {
          "x-looker-nullable": true,
          "type": "boolean",
          "description": "(Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password"
        },
        "jdbc_additional_params": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Additional params to add to JDBC connection string"
        },
        "database": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Database name"
        },
        "dialect": {
          "x-looker-nullable": false,
          "$ref": "#/definitions/Dialect",
          "description": "(Read-only) SQL Dialect details",
          "readOnly": true
        },
        "password": {
          "description": "(Write-Only) Password for server authentication",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "verify_ssl": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Verify the SSL"
        },
        "certificate": {
          "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "max_connections": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Maximum number of concurrent connection to use",
          "format": "int64"
        },
        "user_attribute_fields": {
          "description": "Fields whose values map to user attribute names",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Username for server authentication"
        },
        "snippets": {
          "description": "SQL Runner snippets for this connection",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Name of the snippet",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "sql": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "SQL text of the snippet",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Label of the snippet",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of user who last modified this connection configuration",
          "readOnly": true
        },
        "sql_runner_precache_tables": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Precache tables in the SQL Runner"
        },
        "last_regen_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Unix timestamp at start of last completed PDT trigger check process",
          "readOnly": true
        },
        "file_type": {
          "description": "(Write-Only) Certificate keyfile type - .json or .p12",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "schema": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Scheme name"
        },
        "db_timezone": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time zone of database"
        },
        "max_billing_gigabytes": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Maximum size of query in GBs (BigQuery only, can be a user_attribute name)"
        },
        "host": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Host name/address of server"
        }
      },
      "x-looker-status": "stable"
    },
    "HomepageItem": {
      "properties": {
        "use_custom_url": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The actual description for display",
          "readOnly": true
        },
        "custom_description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Custom description entered by the user, if present"
        },
        "lookml_dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LookML Dashboard to base this item on"
        },
        "custom_title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Custom title entered by the user, if present"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "content_favorite_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content favorite id associated with the item this content is based on",
          "readOnly": true,
          "format": "int64"
        },
        "custom_image_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Custom image_url entered by the user, if present",
          "readOnly": true
        },
        "order": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "An arbitrary integer representing the sort order within the section",
          "format": "int64"
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The actual url for display",
          "readOnly": true
        },
        "use_custom_image": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
        },
        "section_fetch_time": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Number of seconds it took to fetch the section this item is in",
          "readOnly": true,
          "format": "float"
        },
        "custom_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Custom url entered by the user, if present"
        },
        "content_created_by": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user who created the content this item is based on",
          "readOnly": true
        },
        "use_custom_title": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
        },
        "content_updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Last time the content that this item is based on was updated",
          "readOnly": true
        },
        "location": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The container folder name of the content",
          "readOnly": true
        },
        "view_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times content has been viewed, if present",
          "readOnly": true,
          "format": "int64"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content metadata id associated with the item this content is based on",
          "readOnly": true,
          "format": "int64"
        },
        "image_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The actual image_url for display",
          "readOnly": true
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Dashboard to base this item on",
          "format": "int64"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The actual title for display",
          "readOnly": true
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Look to base this item on",
          "format": "int64"
        },
        "homepage_section_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Associated Homepage Section"
        },
        "custom_image_data_base64": {
          "description": "(Write-Only) base64 encoded image data",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "favorite_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times content has been favorited, if present",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "use_custom_description": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
        }
      },
      "x-looker-status": "beta"
    },
    "GitConnectionTestResult": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "A short string, uniquely naming this test",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Either 'pass' or 'fail'",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Additional data from the test",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "CredentialsGoogle": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "domain": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Google domain",
          "readOnly": true
        },
        "google_user_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Google's Unique ID for this user",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "UserAttributeWithValue": {
      "properties": {
        "user_attribute_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User Attribute",
          "readOnly": true,
          "format": "int64"
        },
        "user_can_edit": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Can the user set this value",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Value of attribute for user"
        },
        "value_is_hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user attribute",
          "readOnly": true
        },
        "rank": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Precedence for setting value on user (lowest wins)",
          "readOnly": true,
          "format": "int64"
        },
        "source": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "How user got this value for this attribute",
          "readOnly": true
        },
        "hidden_value_domain_whitelist": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "If this user attribute is hidden, whitelist of destinations to which it may be sent.",
          "readOnly": true
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User",
          "readOnly": true,
          "format": "int64"
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Human-friendly label for user attribute",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "User": {
      "properties": {
        "first_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "First name"
        },
        "credentials_api3": {
          "description": "API 3 credentials",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "is_disabled": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Has this credential been disabled?",
                "readOnly": true
              },
              "created_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Timestamp for the creation of this credential",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Short name for the type of this kind of credential",
                "readOnly": true
              },
              "client_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "API key client_id",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "presumed_looker_employee": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "User is identified as an employee of Looker",
          "readOnly": true
        },
        "credentials_saml": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsSaml",
          "description": "Saml auth credentials",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "group_ids": {
          "description": "Array of ids of the groups for this user",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "readOnly": true
        },
        "locale": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example."
        },
        "verified_looker_employee": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "User is identified as an employee of Looker who has been verified via Looker corporate authentication",
          "readOnly": true
        },
        "credentials_email": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsEmail",
          "description": "Email/Password login credentials",
          "readOnly": true
        },
        "roles_externally_managed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.",
          "readOnly": true
        },
        "credentials_oidc": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsOIDC",
          "description": "OpenID Connect auth credentials",
          "readOnly": true
        },
        "display_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Full name for display (available only if both first_name and last_name are set)",
          "readOnly": true
        },
        "avatar_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "URL for the avatar image (may be generic)",
          "readOnly": true,
          "format": "uri"
        },
        "credentials_totp": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsTotp",
          "description": "Two-factor credentials",
          "readOnly": true
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Account has been disabled"
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "credentials_ldap": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsLDAP",
          "description": "LDAP credentials",
          "readOnly": true
        },
        "last_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Last name"
        },
        "sessions": {
          "description": "Active sessions",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "city": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "City component of user location (derived from IP address)",
                "readOnly": true
              },
              "browser": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "User's browser type",
                "readOnly": true
              },
              "sudo_user_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Actual user in the case when this session represents one user sudo'ing as another",
                "readOnly": true,
                "format": "int64"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "credentials_type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of credentials used for logging in this session",
                "readOnly": true
              },
              "state": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "State component of user location (derived from IP address)",
                "readOnly": true
              },
              "extended_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time when this session was last extended by the user",
                "readOnly": true
              },
              "operating_system": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "User's Operating System",
                "readOnly": true
              },
              "country": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Country component of user location (derived from IP address)",
                "readOnly": true
              },
              "ip_address": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "IP address of user when this session was initiated",
                "readOnly": true
              },
              "expires_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time when this session will expire",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "extended_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times this session was extended",
                "readOnly": true,
                "format": "int64"
              },
              "created_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time when this session was initiated",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "ui_state": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Per user dictionary of undocumented state information owned by the Looker UI.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "home_space_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "ID string for user's home space"
        },
        "models_dir_validated": {
          "x-looker-nullable": true,
          "type": "boolean",
          "description": "User's dev workspace has been checked for presence of applicable production projects"
        },
        "embed_group_space_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login",
          "readOnly": true,
          "format": "int64"
        },
        "looker_versions": {
          "description": "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "credentials_google": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsGoogle",
          "description": "Google auth credentials",
          "readOnly": true
        },
        "personal_space_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "ID of user's personal space",
          "readOnly": true,
          "format": "int64"
        },
        "credentials_embed": {
          "description": "Embed credentials",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "external_group_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Embedder's id for a group to which this user was added during the most recent login",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Short name for the type of this kind of credential",
                "readOnly": true
              },
              "created_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Timestamp for the creation of this credential",
                "readOnly": true
              },
              "external_user_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Embedder's unique id for the user",
                "readOnly": true
              },
              "logged_in_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Timestamp for most recent login using credential",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "is_disabled": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Has this credential been disabled?",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "credentials_looker_openid": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/CredentialsLookerOpenid",
          "description": "LookerOpenID credentials. Used for login by Looker Analysts",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "role_ids": {
          "description": "Array of ids of the roles for this user",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookBasic": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Look Title",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "Theme": {
      "properties": {
        "settings": {
          "$ref": "#/definitions/ThemeSettings",
          "description": "Hash of name/value pairs for theme settings. These names get validated.",
          "x-looker-nullable": false
        },
        "end_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for when this theme expires. Null=never",
          "format": "date-time"
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of theme. Can only be alphanumeric and underscores."
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "begin_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for when this theme becomes active. Null=always",
          "format": "date-time"
        }
      },
      "x-looker-status": "beta"
    },
    "CredentialsLDAP": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "ldap_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP Unique ID for this user",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "ldap_dn": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP Distinguished name for this user (as-of the last login)",
          "readOnly": true
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreConditionallyFilter": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Value",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "AccessToken": {
      "properties": {
        "access_token": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Access Token used for API calls",
          "readOnly": true
        },
        "token_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of Token",
          "readOnly": true
        },
        "expires_in": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of seconds before the token expires",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "ContentView": {
      "properties": {
        "last_viewed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date the piece of content was last viewed",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "view_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times piece of content was viewed",
          "readOnly": true,
          "format": "int64"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content metadata id of the Look or Dashboard",
          "readOnly": true,
          "format": "int64"
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of viewed Look",
          "readOnly": true,
          "format": "int64"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of the viewed Dashboard",
          "readOnly": true,
          "format": "int64"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "start_of_week_date": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Week start date for the view and favorite count during that given week",
          "readOnly": true
        },
        "favorite_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times piece of content was favorited",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of user content was viewed by",
          "readOnly": true,
          "format": "int64"
        },
        "group_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of group content was viewed by",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "DashboardFilter": {
      "properties": {
        "listens_to_filters": {
          "description": "Array of listeners for faceted filters",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Model of filter (required if type = field)"
        },
        "allow_multiple_values": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the filter allows multiple filter values"
        },
        "explore": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Explore of filter (required if type = field)"
        },
        "row": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Display order of this filter relative to other filters",
          "format": "int64"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "dimension": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dimension of filter (required if type = field)"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title of filter"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the filter requires a value to run the dashboard"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of filter"
        },
        "ui_config": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
          "additionalProperties": {
            "type": "string",
            "format": "any"
          }
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of filter: one of date, number, string, or field"
        },
        "field": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Field information",
          "readOnly": true,
          "additionalProperties": {
            "type": "string",
            "format": "any"
          }
        },
        "default_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default value of filter"
        }
      },
      "x-looker-status": "beta",
      "required": [
        "name",
        "title",
        "type"
      ]
    },
    "DataActionUserState": {
      "properties": {
        "data": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User state data",
          "readOnly": true
        },
        "refresh_time": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Time in seconds until the state needs to be refreshed",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "Datagroup": {
      "properties": {
        "triggered_at": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "UNIX timestamp at which this entry became triggered. Cannot be in the future.",
          "format": "int64"
        },
        "model_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the model containing the datagroup. Unique when combined with name.",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "UNIX timestamp at which this entry was created.",
          "readOnly": true,
          "format": "int64"
        },
        "stale_before": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "UNIX timestamp before which cache entries are considered stale. Cannot be in the future.",
          "format": "int64"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the datagroup. Unique when combined with model_name.",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "ID of the datagroup. Also used as the unique identifier.",
          "readOnly": true,
          "format": "int64"
        },
        "trigger_check_at": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "UNIX timestamp at which this entry trigger was last checked.",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "trigger_error": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The message returned with the error of the last trigger check.",
          "readOnly": true
        },
        "trigger_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The value of the trigger when last checked.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "ContentValidationDashboardFilter": {
      "properties": {
        "model_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Model name of filter",
          "readOnly": true
        },
        "explore": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Explore of filter",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of filter",
          "readOnly": true
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of filter: one of date, number, string, or field",
          "readOnly": true
        },
        "dimension": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dimension of filter",
          "readOnly": true
        },
        "default_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default value of filter",
          "readOnly": true
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title of filter",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "Project": {
      "properties": {
        "git_password": {
          "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "folders_enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true, folders are enabled for this project"
        },
        "validation_required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
        },
        "git_username": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Project Id",
          "readOnly": true
        },
        "git_service_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the git service provider"
        },
        "git_password_user_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User attribute name for password in per-user HTTPS authentication."
        },
        "git_username_user_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User attribute name for username in per-user HTTPS authentication."
        },
        "allow_warnings": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
        },
        "uses_git": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true the project is configured with a git repository",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "is_example": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true the project is an example project and cannot be modified",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Project display name"
        },
        "deploy_secret": {
          "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "git_remote_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Git remote repository url",
          "format": "uri"
        },
        "pull_request_mode": {
          "x-looker-values": [
            "off",
            "links",
            "recommended",
            "required"
          ],
          "x-looker-nullable": false,
          "type": "string",
          "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
        },
        "unset_deploy_secret": {
          "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
          "x-looker-nullable": false,
          "type": "boolean",
          "x-looker-write-only": true
        }
      },
      "x-looker-status": "beta"
    },
    "Locale": {
      "properties": {
        "native_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of Locale in its own language",
          "readOnly": true
        },
        "code": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Code for Locale",
          "readOnly": true
        },
        "english_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of Locale in English",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ScheduledPlanDestination": {
      "properties": {
        "format": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The data format to send to the given destination. Supported formats vary by destination, but include: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\""
        },
        "parameters": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "JSON object containing parameters for external scheduling. For Amazon S3, this requires keys and values for access_key_id and region. For SFTP, this requires a key and value for username."
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "looker_recipient": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the recipient is a Looker user on the current instance (only applicable for email recipients)",
          "readOnly": true
        },
        "scheduled_plan_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of a scheduled plan you own",
          "format": "int64"
        },
        "address": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Address for recipient. For email e.g. 'user@example.com'. For webhooks e.g. 'https://domain/path'. For Amazon S3 e.g. 's3://bucket-name/path/'. For SFTP e.g. 'sftp://host-name/path/'. "
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Optional message to be included in scheduled emails"
        },
        "secret_parameters": {
          "description": "(Write-Only) JSON object containing secret parameters for external scheduling. For Amazon S3, this requires a key and value for secret_access_key. For SFTP, this requires a key and value for password.",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of the address ('email', 'webhook', 's3', or 'sftp')"
        },
        "apply_vis": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether visualization options are applied to the results."
        },
        "apply_formatting": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Are values formatted? (containing currency symbols, digit separators, etc."
        }
      },
      "x-looker-status": "beta"
    },
    "RunningQueries": {
      "properties": {
        "user": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/UserPublic",
          "description": "User who initiated the query",
          "readOnly": true
        },
        "dialect": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dialect",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "query_task_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "ID of a Query Task",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Slug",
          "readOnly": true
        },
        "query": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/Query",
          "description": "Query that was run",
          "readOnly": true
        },
        "connection_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Connection ID",
          "readOnly": true
        },
        "cache_key": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Cache Key",
          "readOnly": true
        },
        "node_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Node Id",
          "readOnly": true
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Query Id",
          "readOnly": true
        },
        "runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Number of seconds elapsed running the Query",
          "readOnly": true,
          "format": "double"
        },
        "look": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookBasic",
          "description": "Look of query that was run",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date/Time Query was initiated",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Additional Information(Error message or verbose status)",
          "readOnly": true
        },
        "completed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Date/Time Query was completed",
          "readOnly": true
        },
        "sql": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL text of the query as run",
          "readOnly": true
        },
        "sql_query": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/SqlQuery",
          "description": "SQL Query that was run",
          "readOnly": true
        },
        "connection_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Connection",
          "readOnly": true
        },
        "source": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Source (look, dashboard, queryrunner, explore, etc.)",
          "readOnly": true
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Status description",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "CredentialsEmbed": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "external_group_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embedder's id for a group to which this user was added during the most recent login",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "external_user_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embedder's unique id for the user",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExploreSet": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "value": {
          "description": "Value set",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "Dashboard": {
      "properties": {
        "query_timezone": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timezone in which the Dashboard will run by default."
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description"
        },
        "slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Content Metadata Slug"
        },
        "lookml_link_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match."
        },
        "refresh_interval": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds."
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/SpaceBase",
          "description": "Space",
          "readOnly": true
        },
        "content_favorite_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content Favorite Id",
          "readOnly": true,
          "format": "int64"
        },
        "show_filters_bar": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access?version=6.20)"
        },
        "last_accessed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time the dashboard was last accessed",
          "readOnly": true,
          "format": "date-time"
        },
        "last_viewed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time last viewed in the Looker web UI",
          "readOnly": true,
          "format": "date-time"
        },
        "tile_background_color": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Tile background color"
        },
        "tile_text_color": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Tile text color"
        },
        "text_tile_text_color": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Color of text on text tiles"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "show_title": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Show title"
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Dashboard was created.",
          "readOnly": true,
          "format": "date-time"
        },
        "dashboard_filters": {
          "description": "Filters",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "listens_to_filters": {
                "description": "Array of listeners for faceted filters",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "model": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Model of filter (required if type = field)"
              },
              "allow_multiple_values": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the filter allows multiple filter values"
              },
              "explore": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Explore of filter (required if type = field)"
              },
              "row": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Display order of this filter relative to other filters",
                "format": "int64"
              },
              "dashboard_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Id of Dashboard",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "dimension": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Dimension of filter (required if type = field)"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Title of filter"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the filter requires a value to run the dashboard"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of filter"
              },
              "ui_config": {
                "x-looker-nullable": true,
                "type": "object",
                "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
                "additionalProperties": {
                  "type": "string",
                  "format": "any"
                }
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of filter: one of date, number, string, or field"
              },
              "field": {
                "x-looker-nullable": true,
                "type": "object",
                "description": "Field information",
                "readOnly": true,
                "additionalProperties": {
                  "type": "string",
                  "format": "any"
                }
              },
              "default_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Default value of filter"
              }
            },
            "x-looker-status": "beta",
            "required": [
              "name",
              "title",
              "type"
            ]
          },
          "readOnly": true
        },
        "title_color": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title color"
        },
        "deleter_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that 'soft' deleted the dashboard.",
          "readOnly": true,
          "format": "int64"
        },
        "dashboard_elements": {
          "description": "Elements",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "note_state": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Note State"
              },
              "title_text": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Text tile title"
              },
              "lookml_link_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "LookML link ID",
                "readOnly": true
              },
              "refresh_interval": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Refresh Interval"
              },
              "merge_result_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "ID of merge result"
              },
              "alert_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Count of Alerts associated to a dashboard element",
                "readOnly": true,
                "format": "int64"
              },
              "body_text_as_html": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Text tile body text as Html",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "look": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookWithQuery",
                "description": "Look",
                "readOnly": true
              },
              "note_text_as_html": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Note Text as Html",
                "readOnly": true
              },
              "edit_uri": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only).",
                "readOnly": true,
                "format": "uri"
              },
              "result_maker": {
                "$ref": "#/definitions/ResultMakerWithIdVisConfigAndDynamicFields",
                "description": "Data about the result maker.",
                "x-looker-nullable": true
              },
              "result_maker_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "ID of the ResultMakerLookup entry.",
                "readOnly": true,
                "format": "int64"
              },
              "title_hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether title is hidden"
              },
              "body_text": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Text tile body text"
              },
              "dashboard_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Id of Dashboard"
              },
              "query": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/Query",
                "description": "Query",
                "readOnly": true
              },
              "subtitle_text": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Text tile subtitle text"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Title of dashboard element"
              },
              "query_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id Of Query",
                "format": "int64"
              },
              "refresh_interval_to_i": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Refresh Interval as integer",
                "readOnly": true,
                "format": "int64"
              },
              "look_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Id Of Look"
              },
              "note_display": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Note Display"
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type"
              },
              "note_text": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Note Text"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "model": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookModel",
          "description": "Model",
          "readOnly": true
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "space_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Space"
        },
        "load_configuration": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "configuration option that governs how dashboard loading will happen."
        },
        "deleted": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not a dashboard is 'soft' deleted."
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dashboard Title"
        },
        "view_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times viewed in the Looker web UI",
          "readOnly": true,
          "format": "int64"
        },
        "deleted_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Dashboard was 'soft' deleted.",
          "readOnly": true,
          "format": "date-time"
        },
        "refresh_interval_to_i": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Refresh Interval in milliseconds",
          "readOnly": true,
          "format": "int64"
        },
        "hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Hidden"
        },
        "background_color": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Background color"
        },
        "readonly": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Read-only",
          "readOnly": true
        },
        "edit_uri": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Relative path of URI of LookML file to edit the dashboard (LookML dashboard only).",
          "readOnly": true,
          "format": "uri"
        },
        "dashboard_layouts": {
          "description": "Layouts",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "active": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Active"
              },
              "dashboard_title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Title extracted from the dashboard this layout represents.",
                "readOnly": true
              },
              "dashboard_layout_components": {
                "description": "Components",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DashboardLayoutComponent"
                },
                "readOnly": true
              },
              "dashboard_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Id of Dashboard"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type"
              },
              "column_width": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Column Width",
                "format": "int64"
              },
              "deleted": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not the dashboard layout is deleted.",
                "readOnly": true
              },
              "width": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Width",
                "format": "int64"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "favorite_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times favorited",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "HomepageSection": {
      "properties": {
        "deleted_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time at which this section was deleted.",
          "format": "date-time"
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time at which this section was created.",
          "readOnly": true,
          "format": "date-time"
        },
        "homepage_items": {
          "description": "Items in the homepage section",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "use_custom_url": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the custom url should be used instead of the content url, if the item is associated with content"
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The actual description for display",
                "readOnly": true
              },
              "custom_description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Custom description entered by the user, if present"
              },
              "lookml_dashboard_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "LookML Dashboard to base this item on"
              },
              "custom_title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Custom title entered by the user, if present"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "content_favorite_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content favorite id associated with the item this content is based on",
                "readOnly": true,
                "format": "int64"
              },
              "custom_image_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Custom image_url entered by the user, if present",
                "readOnly": true
              },
              "order": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "An arbitrary integer representing the sort order within the section",
                "format": "int64"
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The actual url for display",
                "readOnly": true
              },
              "use_custom_image": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the custom image should be used instead of the content image, if the item is associated with content"
              },
              "section_fetch_time": {
                "x-looker-nullable": true,
                "type": "number",
                "description": "Number of seconds it took to fetch the section this item is in",
                "readOnly": true,
                "format": "float"
              },
              "custom_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Custom url entered by the user, if present"
              },
              "content_created_by": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of user who created the content this item is based on",
                "readOnly": true
              },
              "use_custom_title": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the custom title should be used instead of the content title, if the item is associated with content"
              },
              "content_updated_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Last time the content that this item is based on was updated",
                "readOnly": true
              },
              "location": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The container folder name of the content",
                "readOnly": true
              },
              "view_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times content has been viewed, if present",
                "readOnly": true,
                "format": "int64"
              },
              "content_metadata_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content metadata id associated with the item this content is based on",
                "readOnly": true,
                "format": "int64"
              },
              "image_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The actual image_url for display",
                "readOnly": true
              },
              "dashboard_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Dashboard to base this item on",
                "format": "int64"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The actual title for display",
                "readOnly": true
              },
              "look_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Look to base this item on",
                "format": "int64"
              },
              "homepage_section_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Associated Homepage Section"
              },
              "custom_image_data_base64": {
                "description": "(Write-Only) base64 encoded image data",
                "x-looker-nullable": true,
                "type": "string",
                "x-looker-write-only": true
              },
              "favorite_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times content has been favorited, if present",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "use_custom_description": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the custom description should be used instead of the content description, if the item is associated with content"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time at which this section was last updated.",
          "readOnly": true,
          "format": "date-time"
        },
        "is_header": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is this a header section (has no items)",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "detail_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A URL pointing to a page showing further information about the content in the section.",
          "readOnly": true
        },
        "homepage_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id reference to parent homepage",
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of row"
        },
        "item_order": {
          "description": "ids of the homepage items in the order they should be displayed",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "ValidationErrorDetail": {
      "properties": {
        "documentation_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Documentation link",
          "readOnly": true,
          "format": "uri"
        },
        "field": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Field with error",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error info message",
          "readOnly": true
        },
        "code": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error code",
          "readOnly": true
        }
      },
      "x-looker-status": "stable",
      "required": [
        "documentation_url"
      ]
    },
    "LookmlModel": {
      "properties": {
        "project_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of project containing the model"
        },
        "has_content": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Does this model declaration have have lookml content?",
          "readOnly": true
        },
        "explores": {
          "description": "Array of explores (if has_content)",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "group_label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Label used to group explores in the navigation menus",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description for the explore",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the explore",
                "readOnly": true
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is this explore marked as hidden",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Label for the explore",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the model. Also used as the unique identifier"
        },
        "allowed_db_connection_names": {
          "description": "Array of names of connections this model is allowed to use",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unlimited_db_connections": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is this model allowed to use all current and future connections"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "UI-friendly name for this model",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "OIDCConfig": {
      "properties": {
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Enable/Disable OIDC authentication for the server"
        },
        "modified_by": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User id of user who last modified this config",
          "readOnly": true,
          "format": "int64"
        },
        "default_new_user_roles": {
          "description": "(Read-only) Roles that will be applied to new users the first time they login via OIDC",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "permission_set_id": {
                "description": "(Write-Only) Id of permission set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "permission_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/PermissionSet",
                "description": "(Read only) Permission set",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "model_set_id": {
                "description": "(Write-Only) Id of model set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "users_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get list of users with this role",
                "readOnly": true,
                "format": "uri"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of Role"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "model_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ModelSet",
                "description": "(Read only) Model set",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "auth_requires_role": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true"
        },
        "secret": {
          "description": "(Write-Only) Relying Party Secret (provided by OpenID Provider)",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "user_attribute_map_email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate email address field"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "set_roles_from_groups": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Set user roles in Looker based on groups from OIDC"
        },
        "user_attribute_map_first_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate first name"
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "new_user_migration_types": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'"
        },
        "test_slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Slug to identify configurations that are created in order to run a OIDC config test",
          "readOnly": true
        },
        "scopes": {
          "description": "Array of scopes to request.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token_endpoint": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "OpenID Provider Token Url"
        },
        "groups_with_role_ids": {
          "description": "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group in OIDC"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "role_ids": {
                "description": "Looker Role Ids",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "x-looker-status": "stable"
          }
        },
        "modified_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When this config was last modified",
          "readOnly": true,
          "format": "date-time"
        },
        "audience": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "OpenID Provider Audience"
        },
        "user_attribute_map_last_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate last name"
        },
        "identifier": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Relying Party Identifier (provided by OpenID Provider)"
        },
        "authorization_endpoint": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "OpenID Provider Authorization Url",
          "format": "uri"
        },
        "issuer": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "OpenID Provider Issuer"
        },
        "user_attributes_with_ids": {
          "description": "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of User Attribute in OIDC"
              },
              "user_attribute_ids": {
                "description": "Looker User Attribute Ids",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Required to be in OIDC assertion for login to be allowed to succeed"
              }
            },
            "x-looker-status": "stable"
          }
        },
        "groups": {
          "description": "(Read-only) Array of mappings between OIDC Groups and Looker Roles",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group in OIDC",
                "readOnly": true
              },
              "roles": {
                "description": "Looker Roles",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Role"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "default_new_user_group_ids": {
          "x-looker-write-only": true,
          "description": "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "default_new_user_role_ids": {
          "x-looker-write-only": true,
          "description": "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "default_new_user_groups": {
          "description": "(Read-only) Groups that will be applied to new users the first time they login via OIDC",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "include_by_default": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "New users are added to this group by default",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "external_group_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "External Id group if embed group",
                "readOnly": true
              },
              "user_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of users included in this group",
                "readOnly": true,
                "format": "int64"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "contains_current_user": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Currently logged in user is group member",
                "readOnly": true
              },
              "can_add_to_content_metadata": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Group can be used in content access controls"
              },
              "externally_managed": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Group membership controlled outside of Looker",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "alternate_email_login_allowed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
        },
        "user_attributes": {
          "description": "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of User Attribute in OIDC",
                "readOnly": true
              },
              "user_attributes": {
                "description": "Looker User Attributes",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UserAttribute"
                },
                "readOnly": true
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Required to be in OIDC assertion for login to be allowed to succeed",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "groups_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'"
        },
        "userinfo_endpoint": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "OpenID Provider User Information Url",
          "format": "uri"
        }
      },
      "x-looker-status": "beta"
    },
    "ContentValidationDashboardElement": {
      "properties": {
        "note_state": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note State",
          "readOnly": true
        },
        "title_hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether title is hidden",
          "readOnly": true
        },
        "title_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile title",
          "readOnly": true
        },
        "body_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile body text",
          "readOnly": true
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "subtitle_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Text tile subtitle text",
          "readOnly": true
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title of dashboard element",
          "readOnly": true
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id Of Query",
          "readOnly": true,
          "format": "int64"
        },
        "note_text_as_html": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note Text as Html",
          "readOnly": true
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id Of Look",
          "readOnly": true
        },
        "note_display": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note Display",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type",
          "readOnly": true
        },
        "note_text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Note Text",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "LookmlModelExploreFieldEnumeration": {
      "properties": {
        "value": {
          "x-looker-polymorphic-types": [
            {
              "type": "string"
            },
            {
              "type": "number",
              "format": "float"
            }
          ],
          "description": "Value",
          "readOnly": true,
          "format": "any",
          "x-looker-nullable": true,
          "type": "string"
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelNavExplore": {
      "properties": {
        "group_label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label used to group explores in the navigation menus",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description for the explore",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the explore",
          "readOnly": true
        },
        "hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is this explore marked as hidden",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label for the explore",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ResultMakerFilterablesListen": {
      "properties": {
        "dashboard_filter_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of a dashboard filter to listen to."
        },
        "field": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of the field in the filterable to filter with the value of the dashboard filter."
        }
      },
      "x-looker-status": "beta"
    },
    "GitStatus": {
      "properties": {
        "revertable": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "When true, the file can be reverted to an earlier state",
          "readOnly": true
        },
        "conflict": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "When true, changes to the local file conflict with the remote repository",
          "readOnly": true
        },
        "text": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Git description of the action",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "action": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Git action: add, delete, etc",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "UserAttributeGroupValue": {
      "properties": {
        "user_attribute_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of user attribute",
          "readOnly": true,
          "format": "int64"
        },
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Value of user attribute for group",
          "readOnly": true
        },
        "rank": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Precedence for resolving value for user",
          "readOnly": true,
          "format": "int64"
        },
        "value_is_hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true, the \"value\" field will be null, because the attribute settings block access to this value",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id of this group-attribute relation",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "group_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of group",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "DataActionFormSelectOption": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Human-readable label",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "CredentialsEmail": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "password_reset_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Url with one-time use secret token that the user can use to reset password",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "forced_password_reset_at_next_login": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Force the user to change their password upon their next login"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address used for user login"
        },
        "user_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this user",
          "readOnly": true,
          "format": "uri"
        }
      },
      "x-looker-status": "stable"
    },
    "DataActionFormField": {
      "properties": {
        "options": {
          "description": "If the form type is 'select', a list of options to be selected from.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Human-readable label",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "oauth_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The URL for an oauth link, if type is 'oauth_link'.",
          "readOnly": true
        },
        "default": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default value of the field.",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description of field",
          "readOnly": true
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the field is required. This is a user-interface hint. A user interface displaying this form should not submit it without a value for this field. The action server must also perform this validation.",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of field.",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Human-readable label",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "SamlUserAttributeWrite": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of User Attribute in Saml"
        },
        "user_attribute_ids": {
          "description": "Looker User Attribute Ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to saml config",
          "readOnly": true,
          "format": "uri"
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Required to be in Saml assertion for login to be allowed to succeed"
        }
      },
      "x-looker-status": "stable"
    },
    "Role": {
      "properties": {
        "permission_set_id": {
          "description": "(Write-Only) Id of permission set",
          "x-looker-nullable": true,
          "type": "integer",
          "x-looker-write-only": true,
          "format": "int64"
        },
        "permission_set": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/PermissionSet",
          "description": "(Read only) Permission set",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "model_set_id": {
          "description": "(Write-Only) Id of model set",
          "x-looker-nullable": true,
          "type": "integer",
          "x-looker-write-only": true,
          "format": "int64"
        },
        "users_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get list of users with this role",
          "readOnly": true,
          "format": "uri"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of Role"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "model_set": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ModelSet",
          "description": "(Read only) Model set",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "BackupConfiguration": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "custom_s3_bucket_region": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of region where the bucket is located"
        },
        "custom_s3_secret": {
          "description": "(Write-Only) AWS S3 secret used for custom-s3 backups",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "custom_s3_bucket": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of bucket for custom-s3 backups"
        },
        "custom_s3_key": {
          "description": "(Write-Only) AWS S3 key used for custom-s3 backups",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of backup: looker-s3 or custom-s3"
        }
      },
      "x-looker-status": "stable"
    },
    "ContentValidationLook": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ContentValidationSpace",
          "description": "Space of this look.",
          "readOnly": true
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Look Title",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "CreateDashboardFilter": {
      "properties": {
        "listens_to_filters": {
          "description": "Array of listeners for faceted filters",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Model of filter (required if type = field)"
        },
        "allow_multiple_values": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the filter allows multiple filter values"
        },
        "explore": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Explore of filter (required if type = field)"
        },
        "row": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Display order of this filter relative to other filters",
          "format": "int64"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "dimension": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dimension of filter (required if type = field)"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Title of filter"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the filter requires a value to run the dashboard"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of filter"
        },
        "ui_config": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "The visual configuration for this filter. Used to set up how the UI for this filter should appear.",
          "additionalProperties": {
            "type": "string",
            "format": "any"
          }
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of filter: one of date, number, string, or field"
        },
        "field": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Field information",
          "readOnly": true,
          "additionalProperties": {
            "type": "string",
            "format": "any"
          }
        },
        "default_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default value of filter"
        }
      },
      "x-looker-status": "beta",
      "required": [
        "dashboard_id",
        "name",
        "title",
        "type"
      ]
    },
    "LDAPUser": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to ldap config",
          "readOnly": true,
          "format": "uri"
        },
        "first_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "First name",
          "readOnly": true
        },
        "attributes": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Dictionary of user's attributes (name/value)",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "ldap_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP's Unique ID for the user",
          "readOnly": true
        },
        "last_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Last Name",
          "readOnly": true
        },
        "roles": {
          "description": "Array of user's roles (role names only)",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Primary email address",
          "readOnly": true
        },
        "ldap_dn": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP's distinguished name for the user record",
          "readOnly": true
        },
        "all_emails": {
          "description": "Array of user's email addresses and aliases for use in migration",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "groups": {
          "description": "Array of user's groups (group names only)",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "UserIdOnly": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "DataActionResponse": {
      "properties": {
        "webhook_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "ID of the webhook event that sent this data action. In some error conditions, this may be null.",
          "readOnly": true
        },
        "refresh_query": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "When true, indicates that the client should refresh (rerun) the source query because the data may have been changed by the action.",
          "readOnly": true
        },
        "success": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the data action was successful.",
          "readOnly": true
        },
        "validation_errors": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ValidationError",
          "description": "Validation errors returned by the data action server.",
          "readOnly": true
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Optional message returned by the data action server describing the state of the action that took place. This can be used to implement custom failure messages. If a failure is related to a particular form field, the server should send back a validation error instead. The Looker web UI does not currently display any message if the action indicates 'success', but may do so in the future.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "CredentialsTotp": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "verified": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "User has verified",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "MergeQuery": {
      "properties": {
        "total": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Total"
        },
        "result_maker_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Unique to get results",
          "readOnly": true,
          "format": "int64"
        },
        "source_queries": {
          "description": "Source Queries defining the results to be merged.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Display name"
              },
              "query_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of the query to merge",
                "format": "int64"
              },
              "merge_fields": {
                "description": "An array defining which fields of the source query are mapped onto fields of the merge query",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/MergeFields"
                }
              }
            },
            "x-looker-status": "beta"
          }
        },
        "column_limit": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Column Limit"
        },
        "dynamic_fields": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dynamic Fields"
        },
        "pivots": {
          "description": "Pivots",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vis_config": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Visualization Config",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "sorts": {
          "description": "Sorts",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "ContentValidatorError": {
      "properties": {
        "look": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ContentValidationLook",
          "readOnly": true
        },
        "dashboard_element": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ContentValidationDashboardElement",
          "readOnly": true
        },
        "dashboard": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ContentValidationDashboard",
          "readOnly": true
        },
        "dashboard_filter": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ContentValidationDashboardFilter",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "An id unique to this piece of content for this validation run",
          "readOnly": true
        },
        "errors": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A list of errors found for this piece of content",
          "readOnly": true,
          "format": "any"
        }
      },
      "x-looker-status": "beta"
    },
    "ContentMetaGroupUser": {
      "properties": {
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of associated Content Metadata",
          "readOnly": true
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "ID of associated user",
          "readOnly": true,
          "format": "int64"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "permission_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of permission: \"view\" or \"edit\"",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "group_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "ID of associated group",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "ContentValidationDashboard": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/ContentValidationSpace",
          "description": "Space",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dashboard Title",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "LDAPGroupRead": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of group in LDAP",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to ldap config",
          "readOnly": true,
          "format": "uri"
        },
        "roles": {
          "description": "Looker Roles",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "permission_set_id": {
                "description": "(Write-Only) Id of permission set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "permission_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/PermissionSet",
                "description": "(Read only) Permission set",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "model_set_id": {
                "description": "(Write-Only) Id of model set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "users_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get list of users with this role",
                "readOnly": true,
                "format": "uri"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of Role"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "model_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ModelSet",
                "description": "(Read only) Model set",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "ProjectWorkspace": {
      "properties": {
        "git_head": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Git head revision name",
          "readOnly": true
        },
        "workspace_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The id of the local workspace containing the project files",
          "readOnly": true
        },
        "git_status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The status of the local git directory",
          "readOnly": true
        },
        "git_branch": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/GitBranch",
          "description": "GitBranch",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "project_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The id of the project",
          "readOnly": true
        },
        "lookml_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The lookml syntax used by all files in this project",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "ApiVersionElement": {
      "properties": {
        "version": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Version number as it appears in '/api/xxx/' urls",
          "readOnly": true
        },
        "swagger_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Url for swagger.json for this version",
          "readOnly": true,
          "format": "uri"
        },
        "status": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Status of this version",
          "readOnly": true
        },
        "full_version": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Full version number including minor version",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LegacyFeature": {
      "properties": {
        "disallowed_as_of_version": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Looker version where this feature became a legacy feature",
          "readOnly": true
        },
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this feature is currently enabled",
          "readOnly": true
        },
        "enabled_locally": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this feature has been enabled by a user"
        },
        "approximate_disable_date": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Approximate date that this feature will be automatically disabled.",
          "readOnly": true,
          "format": "date-time"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "end_of_life_version": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Future Looker version where this feature will be removed",
          "readOnly": true
        },
        "approximate_end_of_life_date": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Approximate date that this feature will be removed.",
          "readOnly": true,
          "format": "date-time"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "disable_on_upgrade_to_version": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Looker version where this feature will be automatically disabled",
          "readOnly": true
        },
        "documentation_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "URL for documentation about this feature",
          "readOnly": true
        },
        "has_disabled_on_upgrade": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether this legacy feature may have been automatically disabled when upgrading to the current version.",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "stable"
    },
    "DialectInfoOptions": {
      "properties": {
        "ssl": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has SSL support",
          "readOnly": true
        },
        "username_required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Username is required",
          "readOnly": true
        },
        "project_name": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has project name support",
          "readOnly": true
        },
        "oauth_credentials": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has support for a service account",
          "readOnly": true
        },
        "tmp_table": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has tmp table support",
          "readOnly": true
        },
        "timezone": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has timezone support",
          "readOnly": true
        },
        "auth": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has auth support",
          "readOnly": true
        },
        "additional_params": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has additional params support",
          "readOnly": true
        },
        "schema": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has schema support",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "host": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has host support",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "DiscretePalette": {
      "properties": {
        "colors": {
          "description": "Array of colors in the palette",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique identity string",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Type of palette"
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Label for palette"
        }
      },
      "x-looker-status": "beta"
    },
    "Space": {
      "properties": {
        "is_embed_shared_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root embed shared space",
          "readOnly": true
        },
        "is_embed_users_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root embed users space",
          "readOnly": true
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "external_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login",
          "readOnly": true
        },
        "is_shared_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root shared space",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "is_users_root": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is the root user space",
          "readOnly": true
        },
        "creator_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id of Creator",
          "readOnly": true,
          "format": "int64"
        },
        "dashboards": {
          "description": "Dashboards",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "query_timezone": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Timezone in which the Dashboard will run by default.",
                "readOnly": true
              },
              "model": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookModel",
                "description": "Model",
                "readOnly": true
              },
              "content_metadata_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of content metadata",
                "readOnly": true,
                "format": "int64"
              },
              "refresh_interval": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds.",
                "readOnly": true
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Unique Id",
                "readOnly": true
              },
              "space": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/SpaceBase",
                "description": "Space",
                "readOnly": true
              },
              "content_favorite_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content Favorite Id",
                "readOnly": true,
                "format": "int64"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Dashboard Title",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "readonly": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Read-only",
                "readOnly": true
              },
              "refresh_interval_to_i": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Refresh Interval in milliseconds",
                "readOnly": true,
                "format": "int64"
              },
              "hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Hidden",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description",
                "readOnly": true
              },
              "user_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User",
                "readOnly": true,
                "format": "int64"
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "looks": {
          "description": "Looks",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "public": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is Public"
              },
              "public_slug": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Public Slug",
                "readOnly": true
              },
              "image_embed_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Image Embed Url",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Description"
              },
              "user": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/UserIdOnly",
                "description": "User",
                "readOnly": true
              },
              "is_run_on_load": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "auto-run query when Look viewed"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "space": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/SpaceBase",
                "description": "Space of this Look",
                "readOnly": true
              },
              "content_favorite_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Content Favorite Id",
                "readOnly": true,
                "format": "int64"
              },
              "last_accessed_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was last accessed by any user",
                "readOnly": true,
                "format": "date-time"
              },
              "deleted": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether or not a look is 'soft' deleted."
              },
              "dashboards": {
                "description": "Dashboards",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DashboardBase"
                },
                "readOnly": true
              },
              "google_spreadsheet_formula": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Google Spreadsheet Formula",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "created_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was created.",
                "readOnly": true,
                "format": "date-time"
              },
              "content_metadata_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of content metadata",
                "readOnly": true,
                "format": "int64"
              },
              "last_updater_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User that last updated the look.",
                "readOnly": true,
                "format": "int64"
              },
              "deleter_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Id of User that deleted the look.",
                "readOnly": true,
                "format": "int64"
              },
              "model": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/LookModel",
                "description": "Model",
                "readOnly": true
              },
              "excel_file_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Excel File Url",
                "readOnly": true
              },
              "public_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Public Url",
                "readOnly": true
              },
              "updated_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was updated.",
                "readOnly": true,
                "format": "date-time"
              },
              "space_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Space Id"
              },
              "last_viewed_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time last viewed in the Looker web UI",
                "readOnly": true,
                "format": "date-time"
              },
              "title": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Look Title"
              },
              "short_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Short Url",
                "readOnly": true
              },
              "query_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Query Id",
                "format": "int64"
              },
              "deleted_at": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Time that the Look was deleted.",
                "readOnly": true,
                "format": "date-time"
              },
              "view_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times viewed in the Looker web UI",
                "readOnly": true,
                "format": "int64"
              },
              "embed_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Embed Url",
                "readOnly": true
              },
              "favorite_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of times favorited",
                "readOnly": true,
                "format": "int64"
              },
              "user_id": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "User Id",
                "format": "int64"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "child_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Children Count",
          "readOnly": true,
          "format": "int64"
        },
        "is_personal": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is a user's personal space",
          "readOnly": true
        },
        "is_personal_descendant": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is descendant of a user's personal space",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Unique Name"
        },
        "is_embed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Space is an embed space",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "parent_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Parent"
        }
      },
      "x-looker-status": "beta",
      "required": [
        "name",
        "parent_id"
      ]
    },
    "DBConnectionOverride": {
      "properties": {
        "database": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Database name"
        },
        "after_connect_statements": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature"
        },
        "password": {
          "description": "(Write-Only) Password for server authentication",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "certificate": {
          "description": "(Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "port": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Port number on server"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "username": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Username for server authentication"
        },
        "context": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Context in which to override (`pdt` is the only allowed value)"
        },
        "file_type": {
          "description": "(Write-Only) Certificate keyfile type - .json or .p12",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "has_password": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the password is overridden in this context",
          "readOnly": true
        },
        "schema": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Scheme name"
        },
        "host": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Host name/address of server"
        },
        "jdbc_additional_params": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Additional params to add to JDBC connection string"
        }
      },
      "x-looker-status": "stable"
    },
    "SamlUserAttributeRead": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of User Attribute in Saml",
          "readOnly": true
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to saml config",
          "readOnly": true,
          "format": "uri"
        },
        "user_attributes": {
          "description": "Looker User Attributes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "user_can_view": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Non-admin users can see the values of their attributes and use them in filters"
              },
              "is_system": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Attribute is a system default",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "hidden_value_domain_whitelist": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
              },
              "user_can_edit": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Users can change the value of this attribute for themselves"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of user attribute"
              },
              "value_is_hidden": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If true, users will not be able to view values of this attribute"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
              },
              "default_value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Default value for when no value is set on the user"
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Human-friendly label for user attribute"
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Required to be in Saml assertion for login to be allowed to succeed",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "IntegrationRequiredField": {
      "properties": {
        "any_tag": {
          "description": "If present, supercedes 'tag' and matches a field that has any of the provided tags.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "tag": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Matches a field that has this tag.",
          "readOnly": true
        },
        "all_tags": {
          "description": "If present, supercedes 'tag' and matches a field that has all of the provided tags.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "Workspace": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "The unique id of this user workspace. Predefined workspace ids include \"production\" and \"dev\"",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "projects": {
          "description": "The local state of each project in the workspace",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "git_password": {
                "description": "(Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)",
                "x-looker-nullable": true,
                "type": "string",
                "x-looker-write-only": true
              },
              "folders_enabled": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If true, folders are enabled for this project"
              },
              "validation_required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository"
              },
              "git_username": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Git username for HTTPS authentication. (For production only, if using user attributes.)"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Project Id",
                "readOnly": true
              },
              "git_service_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the git service provider"
              },
              "git_password_user_attribute": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "User attribute name for password in per-user HTTPS authentication."
              },
              "git_username_user_attribute": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "User attribute name for username in per-user HTTPS authentication."
              },
              "allow_warnings": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false)."
              },
              "uses_git": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If true the project is configured with a git repository",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "is_example": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "If true the project is an example project and cannot be modified",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Project display name"
              },
              "deploy_secret": {
                "description": "(Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.",
                "x-looker-nullable": true,
                "type": "string",
                "x-looker-write-only": true
              },
              "git_remote_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Git remote repository url",
                "format": "uri"
              },
              "pull_request_mode": {
                "x-looker-values": [
                  "off",
                  "links",
                  "recommended",
                  "required"
                ],
                "x-looker-nullable": false,
                "type": "string",
                "description": "The git pull request policy for this project. Valid values are: \"off\", \"links\", \"recommended\", \"required\"."
              },
              "unset_deploy_secret": {
                "description": "(Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.",
                "x-looker-nullable": false,
                "type": "boolean",
                "x-looker-write-only": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "ContinuousPalette": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique identity string",
          "readOnly": true
        },
        "type": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Type of palette"
        },
        "stops": {
          "description": "Array of ColorStops in the palette",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "offset": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Offset in continuous palette (0 to 100)",
                "format": "int64"
              },
              "color": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "CSS color string"
              }
            },
            "x-looker-status": "beta"
          }
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Label for palette"
        }
      },
      "x-looker-status": "beta"
    },
    "CredentialsLookerOpenid": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "logged_in_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for most recent login using credential",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "logged_in_ip": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "IP address of client for most recent login using credential",
          "readOnly": true
        },
        "email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "EMail address used for user login",
          "readOnly": true
        },
        "user_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this user",
          "readOnly": true,
          "format": "uri"
        }
      },
      "x-looker-status": "stable"
    },
    "DBConnectionBase": {
      "properties": {
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of the connection. Also used as the unique identifier",
          "readOnly": true
        },
        "dialect": {
          "x-looker-nullable": false,
          "$ref": "#/definitions/Dialect",
          "description": "(Read-only) SQL Dialect details",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "snippets": {
          "description": "SQL Runner snippets for this connection",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Name of the snippet",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "sql": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "SQL text of the snippet",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": false,
                "type": "string",
                "description": "Label of the snippet",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookmlModelExplore": {
      "properties": {
        "group_label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label used to group explores in the navigation menus",
          "readOnly": true
        },
        "source_file": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Primary source_file file",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "null_sort_treatment": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "How nulls are sorted, possible values are \"low\", \"high\", \"first\" and \"last\"",
          "readOnly": true
        },
        "connection_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Connection name",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Fully qualified name model plus explore name",
          "readOnly": true
        },
        "tags": {
          "description": "An array of arbitrary string tags provided in the model for this explore.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "can_explain": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Can Explain",
          "readOnly": true
        },
        "model_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of model",
          "readOnly": true
        },
        "project_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of project",
          "readOnly": true
        },
        "can_subtotal": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Can use subtotals",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Explore name",
          "readOnly": true
        },
        "scopes": {
          "description": "Scopes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "access_filters": {
          "description": "Access filters",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "user_attribute": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "User attribute name",
                "readOnly": true
              },
              "field": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field to be filtered",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Label",
          "readOnly": true
        },
        "joins": {
          "description": "Views joined into this explore",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "view_label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Label to display in UI selectors",
                "readOnly": true
              },
              "sql_on": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL ON expression describing the join condition",
                "readOnly": true
              },
              "fields": {
                "description": "Fields of the joined view to pull into this explore",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "relationship": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "many_to_one, one_to_one, one_to_many, many_to_many",
                "readOnly": true
              },
              "outer_only": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Specifies whether all queries must use an outer join",
                "readOnly": true
              },
              "sql_table_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL table name to join",
                "readOnly": true
              },
              "foreign_key": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the dimension in this explore whose value is in the primary key of the joined view",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of this join (and name of the view to join)",
                "readOnly": true
              },
              "required_joins": {
                "description": "Names of joins that must always be included in SQL queries",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "sql_foreign_key": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "SQL expression that produces a foreign key",
                "readOnly": true
              },
              "type": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The join type: left_outer, full_outer, inner, or cross",
                "readOnly": true
              },
              "from": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of view to join",
                "readOnly": true
              },
              "dependent_fields": {
                "description": "Fields referenced by the join",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "supports_cost_estimate": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Cost estimates supported",
          "readOnly": true
        },
        "fields": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookmlModelExploreFieldset",
          "description": "Fields",
          "readOnly": true
        },
        "can_pivot_in_db": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Can pivot in the DB",
          "readOnly": true
        },
        "files": {
          "description": "List of model source files",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "access_filter_fields": {
          "type": "array",
          "description": "(DEPRECATED) Array of access filter field names",
          "readOnly": true,
          "x-looker-nullable": true,
          "x-looker-deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "Errors",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "field_error": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Is this a field error",
                "readOnly": true
              },
              "details": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Details",
                "readOnly": true,
                "format": "any"
              },
              "message": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error Message",
                "readOnly": true
              },
              "error_pos": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Error source location",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "can_total": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Can Total",
          "readOnly": true
        },
        "sets": {
          "description": "Sets",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name",
                "readOnly": true
              },
              "value": {
                "description": "Value set",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "view_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of view",
          "readOnly": true
        },
        "always_filter": {
          "description": "Always filter",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name",
                "readOnly": true
              },
              "value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Value",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "conditionally_filter": {
          "description": "Conditionally filter",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name",
                "readOnly": true
              },
              "value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Value",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "can_save": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Can Save",
          "readOnly": true
        },
        "hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is hidden",
          "readOnly": true
        },
        "supported_measure_types": {
          "description": "An array of items describing which custom measure types are supported for creating a custom measure 'baed_on' each possible dimension type.",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "dimension_type": {
                "x-looker-nullable": true,
                "type": "string",
                "readOnly": true
              },
              "measure_types": {
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "sql_table_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A sql_table_name expression that defines what sql table the view/explore maps onto. Example: \"prod_orders2 AS orders\" in a view named orders.",
          "readOnly": true
        },
        "aliases": {
          "description": "Aliases",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name",
                "readOnly": true
              },
              "value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Value",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "has_timezone_support": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has timezone support",
          "readOnly": true
        },
        "index_fields": {
          "description": "Array of index fields",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "SessionConfig": {
      "properties": {
        "session_minutes": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of minutes for user sessions.  Must be between 5 and 43200",
          "format": "int64"
        },
        "allow_persistent_sessions": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Allow users to have persistent sessions when they login"
        },
        "use_inactivity_based_logout": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Enforce session logout for sessions that are inactive for 15 minutes."
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "unlimited_sessions_per_user": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time)."
        }
      },
      "x-looker-status": "beta"
    },
    "Error": {
      "properties": {
        "documentation_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Documentation link",
          "readOnly": true,
          "format": "uri"
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error details",
          "readOnly": true
        }
      },
      "x-looker-status": "stable",
      "required": [
        "message",
        "documentation_url"
      ]
    },
    "Query": {
      "properties": {
        "share_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Share Url",
          "readOnly": true
        },
        "visible_ui_sections": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Visible UI Sections"
        },
        "column_limit": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Column Limit"
        },
        "limit": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Limit"
        },
        "fill_fields": {
          "description": "Fill Fields",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "query_timezone": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Query Timezone"
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Expanded Url",
          "readOnly": true
        },
        "view": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Explore Name"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "filter_expression": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Filter Expression"
        },
        "filters": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Filters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "has_table_calculations": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has Table Calculations",
          "readOnly": true
        },
        "row_total": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Raw Total"
        },
        "filter_config": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.",
          "additionalProperties": {
            "type": "string",
            "format": "any"
          }
        },
        "total": {
          "x-looker-nullable": true,
          "type": "boolean",
          "description": "Total"
        },
        "expanded_share_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Expanded Share Url",
          "readOnly": true
        },
        "model": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Model"
        },
        "dynamic_fields": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dynamic Fields"
        },
        "vis_config": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.",
          "additionalProperties": {
            "type": "string",
            "format": "any"
          }
        },
        "client_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated."
        },
        "sorts": {
          "description": "Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subtotals": {
          "description": "Fields on which to run subtotals",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Slug",
          "readOnly": true
        },
        "pivots": {
          "description": "Pivots",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runtime": {
          "x-looker-nullable": true,
          "type": "number",
          "description": "Runtime",
          "format": "double"
        },
        "fields": {
          "description": "Fields",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-looker-status": "stable",
      "required": [
        "model",
        "view"
      ]
    },
    "Snippet": {
      "properties": {
        "name": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Name of the snippet",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "sql": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "SQL text of the snippet",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Label of the snippet",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "MergeFields": {
      "properties": {
        "source_field_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Field name from the source query"
        },
        "field_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Field name to map onto in the merged results"
        }
      },
      "x-looker-status": "beta"
    },
    "WhitelabelConfiguration": {
      "properties": {
        "logo_file": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Customer logo image. Expected base64 encoded data (write-only)"
        },
        "logo_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Logo image url (read-only)",
          "readOnly": true
        },
        "show_email_sub_options": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Boolean to toggle showing email subscription options."
        },
        "allow_looker_mentions": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Boolean to toggle mentions of Looker in emails"
        },
        "favicon_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Favicon image url (read-only)",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "favicon_file": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Custom favicon image. Expected base64 encoded data (write-only)"
        },
        "default_title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default page title"
        },
        "show_docs": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Boolean to toggle showing docs"
        },
        "show_help_menu": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Boolean to toggle showing help menus"
        },
        "allow_looker_links": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Boolean to toggle links to Looker in emails"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "LookmlModelExploreAlias": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Value",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "InternalHelpResources": {
      "properties": {
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true and internal help resources content is not blank then the link for internal help resources will be show in the help menu and the content displayed within Looker"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "Integration": {
      "properties": {
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether the integration is available to users."
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description of the integration.",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "ID of the integration.",
          "readOnly": true
        },
        "icon_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "URL to an icon for the integration.",
          "readOnly": true
        },
        "supported_visualization_formattings": {
          "items": {
            "type": "string"
          },
          "description": "A list of visualization formatting options the integration supports. If unspecified, this will default to [\"apply\", \"noapply\"]. Valid values are: \"apply\", \"noapply\".",
          "readOnly": true,
          "x-looker-values": [
            "apply",
            "noapply"
          ],
          "x-looker-nullable": false,
          "type": "array"
        },
        "required_fields": {
          "description": "A list of descriptions of required fields that this integration is compatible with. If there are multiple entries in this list, the integration requires more than one field. If unspecified, no fields will be required.",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "any_tag": {
                "description": "If present, supercedes 'tag' and matches a field that has any of the provided tags.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "tag": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Matches a field that has this tag.",
                "readOnly": true
              },
              "all_tags": {
                "description": "If present, supercedes 'tag' and matches a field that has all of the provided tags.",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "integration_hub_id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "ID of the integration hub.",
          "readOnly": true,
          "format": "int64"
        },
        "supported_action_types": {
          "items": {
            "type": "string"
          },
          "description": "A list of action types the integration supports. Valid values are: \"cell\", \"query\", \"dashboard\".",
          "readOnly": true,
          "x-looker-values": [
            "cell",
            "query",
            "dashboard"
          ],
          "x-looker-nullable": false,
          "type": "array"
        },
        "supported_formats": {
          "items": {
            "type": "string"
          },
          "description": "A list of data formats the integration supports. If unspecified, this will default to [\"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\"]. Valid values are: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"json_detail_lite_stream\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\", \"csv_zip\".",
          "readOnly": true,
          "x-looker-values": [
            "txt",
            "csv",
            "inline_json",
            "json",
            "json_detail",
            "json_detail_lite_stream",
            "xlsx",
            "html",
            "wysiwyg_pdf",
            "assembled_pdf",
            "wysiwyg_png",
            "csv_zip"
          ],
          "x-looker-nullable": false,
          "type": "array"
        },
        "params": {
          "description": "Array of params for the integration.",
          "x-looker-nullable": false,
          "type": "array",
          "items": {
            "properties": {
              "value": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The current value of the parameter. Always null if the value is sensitive. When writing, null values will be ignored. Set the value to an empty string to clear it."
              },
              "user_attribute_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "When present, the param's value comes from this user attribute instead of the 'value' parameter. Set to null to use the 'value'."
              },
              "has_value": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the parameter has a value set.",
                "readOnly": true
              },
              "sensitive": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the parameter contains sensitive data like API credentials. If unspecified, this defaults to true.",
                "readOnly": true
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Whether the parameter is required to be set to use the destination. If unspecified, this defaults to false.",
                "readOnly": true
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of the parameter.",
                "readOnly": true
              },
              "description": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Short description of the parameter.",
                "readOnly": true
              },
              "label": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Label of the parameter.",
                "readOnly": true
              },
              "per_user": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "When true, this parameter must be assigned to a user attribute in the admin panel (instead of a constant value), and that value may be updated by the user as part of the integration flow.",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          }
        },
        "supported_download_settings": {
          "items": {
            "type": "string"
          },
          "description": "A list of all the download mechanisms the integration supports. The order is undefined: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this will default to [\"push\"]. Valid values are: \"push\", \"url\".",
          "readOnly": true,
          "x-looker-values": [
            "push",
            "url"
          ],
          "x-looker-nullable": false,
          "type": "array"
        },
        "supported_formattings": {
          "items": {
            "type": "string"
          },
          "description": "A list of formatting options the integration supports. If unspecified, this will default to [\"formatted\", \"unformatted\"]. Valid values are: \"formatted\", \"unformatted\".",
          "readOnly": true,
          "x-looker-values": [
            "formatted",
            "unformatted"
          ],
          "x-looker-nullable": false,
          "type": "array"
        },
        "uses_oauth": {
          "x-looker-nullable": true,
          "type": "boolean",
          "description": "Whether the integration uses oauth.",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "label": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Label for the integration.",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "GroupIdForGroupUserInclusion": {
      "properties": {
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of user",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "Manifest": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Manifest project name",
          "readOnly": true
        },
        "imports": {
          "description": "Imports for a project",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Dependency name",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Url for a remote dependency",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "ref": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Ref for a remote dependency",
                "readOnly": true
              },
              "is_remote": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Flag signifying if a dependency is remote or local",
                "readOnly": true
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "localization_settings": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LocalizationSettings",
          "description": "Localization settings for a project",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "ResultMakerFilterables": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of the filterable thing (Query or Merged Results).",
          "readOnly": true
        },
        "listen": {
          "description": "array of dashboard_filter_name: and field: objects.",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "dashboard_filter_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of a dashboard filter to listen to."
              },
              "field": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "The name of the field in the filterable to filter with the value of the dashboard filter."
              }
            },
            "x-looker-status": "beta"
          },
          "readOnly": true
        },
        "view": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The view this filterable comes from (used for field suggestions).",
          "readOnly": true
        },
        "model": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The model this filterable comes from (used for field suggestions).",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "OIDCUserAttributeWrite": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of User Attribute in OIDC"
        },
        "user_attribute_ids": {
          "description": "Looker User Attribute Ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "required": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Required to be in OIDC assertion for login to be allowed to succeed"
        }
      },
      "x-looker-status": "stable"
    },
    "DashboardBase": {
      "properties": {
        "query_timezone": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timezone in which the Dashboard will run by default.",
          "readOnly": true
        },
        "model": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookModel",
          "description": "Model",
          "readOnly": true
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "refresh_interval": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Refresh Interval, as a time duration phrase like \"2 hours 30 minutes\". A number with no time units will be interpreted as whole seconds.",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/SpaceBase",
          "description": "Space",
          "readOnly": true
        },
        "content_favorite_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content Favorite Id",
          "readOnly": true,
          "format": "int64"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dashboard Title",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "readonly": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Read-only",
          "readOnly": true
        },
        "refresh_interval_to_i": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Refresh Interval in milliseconds",
          "readOnly": true,
          "format": "int64"
        },
        "hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Hidden",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "beta"
    },
    "ModelsNotValidated": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Model name",
          "readOnly": true
        },
        "project_file_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Project file",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "DashboardLayoutComponent": {
      "properties": {
        "element_title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Dashboard element title, extracted from the Dashboard Element.",
          "readOnly": true
        },
        "row": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Row",
          "format": "int64"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Unique Id",
          "readOnly": true
        },
        "dashboard_element_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id Of Dashboard Element"
        },
        "deleted": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the dashboard layout component is deleted",
          "readOnly": true
        },
        "width": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Width",
          "format": "int64"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "column": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Column",
          "format": "int64"
        },
        "element_title_hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not the dashboard element title is displayed.",
          "readOnly": true
        },
        "height": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Height",
          "format": "int64"
        },
        "vis_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Visualization type, extracted from a query's vis_config",
          "readOnly": true
        },
        "dashboard_layout_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Dashboard Layout"
        }
      },
      "x-looker-status": "beta"
    },
    "LookmlModelExploreAlwaysFilter": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Value",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "LookModel": {
      "properties": {
        "id": {
          "x-looker-nullable": false,
          "type": "string",
          "description": "Model Id",
          "readOnly": true
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Model Label",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "UserAttribute": {
      "properties": {
        "user_can_view": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Non-admin users can see the values of their attributes and use them in filters"
        },
        "is_system": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Attribute is a system default",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "hidden_value_domain_whitelist": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Destinations to which a hidden attribute may be sent. Once set, cannot be edited."
        },
        "user_can_edit": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Users can change the value of this attribute for themselves"
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user attribute"
        },
        "value_is_hidden": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "If true, users will not be able to view values of this attribute"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Type of user attribute (\"string\", \"number\", \"datetime\", \"yesno\", \"zipcode\")"
        },
        "default_value": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default value for when no value is set on the user"
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Human-friendly label for user attribute"
        }
      },
      "x-looker-status": "stable"
    },
    "ContentFavorite": {
      "properties": {
        "look": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookBasic",
          "description": "Associated Look",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content Metadata Id associated with this ContentFavorite",
          "format": "int64"
        },
        "dashboard_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of a dashboard",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id which owns this ContentFavorite",
          "format": "int64"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "look_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of a look",
          "readOnly": true,
          "format": "int64"
        },
        "dashboard": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/DashboardBase",
          "description": "Associated Dashboard",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "Look": {
      "properties": {
        "public": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is Public"
        },
        "public_slug": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public Slug",
          "readOnly": true
        },
        "image_embed_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Image Embed Url",
          "readOnly": true
        },
        "description": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Description"
        },
        "user": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/UserIdOnly",
          "description": "User",
          "readOnly": true
        },
        "is_run_on_load": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "auto-run query when Look viewed"
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "space": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/SpaceBase",
          "description": "Space of this Look",
          "readOnly": true
        },
        "content_favorite_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Content Favorite Id",
          "readOnly": true,
          "format": "int64"
        },
        "last_accessed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was last accessed by any user",
          "readOnly": true,
          "format": "date-time"
        },
        "deleted": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Whether or not a look is 'soft' deleted."
        },
        "google_spreadsheet_formula": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Google Spreadsheet Formula",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was created.",
          "readOnly": true,
          "format": "date-time"
        },
        "content_metadata_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of content metadata",
          "readOnly": true,
          "format": "int64"
        },
        "last_updater_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that last updated the look.",
          "readOnly": true,
          "format": "int64"
        },
        "deleter_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of User that deleted the look.",
          "readOnly": true,
          "format": "int64"
        },
        "model": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/LookModel",
          "description": "Model",
          "readOnly": true
        },
        "excel_file_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Excel File Url",
          "readOnly": true
        },
        "public_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Public Url",
          "readOnly": true
        },
        "updated_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was updated.",
          "readOnly": true,
          "format": "date-time"
        },
        "space_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Space Id"
        },
        "last_viewed_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time last viewed in the Looker web UI",
          "readOnly": true,
          "format": "date-time"
        },
        "title": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Look Title"
        },
        "short_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short Url",
          "readOnly": true
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Query Id",
          "format": "int64"
        },
        "deleted_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Time that the Look was deleted.",
          "readOnly": true,
          "format": "date-time"
        },
        "view_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times viewed in the Looker web UI",
          "readOnly": true,
          "format": "int64"
        },
        "embed_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Embed Url",
          "readOnly": true
        },
        "favorite_count": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Number of times favorited",
          "readOnly": true,
          "format": "int64"
        },
        "user_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "User Id",
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "MergeQuerySourceQuery": {
      "properties": {
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Display name"
        },
        "query_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of the query to merge",
          "format": "int64"
        },
        "merge_fields": {
          "description": "An array defining which fields of the source query are mapped onto fields of the merge query",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "source_field_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field name from the source query"
              },
              "field_name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Field name to map onto in the merged results"
              }
            },
            "x-looker-status": "beta"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "GroupIdForGroupInclusion": {
      "properties": {
        "group_id": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Id of group",
          "readOnly": true,
          "format": "int64"
        }
      },
      "x-looker-status": "stable"
    },
    "SqlQueryCreate": {
      "properties": {
        "model_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of LookML Model (this or \"connection_id\" required)"
        },
        "connection_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Id of Connection (this or \"model_name\" required)"
        },
        "sql": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "SQL query"
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "beta"
    },
    "LDAPConfig": {
      "properties": {
        "force_no_page": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it."
        },
        "enabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Enable/Disable LDAP authentication for the server"
        },
        "modified_by": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "User id of user who last modified this config",
          "readOnly": true
        },
        "default_new_user_roles": {
          "description": "(Read-only) Roles that will be applied to new users the first time they login via LDAP",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "permission_set_id": {
                "description": "(Write-Only) Id of permission set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "permission_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/PermissionSet",
                "description": "(Read only) Permission set",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get this item",
                "readOnly": true,
                "format": "uri"
              },
              "model_set_id": {
                "description": "(Write-Only) Id of model set",
                "x-looker-nullable": true,
                "type": "integer",
                "x-looker-write-only": true,
                "format": "int64"
              },
              "users_url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to get list of users with this role",
                "readOnly": true,
                "format": "uri"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of Role"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "model_set": {
                "x-looker-nullable": true,
                "$ref": "#/definitions/ModelSet",
                "description": "(Read only) Model set",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "auth_requires_role": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Users will not be allowed to login at all unless a role for them is found in LDAP if set to true"
        },
        "user_bind_base_dn": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Distinguished name of LDAP node used as the base for user searches"
        },
        "has_auth_password": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "(Read-only) Has the password been set for the LDAP account used to access the LDAP server",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "set_roles_from_groups": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Set user roles in Looker based on groups from LDAP"
        },
        "user_attribute_map_last_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate last name"
        },
        "auth_username": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Distinguished name of LDAP account used to access the LDAP server"
        },
        "connection_tls": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Use Transport Layer Security"
        },
        "groups_finder_type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Identifier for a strategy for how Looker will search for groups in the LDAP server"
        },
        "user_attributes": {
          "description": "(Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of User Attribute in LDAP",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to ldap config",
                "readOnly": true,
                "format": "uri"
              },
              "user_attributes": {
                "description": "Looker User Attributes",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UserAttribute"
                },
                "readOnly": true
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Required to be in LDAP assertion for login to be allowed to succeed",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "user_attribute_map_first_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate first name"
        },
        "user_id_attribute_names": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name(s) of user record attributes used for matching user login id (comma separated list)"
        },
        "auth_password": {
          "description": "(Write-Only)  Password for the LDAP account used to access the LDAP server",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "connection_port": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP host port"
        },
        "modified_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "When this config was last modified",
          "readOnly": true
        },
        "test_ldap_password": {
          "description": "(Write-Only)  Test LDAP user password. For ldap tests only.",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "merge_new_users_by_email": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user."
        },
        "user_attribute_map_email": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate email address field"
        },
        "user_objectclass": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "(Optional) Name of user record objectclass used for finding user during login id"
        },
        "test_ldap_user": {
          "description": "(Write-Only)  Test LDAP user login id. For ldap tests only.",
          "x-looker-nullable": true,
          "type": "string",
          "x-looker-write-only": true
        },
        "user_attribute_map_ldap_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of user record attributes used to indicate unique record id"
        },
        "user_attributes_with_ids": {
          "description": "(Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of User Attribute in LDAP"
              },
              "user_attribute_ids": {
                "description": "Looker User Attribute Ids",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to ldap config",
                "readOnly": true,
                "format": "uri"
              },
              "required": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Required to be in LDAP assertion for login to be allowed to succeed"
              }
            },
            "x-looker-status": "stable"
          }
        },
        "groups_member_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP Group attribute that signifies the members of the groups. Most commonly 'member'"
        },
        "groups": {
          "description": "(Read-only) Array of mappings between LDAP Groups and Looker Roles",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group in LDAP",
                "readOnly": true
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to ldap config",
                "readOnly": true,
                "format": "uri"
              },
              "roles": {
                "description": "Looker Roles",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Role"
                },
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "default_new_user_group_ids": {
          "x-looker-write-only": true,
          "description": "(Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "default_new_user_role_ids": {
          "x-looker-write-only": true,
          "description": "(Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "connection_tls_no_verify": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Do not verify peer when using TLS"
        },
        "groups_user_attribute": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP Group attribute that signifies the user in a group. Most commonly 'dn'"
        },
        "default_new_user_groups": {
          "description": "(Read-only) Groups that will be applied to new users the first time they login via LDAP",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "include_by_default": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "New users are added to this group by default",
                "readOnly": true
              },
              "can": {
                "x-looker-nullable": false,
                "type": "object",
                "description": "Operations the current user is able to perform on this object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "external_group_id": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "External Id group if embed group",
                "readOnly": true
              },
              "user_count": {
                "x-looker-nullable": true,
                "type": "integer",
                "description": "Number of users included in this group",
                "readOnly": true,
                "format": "int64"
              },
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group"
              },
              "id": {
                "x-looker-nullable": false,
                "type": "integer",
                "description": "Unique Id",
                "readOnly": true,
                "format": "int64"
              },
              "contains_current_user": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Currently logged in user is group member",
                "readOnly": true
              },
              "can_add_to_content_metadata": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Group can be used in content access controls"
              },
              "externally_managed": {
                "x-looker-nullable": false,
                "type": "boolean",
                "description": "Group membership controlled outside of Looker",
                "readOnly": true
              }
            },
            "x-looker-status": "stable"
          },
          "readOnly": true
        },
        "groups_base_dn": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Base dn for finding groups in LDAP searches"
        },
        "user_custom_filter": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "(Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses."
        },
        "groups_with_role_ids": {
          "description": "(Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids",
          "x-looker-nullable": true,
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Name of group in LDAP"
              },
              "url": {
                "x-looker-nullable": true,
                "type": "string",
                "description": "Link to ldap config",
                "readOnly": true,
                "format": "uri"
              },
              "role_ids": {
                "description": "Looker Role Ids",
                "x-looker-nullable": true,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "x-looker-status": "stable"
          }
        },
        "alternate_email_login_allowed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled."
        },
        "groups_objectclasses": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches"
        },
        "connection_host": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "LDAP server hostname"
        }
      },
      "x-looker-status": "stable"
    },
    "ProjectError": {
      "properties": {
        "line_number": {
          "x-looker-nullable": true,
          "type": "integer",
          "description": "Line number in the file of this error",
          "readOnly": true,
          "format": "int64"
        },
        "sanitized_message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A version of the error message that does not contain potentially sensitive information. Suitable for situations in which messages are stored or sent to consumers outside of Looker, such as external logs. Sanitized messages will display \"(?)\" where sensitive information would appear in the corresponding non-sanitized message",
          "readOnly": true
        },
        "code": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A stable token that uniquely identifies this class of error, ignoring parameter values. Error message text may vary due to parameters or localization, but error codes do not. For example, a \"File not found\" error will have the same error code regardless of the filename in question or the user's display language",
          "readOnly": true
        },
        "file_path": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Name of the file containing this error",
          "readOnly": true
        },
        "explore": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The explore associated with this error",
          "readOnly": true
        },
        "help_url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "A link to Looker documentation about this error",
          "readOnly": true
        },
        "kind": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error classification: syntax, deprecation, model_configuration, etc",
          "readOnly": true
        },
        "params": {
          "x-looker-nullable": true,
          "type": "object",
          "description": "Error parameters",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Error message which may contain information such as dashboard or model names that may be considered sensitive in some use cases. Avoid storing or sending this message outside of Looker",
          "readOnly": true
        },
        "severity": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Severity: fatal, error, warning, info, success",
          "readOnly": true
        },
        "model_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The model associated with this error",
          "readOnly": true
        },
        "field_name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The field associated with this error",
          "readOnly": true
        }
      },
      "x-looker-status": "beta"
    },
    "DialectInfo": {
      "properties": {
        "supported_options": {
          "x-looker-nullable": true,
          "$ref": "#/definitions/DialectInfoOptions",
          "description": "Option support details",
          "readOnly": true
        },
        "default_max_connections": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default number max connections",
          "readOnly": true
        },
        "installed": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Is the supporting driver installed",
          "readOnly": true
        },
        "default_port": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Default port number",
          "readOnly": true
        },
        "name": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The name of the dialect",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "label": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "The human-readable label of the connection",
          "readOnly": true
        },
        "label_for_database_equivalent": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "What the dialect calls the equivalent of a normal SQL table",
          "readOnly": true
        }
      },
      "x-looker-status": "stable"
    },
    "CredentialsApi3": {
      "properties": {
        "url": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Link to get this item",
          "readOnly": true,
          "format": "uri"
        },
        "is_disabled": {
          "x-looker-nullable": false,
          "type": "boolean",
          "description": "Has this credential been disabled?",
          "readOnly": true
        },
        "created_at": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Timestamp for the creation of this credential",
          "readOnly": true
        },
        "id": {
          "x-looker-nullable": false,
          "type": "integer",
          "description": "Unique Id",
          "readOnly": true,
          "format": "int64"
        },
        "type": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "Short name for the type of this kind of credential",
          "readOnly": true
        },
        "client_id": {
          "x-looker-nullable": true,
          "type": "string",
          "description": "API key client_id",
          "readOnly": true
        },
        "can": {
          "x-looker-nullable": false,
          "type": "object",
          "description": "Operations the current user is able to perform on this object",
          "readOnly": true,
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "x-looker-status": "stable"
    }
  },
  "produces": [
    "application/json"
  ],
  "host": "bytecode.looker.com:19999",
  "schemes": [
    "https"
  ],
  "basePath": "/api/3.1"
}