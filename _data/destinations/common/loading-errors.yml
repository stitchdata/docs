# ------------------------------------------ #
#      Google BigQuery Loading Errors        #
# ------------------------------------------ #

## This file contains loading errors specific to Google BigQuery destinations.


firewall: &firewall "Connection refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections."

timestamp-out-of-range: &timestamp-out-of-range "timestamp out of range for {{ destination.display_name }} on [TIMESTAMP]"

integer-out-of-range: &integer-out-of-range "integer out of range for {{ destination.display_name }} on [INTEGER]"

decimal-out-of-range: &decimal-out-of-range "decimal out of range for {{ destination.display_name }} on [DECIMAL]"

table-name-limit: &table-name-limit "Table name [TABLE] is too long for {{ destination.display_name }}"

column-name-limit: &column-name-limit "Column name [COLUMN] is too long for {{ destination.display_name }}"

too-many-columns: &too-many-columns "ERROR: too many columns"

field-name-collision: &field-name-collision "Field collision on [COLUMN_NAME]"

schema-table-permission-denied: &schema-table-permission-denied "ERROR: permission denied for relation [SCHEMA/TABLE]"

reserved-datatype-suffix: &reserved-datatype-suffix "column names from client should not include reserved datatype suffix on [COLUMN_NAME]"

max-record-size: ""
# Can't accept a record larger than 3999998 bytes

# A single record is larger than the Stitch API limit of 4 Mb

all:
## Timestamp out of range
  - message: *timestamp-out-of-range
    id: "timestamp-out-of-range"
    applicable-to: &all-destinations "All destinations"
    level: &warning "warning"
    category: "Destination data type limits"
    summary: "Timestamp out of range"
    cause: "Timestamp data exceeds the destination's allowed range."
    data-type: "date"
    fix-it: &offending-values |
      Remove offending values in the source, or change them to be within the allowed range for the destination type:

      {% assign destinations = site.destinations | where:"content-type","destination-overview" | sort_natural:"display_name" %}

      <table class="attribute-list" style="font-size: 14px;">
      <tr>
      <td align="right">
      <strong>Destination</strong>
      </td>
      <td>
      <strong>Version</strong>
      </td>
      <td>
      <strong>Range</strong>
      </td>
      </tr>
      {% for destination in destinations %}
      {% assign version = destination.this-version | prepend: "v" %}
      {% if site.data.destinations[destination.type][version]data-types %}
      <tr>
      <td align="right">
      <a href="{{ destination.url | prepend: site.baseurl | append: "" }}"><strong>{{ destination.display_name }}</strong></a>
      </td>
      <td>
      {{ version }}
      </td>
      <td>
      {{ site.data.destinations[destination.type][version]data-types[error.data-type]range | markdownify }}
      </td>
      </tr>
      {% endif %}
      {% endfor %}
      </table>

## Integer out of range
  - message: *integer-out-of-range
    id: "integer-out-of-range"
    applicable-to: *all-destinations
    level: *warning
    category: "Destination data type limits"
    summary: "Integer out of range"
    cause: "Integer data exceeds the destination's allowed range."
    data-type: "integer"
    fix-it: *offending-values

## Decimal out of range
  - message: *decimal-out-of-range
    id: "decimal-out-of-range"
    applicable-to: *all-destinations
    level: *warning
    category: "Destination data type limits"
    summary: "Decimal out of range"
    cause: "Decimal data exceeds the destination's allowed range."
    data-type: "number"
    fix-it: *offending-values

## Table name length exceeds limit
  - message: *table-name-limit
    id: "table-name-limit"
    applicable-to: *all-destinations
    level: *warning
    category: "Destination object naming"
    summary: "Table name exceeds destination limit"
    cause: "A table name contains more characters than allowed by the destination."
    object: "table"
    fix-it: &object-names |
      1. If possible, change the {{ error.object }} name in the source to be less than the destination's limit for {{ error.object }} names, or
      2. De-select the {{ error.object }} in Stitch

      If neither solution is feasible, you may need to select a destination with a higher character limit for {{ error.object }} names. Refer to the table below for each destination's {{ error.object }} name limits:

      {% assign destinations = site.destinations | where:"content-type","destination-overview" | sort_natural:"display_name" %}

      <table class="attribute-list">
      <tr>
      <td align="right" width="45%; fixed">
      <strong>Destination</strong>
      </td>
      <td>
      <strong>Version</strong>
      </td>
      <td>
      <strong>Limit</strong>
      </td>
      </tr>
      {% for destination in destinations %}
      {% assign version = destination.this-version | prepend: "v" %}
      <tr>
      <td align="right">
      <a href="{{ destination.url | prepend: site.baseurl | append: "" }}"><strong>{{ destination.display_name }}</strong></a>
      </td>
      <td>
      {{ version }}
      </td>
      <td>
      {% assign attribute = error.object | append: "-name-length" %}
      {{ site.data.destinations[destination.type]destination-details[attribute] }}
      </td>
      </tr>
      {% endfor %}
      </table>

## Column name length exceeds limit
  - message: *column-name-limit
    id: "column-name-limit"
    applicable-to: *all-destinations
    level: *warning
    category: "Destination object naming"
    summary: "Column name exceeds destination limit"
    cause: "A column name contains more characters than allowed by the destination."
    object: "column"
    fix-it: *object-names


## Table contains too many columns
  - message: *too-many-columns
    id: "column-limit-exceeded"
    applicable-to: *all-destinations
    level: *warning
    category: "Destination object limits"
    summary: "Table contains too many columns"
    cause: "A table contains more columns than the destination allows."
    fix-it: |
      De-select columns in Stitch to allow data to continue loading into the destination table.

      Refer to the table below for each destination's columns per table limit:

      {% assign destinations = site.destinations | where:"content-type","destination-overview" | sort_natural:"display_name" %}

      <table class="attribute-list">
      <tr>
      <td align="right" width="45%; fixed">
      <strong>Destination</strong>
      </td>
      <td>
      <strong>Version</strong>
      </td>
      <td>
      <strong>Limit</strong>
      </td>
      </tr>
      {% for destination in destinations %}
      {% assign version = destination.this-version | prepend: "v" %}
      <tr>
      <td align="right">
      <a href="{{ destination.url | prepend: site.baseurl | append: "#destination-details" }}"><strong>{{ destination.display_name }}</strong></a>
      </td>
      <td>
      {{ version }}
      </td>
      <td>
      {{ site.data.destinations[destination.type]destination-details.max-columns-per-table }}
      </td>
      </tr>
      {% endfor %}
      </table>


## Field name collision
  - message: *field-name-collision
    id: "field-name-collision"
    applicable-to: *all-destinations
    level: *warning
    category: "Destination object naming"
    summary: "Column name collision"
    cause: |
      Two columns are replicated that canonicalize to the same name.

      For example: In Amazon Redshift, Stitch lowercases column names `cUsTomErId` and `customerid` would can
    fix-it: |
      If possible, re-name one of the columns in the source so that both column names will be unique when replicated to the destination.

## Reserved data type suffix
  - message: *reserved-datatype-suffix
    id: "reserved-data-type-suffix"
    applicable-to: *all-destinations
    level: *warning
    category: "Stitch object naming"
    summary: "Table or column contains reserved words"
    cause: "A table or column contains reserved words."
    fix-it: |
      Remove the reserved words by re-naming the table or column in the source.