# -------------------------- #
#     PostgreSQL Reference   #
# -------------------------- #

# This file contains the data used in this destination's overview/reference
# guide. Includes supported connection types, data type limits, object
# naming rules, etc.


# -------------------------- #
#         DEFAULTS           #
# -------------------------- #

# The sections below contain key:value pairs for each category.
# This is done so that individual values can be called instead of having
# to loop through the entire list of items to get a single thing.


# -------------------------- #
#     Destination Details    #
# -------------------------- #

destination-details-info:
  fully-managed: &fully-managed |
    Depends {{ info-icon | replace:"TOOLTIP","Heroku instances include maintenance; Amazon RDS & self-hosted instances do not." }}
  pricing-model: &pricing-model |
    Varies
  pricing-details: &pricing-details |
    The software for hosting your own PostgreSQL instance is open-source, meaning it's free. Heroku and Amazon RDS have a variety of plans to choose from.
  free-option: &free-option |
    Depends {{ info-icon | replace:"TOOLTIP","Free options vary by provider." }}


# -------------------------- #
#       Stitch Details       #
# -------------------------- #

# Details about Stitch's implementation &
# requirements for the destination.

stitch-details-info:
  release-status: &release-status |
    Released
  pricing-tier: &pricing-tier |
    All Stitch plans
  supported-versions: &supported-versions |
    9.3 or higher

# Connection methods

  connection-methods:
    ssl: &connection-methods-ssl |
      true
    ssh: &connection-methods-ssh |
      true
    vpn: &connection-methods-vpn |
      false

  # workload-performance-management: &workload-performance-management |
  #   true

# -------------------------- #
#         Replication        #
# -------------------------- #

replication-info:
  incremental-replication:
    upserts: &incremental-rep-upserts |
      true
    append: &incremental-rep-append |
      true

  primary-keys:
    supported: &primary-key-support |
      true

  multiple-data-types:
    supported: &multiple-data-type-support |
      false

  nested-structures:
    supported: &nested-structure-support |
      false

## Refer to _data/destinations/reference/incompatibilities.yml
## for incompatible sources

# -------------------------- #
#         Limitations        #
# -------------------------- #

# -------------------------- #
#      Object name limits    #
# -------------------------- #

object-name-limit-info:
  case-sensitivity: &case-sensitivity "Sensitive"
  tables: &table-name-length "63 characters"
  columns: &column-name-length "59 characters"

# -------------------------- #
#         Table limits       #
# -------------------------- #

table-limit-info:
  max-columns-per-table: &max-columns-per-table "250-1,600 columns"
  max-per-database: &max-per-database "100,000 tables"

# -------------------------- #
#      Data type limits      #
# -------------------------- #

data-limit-info:
  max-record-size: &max-record-size "4 MB"

  date-and-time:
    timezone-support: &timezone-support |
      false

    date-range: &date-range "4713 BC to 294276 AD"
    timestamp-range: &timestamp-range "4713 BC to 294276 AD"

  integer-range: &integer-range "-9223372036854775808 to 9223372036854775807"

  decimal-range: &decimal-range |
    Up to 131,072 digits before the decimal; up to 16,383 digits after

  strings:
    max-width: &strings-max-width "None"

# -------------------------- #
#     Object naming rules    #
# -------------------------- #

# Naming scenarios for columns
# The example value for column-name is _!CuStOmEr# ID

column-naming-info:
  with-mixed-case: &with-mixed-case |
    {{ column-name | remove: "_!" | remove: "# " }}

  with-spaces: &with-spaces |
    {{ column-name | downcase | remove: "_!" | remove: "#" }}

  with-unsupported-characters: &with-unsupported-characters |
    {{ column-name | downcase | remove: "_!" | remove: "#" }}

  with-underscore-start: &with-underscore-start |
    {{ column-name | downcase | remove: "!" | remove: "# " }}

  with-non-letter-start: &with-non-letter-start |
    {{ column-name | downcase | remove: "_!" | remove: "# " }}


reserved-words: "https://www.postgresql.org/docs/9.6/static/sql-keywords-appendix.html"

# -------------------------- #
#       LIST OF VALUES       #
# -------------------------- #

# This is all the values from the sections up there ^ in list form.
# This allows forloops to be used to display the data all at once instead of 
# Calling each thing individually.

# Note that anything preceeded by an asterisk is a reference. This means that
# to change its value, you need to find the corresponding anchor (preceeded by an
# ampersand) in the section up there ^.

# For example: To change the value of *pricing-tier, you'd look for &pricing-tier
# and then change whatever you need to change.

attributes:
  - id: "release-status"
    categories: "stitch-details"
    value: *release-status 
    
  - id: "pricing-tier"
    categories: "stitch-details"
    value: *pricing-tier

  - id: "supported-versions"
    categories: "stitch-details"
    value: *supported-versions
    description: |
      {{ destination.display_name }} destinations must be running version 9.3 or newer.

  - id: "ssl-connections"
    categories: "stitch-details"
    value: *connection-methods-ssl
    description: |
      Stitch will attempt to use SSL to connect by default. No additional configuration is needed on your part.

  - id: "ssh-connections"
    categories: "stitch-details"
    value: *connection-methods-ssh
    description: |
      Stitch supports using SSH tunnels to connect to the following {{ destination.display_name }}-backed destinations:

      - [Amazon {{ destination.display_name }}-RDS]({{ link.security.ssh-amazon | prepend: site.baseurl }})
      - [Self-hosted {{ destination.display_name }}]({{ link.security.ssh-generic | prepend: site.baseurl }})

  - id: "vpn-connections"
    categories: "stitch-details"
    value: *connection-methods-vpn

  - id: "all-setup-instructions"
    categories: "stitch-details"
    description: |
      {{ default.description-full | flatify | markdownify }}

  - id: "incremental-replication-upserts"
    categories: "replication"
    value: *incremental-rep-upserts
    description: |
      Using a table's Primary Keys, Stitch will perform an update operation on existing rows to overwrite the data.

  - id: "primary-keys"
    categories: "replication"
    value: *primary-key-support
    description: |
      {{ destination.display_name }} destinations natively support Primary Keys.

      Stitch requires Primary Keys to de-dupe data during Incremental Replication. Primary Key columns are created using [Primary Key constraints](https://www.postgresql.org/docs/10/static/ddl-constraints.html#DDL-CONSTRAINTS-PRIMARY-KEYS){:target="new"}, which requires that values be both unique and not null.

  - id: "multiple-data-types"
    categories: "replication"
    value: *multiple-data-type-support
    important: true
    description: |
      {{ destination.display_name }} destinations do not support multiple data types in a single column.

      To accommodate this scenario, Stitch will create additional columns for each data type. Refer to the [Table structural changes guide]({{ link.destinations.storage.structure-changes | prepend: site.baseurl }}) for examples and more info.

  - id: "nested-data-structures"
    categories: "replication"
    value: *nested-structure-support
    important: true
    description: |
      {{ destination.display_name }} destinations do not have native support for nested data structures.

      To ensure nested data can be loaded, Stitch will flatten objects and arrays into columns and subtables, respectively. For more info and examples, refer to the [Handling nested data structures guide]({{ link.destinations.storage.nested-structures | prepend: site.baseurl }}).

  - id: "incompatible-sources"
    categories: "replication"
    important: true
    ## The value and description for this live in _data/destinations/reference/defaults.yml

  - id: "case-sensitivity"
    categories: "object-name-limits"
    value: *case-sensitivity
    description: |
      This means that {{ destination.display_name }} destinations treat upper- and lowercase characters as different characters. For example: `CUSTOMERID` and `customerid` are unique.

      Refer to the [Column naming section of this guide](#column-naming) for examples.

  - id: "table-name-length"
    categories: "object-name-limits"
    value: *table-name-length
    important: true
    description: |
      Tables with names that exceed this limit will be rejected. Rejected tables are logged in the [`_sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).
      
  - id: "column-name-length"
    categories: "object-name-limits"
    value: *column-name-length
    description: |
      Columns with names that exceed this limit will be rejected. Rejected columns are logged in the [`_sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "max-columns-per-table"
    categories: "table-limits"
    value: *max-columns-per-table

  - id: "max-tables-per-database"
    categories: "table-limits"
    value: *max-per-database

  - id: "max-record-size"
    categories: "data-limits"
    important: true
    value: *max-record-size
    description: |
      Records that exceed this limit will be rejected. Rejected columns are logged in the [`_sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "date-and-time-timezone-support"
    categories: "data-limits"
    value: *timezone-support
    description: |
      {{ destination.display_name }} will store the value in UTC as `TIMESTAMP WITHOUT TIMEZONE`.

      More info about timestamp data types can be found in [PostgreSQL's documentation](https://www.postgresql.org/docs/10/static/datatype-datetime.html){:target="new"}.

  - id: "date-and-time-date-range"
    categories: "data-limits"
    value: *date-range
    description: |
      Date values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

      More info about {{ destination.display_name }} date data types can be found in [PostgreSQL's documentation](https://www.postgresql.org/docs/10/static/datatype-datetime.html){:target="new"}.

  - id: "date-and-time-timestamp-range"
    categories: "data-limits"
    value: *timestamp-range
    description: |
      Timestamp values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

      More info about {{ destination.display_name }} time data types can be found in [PostgreSQL's documentation](https://www.postgresql.org/docs/10/static/datatype-datetime.html){:target="new"}.

  - id: "integer-range"
    categories: "data-limits"
    value: *integer-range
    description: |
      Integer values outside of this range will be rejected and logged in the [`_sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "decimal-range"
    categories: "data-limits"
    value: *decimal-range
    description: |
      Decimal values outside of this range will be rejected and logged in the [`_sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

      More info about decimal data types can be found in [PostgreSQL's documentation](https://www.postgresql.org/docs/10/static/datatype-numeric.html){:target="new"}.

  - id: "strings-max-width"
    categories: "data-limits"
    value: *strings-max-width
    important: true
    description: |
      {{ destination.display_name }} stores all `VARCHAR/TEXT` data as `TEXT`, which can store strings with unlimited lengths.

      While there aren't any size limits on string data, the record as a whole must still be less than 4 MB or it will be rejected and logged in the [`_sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "mixed-case"
    categories: "column-naming"
    example: |
      {{ column-name | remove: "_!" | remove: "# " }}
    value: *with-mixed-case

  - id: "with-spaces"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | remove: "_!" | remove: "#" }}
    value: *with-spaces

  - id: "with-unsupported-characters"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | remove: "_" }}
    value: *with-unsupported-characters

  - id: "with-underscore-start"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | remove: "!" | remove: "# " }}
    value: *with-underscore-start

  - id: "with-non-letter-start"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | replace: "_!","123" | remove: "# " }}
    value: *with-non-letter-start